{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/library/modules/_an-instance.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/es6.promise.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_invoke.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/library/modules/_task.js","webpack:///./node_modules/core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/core-js/library/modules/_perform.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/core-js/library/modules/_set-species.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_redefine-all.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/vue-qrcode-reader/dist/vue-qrcode-reader.common.js","webpack:///./node_modules/core-js/library/fn/promise.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/vue-qrcode-reader/index.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/library/modules/_for-of.js","webpack:///./src/views/QrcodeScan.vue?3327","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///src/views/QrcodeScan.vue","webpack:///./src/views/QrcodeScan.vue?9a61","webpack:///./src/views/QrcodeScan.vue?e1b3","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/library/modules/_microtask.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_user-agent.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/library/modules/_species-constructor.js","webpack:///./src/views/QrcodeScan.vue?6c12","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js","webpack:///./node_modules/core-js/library/modules/_is-object.js"],"names":["hasOwnProperty","module","exports","it","key","call","toInteger","__webpack_require__","max","Math","min","index","length","Constructor","name","forbiddenField","undefined","TypeError","$at","String","iterated","this","_t","_i","point","O","value","done","split","isObject","S","fn","val","toString","valueOf","document","is","createElement","defined","Object","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","global","ctx","classof","$export","aFunction","anInstance","forOf","speciesConstructor","task","set","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","PROMISE","process","versions","v8","$Promise","isNode","empty","newPromiseCapability","f","USE_NATIVE","promise","resolve","FakePromise","constructor","exec","PromiseRejectionEvent","then","indexOf","e","isThenable","notify","isReject","_n","chain","_c","_v","ok","_s","i","run","reaction","result","exited","handler","fail","reject","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","console","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","v","onrejectionhandled","$reject","_d","_w","slice","$resolve","wrapper","executor","err","prototype","onFulfilled","onRejected","push","catch","C","G","W","F","Promise","r","capability","$$reject","x","iter","all","iterable","values","remaining","$index","alreadyCalled","race","args","that","un","apply","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","P","documentElement","cof","propertyIsEnumerable","dP","createDesc","object","IObject","ArrayProto","Array","ceil","floor","isNaN","core","R","finally","onFinally","isFunction","ARG","arguments","tryGet","T","B","callee","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","id","listener","event","data","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","clear","try","callbackfn","promiseCapability","def","has","tag","stat","configurable","DESCRIPTORS","SPECIES","KEY","get","SAFE_CLOSING","riter","from","skipClosing","safe","arr","MATCH","re","store","uid","Symbol","USE_SYMBOL","$exports","toObject","IE_PROTO","ObjectProto","shared","version","__e","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","target","src","px","random","concat","PROTOTYPE","type","source","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","expProto","a","b","c","virtual","U","PromiseCapability","$$resolve","t","n","o","l","m","d","defineProperty","enumerable","__esModule","default","p","s","window","self","__g","u","h","k","y","g","match","parseInt","RTCPeerConnection","_eventMap","removeEventListener","extractVersion","wrapPeerConnectionEvent","disableLog","Error","disableWarnings","log","deprecated","warn","detectBrowser","navigator","browser","mozGetUserMedia","webkitGetUserMedia","mediaDevices","writable","options","render","staticRenderFns","_scopeId","computed","forEach","esModule","style","display","contentWindow","open","write","close","create","mode","copyright","detectHandler","locateHandler","minDelay","performance","content","location","requestAnimationFrame","captureFrame","buffer","terminate","mark","wrap","prev","sent","abrupt","stop","charAt","width","height","drawImage","getImageData","naturalWidth","naturalHeight","videoWidth","videoHeight","getContext","startsWith","includes","host","test","FileReader","readAsDataURL","w","E","return","getIteratorMethod","onreadystatechange","__proto__","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptor","isArray","component","install","Vue","use","mixins","props","camera","validator","track","Boolean","cameraInstance","destroyed","stopScanning","shouldStream","shouldScan","scanInterval","trackRepaintFunction","color","constraints","audio","video","ideal","facingMode","exact","watch","paintPauseFrame","clearPauseFrame","clearTrackingLayer","startScanning","$emit","init","mounted","beforeDestroy","beforeResetCamera","$refs","onDetect","onLocate","repaintTrackingLayer","normalizeLocation","trackingLayer","offsetWidth","clearRect","pauseFrame","putImageData","charCodeAt","defineProperties","_k","Arguments","_","M","L","j","I","D","N","A","BREAK","RETURN","MutationObserver","WebKitMutationObserver","standalone","createTextNode","observe","characterData","regeneratorRuntime","_invoke","arg","__await","method","delegate","_sent","dispatchException","iterator","resultName","nextLoc","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","completion","reset","asyncIterator","toStringTag","displayName","isGeneratorFunction","setPrototypeOf","awrap","AsyncIterator","async","reverse","pop","rval","complete","finish","delegateYield","URL","webkitURL","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","Blob","Worker","createObjectURL","encodeURIComponent","topLeftCorner","topRightCorner","bottomLeftCorner","bottomRightCorner","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","videoEl","stream","getTracks","getUserMedia","srcObject","mozSrcObject","shimChrome","shimFirefox","shimEdge","shimSafari","browserDetails","commonShim","shimPeerConnection","browserShim","shimCreateObjectURL","shimGetUserMedia","shimMediaStream","shimSourceObject","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimMaxMessageSize","shimSendThrowTypeError","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimReplaceTrack","shimGetDisplayMedia","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","endsWith","Map","trackIdentifier","trackId","MediaStream","webkitMediaStream","transceiver","receiver","_ontrack","setRemoteDescription","_ontrackpoly","getReceivers","find","Event","streams","dispatchEvent","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","addTrack","removeTrack","splice","addStream","removeStream","RTCRtpSender","RTCRtpReceiver","getStats","srcElement","MediaStreamTrack","DOMException","HTMLMediaElement","_srcObject","revokeObjectURL","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","map","filter","sdp","_reverseStreams","_streams","replace","RegExp","RTCSessionDescription","signalingState","setLocalDescription","webkitRTCPeerConnection","iceTransportPolicy","iceTransports","generateCertificate","timestamp","localcandidate","remotecandidate","names","RTCIceCandidate","addIceCandidate","getDisplayMedia","frameRate","mandatory","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","optional","toUpperCase","advanced","JSON","parse","stringify","getSupportedConstraints","enumerateDevices","some","label","toLowerCase","deviceId","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getSources","groupId","echoCancellation","bind","getAudioTracks","getVideoTracks","RTCIceGatherer","enabled","RTCDtmfSender","RTCDTMFSender","iceServers","replaceTrack","setTrack","urls","url","inboundrtp","outboundrtp","candidatepair","writeRtpDescription","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","_initialTrackId","sendEncodingParameters","ssrc","rtx","localCName","codecs","headerExtensions","fecMechanisms","payloadType","preferredPayloadType","parameters","apt","clockRate","numChannels","rtcpFeedback","parameter","uri","offer","answer","getRemoteCandidates","foundation","ip","priority","protocol","addRemoteCandidate","code","NotSupportedError","InvalidAccessError","OperationError","MediaStreamTrackEvent","_dispatchEvent","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","getRemoteStreams","_createTransceiver","iceTransport","localCapabilities","remoteCapabilities","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clone","_createIceGatherer","shift","bufferedCandidateEvents","bufferCandidates","candidate","state","_gather","onlocalcandidate","sdpMid","sdpMLineIndex","ufrag","usernameFragment","writeCandidate","assign","parseCandidate","toJSON","getMediaSections","getDescription","join","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","encodings","rtcp","cname","compound","rtcpParameters","send","receive","splitSections","parseRtpParameters","matchPrefix","isRejected","rejected","getIceParameters","getDtlsParameters","role","start","_updateSignalingState","substr","splitLines","getKind","getDirection","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","setTransport","setRemoteCandidates","getCapabilities","new","closed","checking","connected","completed","disconnected","failed","connecting","createOffer","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","getLocalCandidates","createAnswer","reducedSize","trim","substring","relatedAddress","relatedPort","tcpType","parseIceOptions","parseRtpMap","channels","writeRtpMap","parseExtmap","direction","writeExtmap","preferredId","parseFmtp","writeFmtp","parseRtcpFb","writeRtcpFb","parseSsrcMedia","attribute","parseFingerprint","algorithm","fingerprints","password","maxptime","codecPayloadType","fec","mechanism","maxBitrate","mux","writeMediaSection","parseMLine","fmt","parseOLine","username","sessionId","sessionVersion","netType","addressType","address","RTCTrackEvent","mozRTCPeerConnection","credential","mozRTCSessionDescription","mozRTCIceCandidate","DataChannel","RTCDataChannel","mediaSource","InternalError","SecurityError","The operation is insecure.","require","getSettings","applyConstraints","_localStreams","getStreamById","_remoteStreams","_onaddstream","_onaddstreampoly","RTCTransceiver","getTransceivers","sender","setDirection","addTransceiver","delete","setAttribute","RTCSctpTransport","_sctp","Number","POSITIVE_INFINITY","size","byteLength","readyState","sctp","maxMessageSize","createDataChannel","parseSsrcGroup","semantics","ssrcs","isValidSDP","ReferenceError","z","QObject","X","findChild","V","J","H","q","K","$","Z","Y","Q","ee","te","ne","for","keyFor","useSetter","useSimple","isExtensible","preventExtensions","NEED","fastKey","getWeak","onFreeze","check","t0","$createElement","_self","staticClass","directives","rawName","expression","ref","attrs","autoplay","muted","playsinline","domProps","onChangeInput","files","processFile","accept","capture","multiple","on","change","onDragOver","onDrop","dataTransfer","getData","processUrl","drop","preventDefault","stopPropagation","dragenter","dragleave","dragover","TO_STRING_TAG","DOMIterables","Collection","TO_STRING","pos","anObject","getKeys","Properties","descriptor","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","obj","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","record","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegateResult","maybeInvokeDelegate","info","pushTryEntry","locs","entry","resetTryEntry","iteratorMethod","genFun","ctor","skipTempReset","rootEntry","rootRecord","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","thrown","accidentalStrictMode","_dist_vue_qrcode_reader_common__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","dPs","enumBugKeys","Empty","createDict","iframeDocument","iframe","lt","gt","isArrayIter","getIterFn","step","iterFn","_vm","min-height","dark","fixed","flat","tabs","icon","click","goToHome","switchCamera","_e","imgClick","_uid","selected","decode","onDecode","onInit","detect","asyncGeneratorStep","gen","_next","_throw","promise_default","_asyncToGenerator","axios","QrcodeScanvue_type_script_lang_js_","components","QrcodeStream","vue_qrcode_reader","QrcodeCapture","text","paintGreenText","paintBlueDots","background","bottomNav","isValid","noRearCamera","noFrontCamera","convertCamera","noStreamApiSupport","inputView","loading","domInput","getElementsByName","item","removeAttribute","topLeftFinderPattern","topRightFinderPattern","bottomLeftFinderPattern","pointArray","fillStyle","_ref","fillRect","centerX","reduce","sum","_ref2","centerY","_ref3","font","textAlign","lineWidth","strokeText","fillText","validationPending","validationSuccess","validationFailure","logErrors","_onInit","_callee","triedFrontCamera","triedRearCamera","cameraMissingError","_context","_x","repaint","_onDetect","_callee2","_ref4","_context2","imageData","turnCameraOff","goToLink","_x2","_onDecode","_callee3","_context3","timeout","_x3","turnCameraOn","ms","response","$router","views_QrcodeScanvue_type_script_lang_js_","componentNormalizer","installComponents_default","VBtn","VCard","VIcon","VSpacer","VGrid","VToolbar","VToolbarTitle","components_VToolbar","isRegExp","macrotask","Observer","head","last","flush","parent","toggle","node","$iterators","wks","ArrayValues","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","bitmap","ret","addToUnscopables","$keys","searchString","IE8_DOM_DEFINE","toPrimitive","Attributes","SHARED","arrayIndexOf","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_QrcodeScan_vue_vue_type_style_index_0_id_40bef51c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_QrcodeScan_vue_vue_type_style_index_0_id_40bef51c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","STARTS_WITH","$startsWith","search"],"mappings":"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","file":"js/chunk-65fc08df.e14b4381.js","sourcesContent":["var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","module.exports = {};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","module.exports=function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=69)}([function(e,t){var r=e.exports={version:\"2.6.5\"};\"number\"==typeof __e&&(__e=r)},function(e,t){var r=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=r)},function(e,t,r){var n=r(34)(\"wks\"),o=r(22),a=r(1).Symbol,i=\"function\"==typeof a;(e.exports=function(e){return n[e]||(n[e]=i&&a[e]||(i?a:o)(\"Symbol.\"+e))}).store=n},function(e,t,r){var n=r(1),o=r(0),a=r(13),i=r(9),s=r(10),c=function(e,t,r){var d,u,l,f=e&c.F,p=e&c.G,m=e&c.S,v=e&c.P,h=e&c.B,k=e&c.W,C=p?o:o[t]||(o[t]={}),y=C.prototype,g=p?n:m?n[t]:(n[t]||{}).prototype;p&&(r=t);for(d in r)(u=!f&&g&&void 0!==g[d])&&s(C,d)||(l=u?g[d]:r[d],C[d]=p&&\"function\"!=typeof g[d]?r[d]:h&&u?a(l,n):k&&g[d]==l?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(l):v&&\"function\"==typeof l?a(Function.call,l):l,v&&((C.virtual||(C.virtual={}))[d]=l,e&c.R&&y&&!y[d]&&i(y,d,l)))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,t,r){var n=r(5),o=r(47),a=r(29),i=Object.defineProperty;t.f=r(8)?Object.defineProperty:function(e,t,r){if(n(e),t=a(t,!0),n(r),o)try{return i(e,t,r)}catch(e){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported!\");return\"value\"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t,r){\"use strict\";function n(e,t,r){var n=e.match(t);return n&&n.length>=r&&parseInt(n[r],10)}function o(e,t,r){if(e.RTCPeerConnection){var n=e.RTCPeerConnection.prototype,o=n.addEventListener;n.addEventListener=function(e,n){if(e!==t)return o.apply(this,arguments);var a=function(e){var t=r(e);t&&n(t)};return this._eventMap=this._eventMap||{},this._eventMap[n]=a,o.apply(this,[e,a])};var a=n.removeEventListener;n.removeEventListener=function(e,r){if(e!==t||!this._eventMap||!this._eventMap[r])return a.apply(this,arguments);var n=this._eventMap[r];return delete this._eventMap[r],a.apply(this,[e,n])},Object.defineProperty(n,\"on\"+t,{get:function(){return this[\"_on\"+t]},set:function(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)},enumerable:!0,configurable:!0})}}var a=!0,i=!0;e.exports={extractVersion:n,wrapPeerConnectionEvent:o,disableLog:function(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(a=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")},disableWarnings:function(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(i=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))},log:function(){if(\"object\"==typeof window){if(a)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}},deprecated:function(e,t){i&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")},detectBrowser:function(e){var t=e&&e.navigator,r={};if(r.browser=null,r.version=null,void 0===e||!e.navigator)return r.browser=\"Not a browser.\",r;if(t.mozGetUserMedia)r.browser=\"firefox\",r.version=n(t.userAgent,/Firefox\\/(\\d+)\\./,1);else if(t.webkitGetUserMedia)r.browser=\"chrome\",r.version=n(t.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else if(t.mediaDevices&&t.userAgent.match(/Edge\\/(\\d+).(\\d+)$/))r.browser=\"edge\",r.version=n(t.userAgent,/Edge\\/(\\d+).(\\d+)$/,2);else{if(!e.RTCPeerConnection||!t.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return r.browser=\"Not a supported browser.\",r;r.browser=\"safari\",r.version=n(t.userAgent,/AppleWebKit\\/(\\d+)\\./,1)}return r}}},function(e,t){e.exports=function(e){return\"object\"==typeof e?null!==e:\"function\"==typeof e}},function(e,t,r){e.exports=!r(16)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t,r){var n=r(4),o=r(17);e.exports=r(8)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){e.exports=r(93)},function(e,t,r){\"use strict\";t.__esModule=!0;var n=r(24),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(e){return function(){var t=e.apply(this,arguments);return new o.default(function(e,r){function n(a,i){try{var s=t[a](i),c=s.value}catch(e){return void r(e)}if(!s.done)return o.default.resolve(c).then(function(e){n(\"next\",e)},function(e){n(\"throw\",e)});e(c)}return n(\"next\")})}}},function(e,t,r){var n=r(21);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){var n=r(77),o=r(27);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){e.exports=function(e,t,r,n){var o,a=e=e||{},i=typeof e.default;\"object\"!==i&&\"function\"!==i||(o=e,a=e.default);var s=\"function\"==typeof a?a.options:a;if(t&&(s.render=t.render,s.staticRenderFns=t.staticRenderFns),r&&(s._scopeId=r),n){var c=s.computed||(s.computed={});Object.keys(n).forEach(function(e){var t=n[e];c[e]=function(){return t}})}return{esModule:o,exports:a,options:s}}},function(e,t){e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++r+n).toString(36))}},function(e,t,r){var n=r(4).f,o=r(10),a=r(2)(\"toStringTag\");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,a)&&n(e,a,{configurable:!0,value:t})}},function(e,t,r){e.exports={default:r(73),__esModule:!0}},function(e,t,r){\"use strict\";var n=r(74)(!0);r(46)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t,r){var n=r(7),o=r(1).document,a=n(o)&&n(o.createElement);e.exports=function(e){return a?o.createElement(e):{}}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&\"function\"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if(\"function\"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&\"function\"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t,r){var n=r(5),o=r(76),a=r(35),i=r(33)(\"IE_PROTO\"),s=function(){},c=function(){var e,t=r(28)(\"iframe\"),n=a.length;for(t.style.display=\"none\",r(50).appendChild(t),t.src=\"javascript:\",e=t.contentWindow.document,e.open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),c=e.F;n--;)delete c.prototype[a[n]];return c()};e.exports=Object.create||function(e,t){var r;return null!==e?(s.prototype=n(e),r=new s,s.prototype=null,r[i]=e):r=c(),void 0===t?r:o(r,t)}},function(e,t,r){var n=r(49),o=r(35);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){var n=r(26),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){var n=r(34)(\"keys\"),o=r(22);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),a=o[\"__core-js_shared__\"]||(o[\"__core-js_shared__\"]={});(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:n.version,mode:r(15)?\"pure\":\"global\",copyright:\"© 2019 Denis Pushkarev (zloirock.ru)\"})},function(e,t){e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,r){var n=r(27);e.exports=function(e){return Object(n(e))}},function(e,t,r){\"use strict\";function n(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError(\"Bad Promise constructor\");t=e,r=n}),this.resolve=o(t),this.reject=o(r)}var o=r(21);e.exports.f=function(e){return new n(e)}},function(e,t,r){\"use strict\";function n(e,t){var r=t.detectHandler,n=t.locateHandler,o=t.minDelay,a=null,i=null,s=performance.now(),c=new u.a,d=!1,l=!0;c.onmessage=function(e){d=!1;var t=e.data,o=t.content,s=t.location;null!==o&&o!==a&&r(e.data),s!==i&&n(s),a=o||a,i=s};return function t(r){if(l){if(window.requestAnimationFrame(t),r-s>=o&&(s=r,!1===d)){d=!0;var n=e.captureFrame();c.postMessage(n,[n.data.buffer])}}else c.terminate()}(),function(){l=!1}}r.d(t,\"b\",function(){return l}),t.a=n;var o=r(11),a=r.n(o),i=r(12),s=r.n(i),c=r(39),d=r(95),u=r.n(d),l=function(){var e=s()(a.a.mark(function e(t){var r,n;return a.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r=new u.a,r.postMessage(t,[t.data.buffer]),e.next=4,Object(c.a)(r,\"message\");case 4:return n=e.sent,r.terminate(),e.abrupt(\"return\",n.data);case 7:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},function(e,t,r){\"use strict\";function n(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"error\",n=void 0,o=void 0,i=new a.a(function(e,t){n=e,o=t});return e.addEventListener(t,n),e.addEventListener(r,o),i.finally(function(){e.removeEventListener(t,n),e.removeEventListener(r,o)}),i}t.a=n;var o=r(24),a=r.n(o)},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),o=r(0),a=r(15),i=r(40),s=r(4).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=a?{}:n.Symbol||{});\"_\"==e.charAt(0)||e in t||s(t,e,{value:i.f(e)})}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,r){\"use strict\";function n(e,t,r){var n=Math.min(1,f.width/t,f.height/r),o=n*t,a=n*r;return p.drawImage(e,0,0,o,a),p.getImageData(0,0,o,a)}function o(e){return n(e,e.naturalWidth,e.naturalHeight)}function a(e){return n(e,e.videoWidth,e.videoHeight)}t.c=a,r.d(t,\"b\",function(){return m}),r.d(t,\"a\",function(){return v});var i=r(11),s=r.n(i),c=r(12),d=r.n(c),u=r(63),l=r(39),f=document.createElement(\"canvas\"),p=f.getContext(\"2d\");f.width=1920,f.height=1080;var m=function(){var e=d()(s.a.mark(function e(t){var r,n;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.startsWith(\"http\")||!1!==t.includes(location.host)){e.next=2;break}throw new u.b;case 2:return r=document.createElement(\"img\"),n=Object(l.a)(r,\"load\"),r.src=t,e.next=7,n;case 7:return e.abrupt(\"return\",o(r));case 8:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),v=function(){var e=d()(s.a.mark(function e(t){var r,n,o;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!/image.*/.test(t.type)){e.next=10;break}return r=new FileReader,n=Object(l.a)(r,\"load\"),r.readAsDataURL(t),e.next=6,n;case 6:return o=e.sent.target.result,e.abrupt(\"return\",m(o));case 10:throw new u.a;case 11:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},function(e,t,r){var n=r(20)(r(140),null,null,null);e.exports=n.exports},function(e,t){},function(e,t,r){\"use strict\";var n=r(15),o=r(3),a=r(48),i=r(9),s=r(18),c=r(75),d=r(23),u=r(51),l=r(2)(\"iterator\"),f=!([].keys&&\"next\"in[].keys()),p=function(){return this};e.exports=function(e,t,r,m,v,h,k){c(r,t,m);var C,y,g,P=function(e){if(!f&&e in S)return S[e];switch(e){case\"keys\":case\"values\":return function(){return new r(this,e)}}return function(){return new r(this,e)}},B=t+\" Iterator\",w=\"values\"==v,b=!1,S=e.prototype,T=S[l]||S[\"@@iterator\"]||v&&S[v],x=T||P(v),R=v?w?P(\"entries\"):x:void 0,E=\"Array\"==t?S.entries||T:T;if(E&&(g=u(E.call(new e)))!==Object.prototype&&g.next&&(d(g,B,!0),n||\"function\"==typeof g[l]||i(g,l,p)),w&&T&&\"values\"!==T.name&&(b=!0,x=function(){return T.call(this)}),n&&!k||!f&&!b&&S[l]||i(S,l,x),s[t]=x,s[B]=p,v)if(C={values:w?x:P(\"values\"),keys:h?x:P(\"keys\"),entries:R},k)for(y in C)y in S||a(S,y,C[y]);else o(o.P+o.F*(f||b),t,C);return C}},function(e,t,r){e.exports=!r(8)&&!r(16)(function(){return 7!=Object.defineProperty(r(28)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,r){e.exports=r(9)},function(e,t,r){var n=r(10),o=r(14),a=r(78)(!1),i=r(33)(\"IE_PROTO\");e.exports=function(e,t){var r,s=o(e),c=0,d=[];for(r in s)r!=i&&n(s,r)&&d.push(r);for(;t.length>c;)n(s,r=t[c++])&&(~a(d,r)||d.push(r));return d}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(10),o=r(36),a=r(33)(\"IE_PROTO\"),i=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,a)?e[a]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?i:null}},function(e,t,r){r(80);for(var n=r(1),o=r(9),a=r(18),i=r(2)(\"toStringTag\"),s=\"CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList\".split(\",\"),c=0;c<s.length;c++){var d=s[c],u=n[d],l=u&&u.prototype;l&&!l[i]&&o(l,i,d),a[d]=a.Array}},function(e,t,r){var n=r(19),o=r(2)(\"toStringTag\"),a=\"Arguments\"==n(function(){return arguments}()),i=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,r,s;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(r=i(t=Object(e),o))?r:a?n(t):\"Object\"==(s=n(t))&&\"function\"==typeof t.callee?\"Arguments\":s}},function(e,t,r){var n=r(5);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var a=e.return;throw void 0!==a&&n(a.call(e)),t}}},function(e,t,r){var n=r(18),o=r(2)(\"iterator\"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||a[o]===e)}},function(e,t,r){var n=r(53),o=r(2)(\"iterator\"),a=r(18);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e[\"@@iterator\"]||a[n(e)]}},function(e,t,r){var n=r(5),o=r(21),a=r(2)(\"species\");e.exports=function(e,t){var r,i=n(e).constructor;return void 0===i||void 0==(r=n(i)[a])?t:o(r)}},function(e,t,r){var n,o,a,i=r(13),s=r(86),c=r(50),d=r(28),u=r(1),l=u.process,f=u.setImmediate,p=u.clearImmediate,m=u.MessageChannel,v=u.Dispatch,h=0,k={},C=function(){var e=+this;if(k.hasOwnProperty(e)){var t=k[e];delete k[e],t()}},y=function(e){C.call(e.data)};f&&p||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return k[++h]=function(){s(\"function\"==typeof e?e:Function(e),t)},n(h),h},p=function(e){delete k[e]},\"process\"==r(19)(l)?n=function(e){l.nextTick(i(C,e,1))}:v&&v.now?n=function(e){v.now(i(C,e,1))}:m?(o=new m,a=o.port2,o.port1.onmessage=y,n=i(a.postMessage,a,1)):u.addEventListener&&\"function\"==typeof postMessage&&!u.importScripts?(n=function(e){u.postMessage(e+\"\",\"*\")},u.addEventListener(\"message\",y,!1)):n=\"onreadystatechange\"in d(\"script\")?function(e){c.appendChild(d(\"script\")).onreadystatechange=function(){c.removeChild(this),C.call(e)}}:function(e){setTimeout(i(C,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(5),o=r(7),a=r(37);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=a.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(2)(\"iterator\"),o=!1;try{var a=[7][n]();a.return=function(){o=!0},Array.from(a,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var a=[7],i=a[n]();i.next=function(){return{done:r=!0}},a[n]=function(){return i},e(a)}catch(e){}return r}},function(e,t,r){\"use strict\";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}},function(e,t,r){\"use strict\";r.d(t,\"b\",function(){return l}),r.d(t,\"a\",function(){return f}),r.d(t,\"c\",function(){return p});var n=r(116),o=r.n(n),a=r(62),i=r.n(a),s=r(120),c=r.n(s),d=r(132),u=r.n(d),l=function(e){function t(){i()(this,t);var e=c()(this,(t.__proto__||o()(t)).call(this,\"can't process cross-origin image\"));return e.name=\"DropImageFetchError\",e}return u()(t,e),t}(Error),f=function(e){function t(){i()(this,t);var e=c()(this,(t.__proto__||o()(t)).call(this,\"drag-and-dropped file is not of type image and can't be decoded\"));return e.name=\"DropImageDecodeError\",e}return u()(t,e),t}(Error),p=function(e){function t(){i()(this,t);var e=c()(this,(t.__proto__||o()(t)).call(this,\"this browser has no Stream API support\"));return e.name=\"StreamApiNotSupportedError\",e}return u()(t,e),t}(Error)},function(e,t,r){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=r(121),a=n(o),i=r(123),s=n(i),c=\"function\"==typeof s.default&&\"symbol\"==typeof a.default?function(e){return typeof e}:function(e){return e&&\"function\"==typeof s.default&&e.constructor===s.default&&e!==s.default.prototype?\"symbol\":typeof e};t.default=\"function\"==typeof s.default&&\"symbol\"===c(a.default)?function(e){return void 0===e?\"undefined\":c(e)}:function(e){return e&&\"function\"==typeof s.default&&e.constructor===s.default&&e!==s.default.prototype?\"symbol\":void 0===e?\"undefined\":c(e)}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(49),o=r(35).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){var n=r(42),o=r(17),a=r(14),i=r(29),s=r(10),c=r(47),d=Object.getOwnPropertyDescriptor;t.f=r(8)?d:function(e,t){if(e=a(e),t=i(t,!0),c)try{return d(e,t)}catch(e){}if(s(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=r(144),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return(0,o.default)(e)}},function(e,t,r){\"use strict\";function n(e){e.component(\"qrcode-stream\",a.a),e.component(\"qrcode-capture\",s.a),e.component(\"qrcode-drop-zone\",d.a)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=n;var o=r(70),a=r.n(o),i=r(142),s=r.n(i),c=r(149),d=r.n(c);r.d(t,\"QrcodeStream\",function(){return a.a}),r.d(t,\"QrcodeCapture\",function(){return s.a}),r.d(t,\"QrcodeDropZone\",function(){return d.a});var u={install:n};t.default=u;var l=null;\"undefined\"!=typeof window?l=window.Vue:\"undefined\"!=typeof global&&(l=global.Vue),l&&l.use(u)},function(e,t,r){r(71);var n=r(20)(r(72),r(141),\"data-v-1f90552a\",null);e.exports=n.exports},function(e,t){},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(24),o=r.n(n),a=r(11),i=r.n(a),s=r(12),c=r.n(s),d=r(38),u=r(97),l=r(98),f=r(44),p=r.n(f);t.default={name:\"qrcode-stream\",mixins:[p.a],props:{camera:{type:String,default:\"auto\",validator:function(e){return[\"auto\",\"rear\",\"front\",\"off\"].includes(e)}},track:{type:[Function,Boolean],default:!0}},data:function(){return{cameraInstance:null,destroyed:!1,stopScanning:function(){}}},computed:{shouldStream:function(){return!1===this.destroyed&&\"off\"!==this.camera},shouldScan:function(){return!0===this.shouldStream&&null!==this.cameraInstance},scanInterval:function(){return!1===this.track?500:40},trackRepaintFunction:function(){return!0===this.track?Object(u.a)({color:\"#ff0000\"}):!1===this.track?void 0:this.track},constraints:function(){var e={audio:!1,video:{width:{min:360,ideal:640,max:1920},height:{min:240,ideal:480,max:1080}}};switch(this.camera){case\"auto\":return e.video.facingMode={ideal:\"environment\"},e;case\"rear\":return e.video.facingMode={exact:\"environment\"},e;case\"front\":return e.video.facingMode={exact:\"user\"},e;case\"off\":default:return}}},watch:{shouldStream:function(e){if(!e){var t=this.cameraInstance.captureFrame();this.paintPauseFrame(t)}},shouldScan:function(e){e?(this.clearPauseFrame(),this.clearTrackingLayer(),this.startScanning()):this.stopScanning()},constraints:function(){this.$emit(\"init\",this.init())}},mounted:function(){this.$emit(\"init\",this.init())},beforeDestroy:function(){this.beforeResetCamera(),this.stopScanning(),this.destroyed=!0},methods:{init:function(){var e=this;return c()(i.a.mark(function t(){return i.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e.beforeResetCamera(),void 0!==e.constraints){t.next=5;break}e.cameraInstance=null,t.next=9;break;case 5:return t.next=7,Object(l.a)(e.constraints,e.$refs.video);case 7:e.cameraInstance=t.sent,e.destroyed&&e.cameraInstance.stop();case 9:case\"end\":return t.stop()}},t,e)}))()},startScanning:function(){var e=this,t=function(t){e.onDetect(o.a.resolve(t))};this.stopScanning=Object(d.a)(this.cameraInstance,{detectHandler:t,locateHandler:this.onLocate,minDelay:this.scanInterval})},beforeResetCamera:function(){null!==this.cameraInstance&&(this.cameraInstance.stop(),this.cameraInstance=null)},onLocate:function(e){void 0===this.trackRepaintFunction||null===e?this.clearTrackingLayer():this.repaintTrackingLayer(e)},normalizeLocation:function(e,t,r){var n={};for(var o in r)n[o]={x:Math.floor(r[o].x*e),y:Math.floor(r[o].y*t)};return n},repaintTrackingLayer:function(e){var t=this,r=this.$refs.video,n=this.$refs.trackingLayer,o=n.getContext(\"2d\"),a=r.offsetWidth,i=r.offsetWidth,s=r.videoWidth,c=r.videoHeight;window.requestAnimationFrame(function(){n.width=a,n.height=i;var r=a/s,d=i/c;e=t.normalizeLocation(r,d,e),t.trackRepaintFunction(e,o)})},clearTrackingLayer:function(){var e=this.$refs.trackingLayer,t=e.getContext(\"2d\");window.requestAnimationFrame(function(){t.clearRect(0,0,e.width,e.height)})},paintPauseFrame:function(e){var t=this.$refs.pauseFrame,r=t.getContext(\"2d\");window.requestAnimationFrame(function(){t.width=e.width,t.height=e.height,r.putImageData(e,0,0)})},clearPauseFrame:function(){var e=this.$refs.pauseFrame,t=e.getContext(\"2d\");window.requestAnimationFrame(function(){t.clearRect(0,0,e.width,e.height)})}}}},function(e,t,r){r(45),r(25),r(52),r(83),r(91),r(92),e.exports=r(0).Promise},function(e,t,r){var n=r(26),o=r(27);e.exports=function(e){return function(t,r){var a,i,s=String(o(t)),c=n(r),d=s.length;return c<0||c>=d?e?\"\":void 0:(a=s.charCodeAt(c),a<55296||a>56319||c+1===d||(i=s.charCodeAt(c+1))<56320||i>57343?e?s.charAt(c):a:e?s.slice(c,c+2):i-56320+(a-55296<<10)+65536)}}},function(e,t,r){\"use strict\";var n=r(30),o=r(17),a=r(23),i={};r(9)(i,r(2)(\"iterator\"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(i,{next:o(1,r)}),a(e,t+\" Iterator\")}},function(e,t,r){var n=r(4),o=r(5),a=r(31);e.exports=r(8)?Object.defineProperties:function(e,t){o(e);for(var r,i=a(t),s=i.length,c=0;s>c;)n.f(e,r=i[c++],t[r]);return e}},function(e,t,r){var n=r(19);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==n(e)?e.split(\"\"):Object(e)}},function(e,t,r){var n=r(14),o=r(32),a=r(79);e.exports=function(e){return function(t,r,i){var s,c=n(t),d=o(c.length),u=a(i,d);if(e&&r!=r){for(;d>u;)if((s=c[u++])!=s)return!0}else for(;d>u;u++)if((e||u in c)&&c[u]===r)return e||u||0;return!e&&-1}}},function(e,t,r){var n=r(26),o=Math.max,a=Math.min;e.exports=function(e,t){return e=n(e),e<0?o(e+t,0):a(e,t)}},function(e,t,r){\"use strict\";var n=r(81),o=r(82),a=r(18),i=r(14);e.exports=r(46)(Array,\"Array\",function(e,t){this._t=i(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):\"keys\"==t?o(0,r):\"values\"==t?o(0,e[r]):o(0,[r,e[r]])},\"values\"),a.Arguments=a.Array,n(\"keys\"),n(\"values\"),n(\"entries\")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){\"use strict\";var n,o,a,i,s=r(15),c=r(1),d=r(13),u=r(53),l=r(3),f=r(7),p=r(21),m=r(84),v=r(85),h=r(57),k=r(58).set,C=r(87)(),y=r(37),g=r(59),P=r(88),B=r(60),w=c.TypeError,b=c.process,S=b&&b.versions,T=S&&S.v8||\"\",x=c.Promise,R=\"process\"==u(b),E=function(){},_=o=y.f,M=!!function(){try{var e=x.resolve(1),t=(e.constructor={})[r(2)(\"species\")]=function(e){e(E,E)};return(R||\"function\"==typeof PromiseRejectionEvent)&&e.then(E)instanceof t&&0!==T.indexOf(\"6.6\")&&-1===P.indexOf(\"Chrome/66\")}catch(e){}}(),O=function(e){var t;return!(!f(e)||\"function\"!=typeof(t=e.then))&&t},L=function(e,t){if(!e._n){e._n=!0;var r=e._c;C(function(){for(var n=e._v,o=1==e._s,a=0;r.length>a;)!function(t){var r,a,i,s=o?t.ok:t.fail,c=t.resolve,d=t.reject,u=t.domain;try{s?(o||(2==e._h&&j(e),e._h=1),!0===s?r=n:(u&&u.enter(),r=s(n),u&&(u.exit(),i=!0)),r===t.promise?d(w(\"Promise-chain cycle\")):(a=O(r))?a.call(r,c,d):c(r)):d(n)}catch(e){u&&!i&&u.exit(),d(e)}}(r[a++]);e._c=[],e._n=!1,t&&!e._h&&I(e)})}},I=function(e){k.call(c,function(){var t,r,n,o=e._v,a=D(e);if(a&&(t=g(function(){R?b.emit(\"unhandledRejection\",o,e):(r=c.onunhandledrejection)?r({promise:e,reason:o}):(n=c.console)&&n.error&&n.error(\"Unhandled promise rejection\",o)}),e._h=R||D(e)?2:1),e._a=void 0,a&&t.e)throw t.v})},D=function(e){return 1!==e._h&&0===(e._a||e._c).length},j=function(e){k.call(c,function(){var t;R?b.emit(\"rejectionHandled\",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})})},N=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),L(t,!0))},A=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw w(\"Promise can't be resolved itself\");(t=O(e))?C(function(){var n={_w:r,_d:!1};try{t.call(e,d(A,n,1),d(N,n,1))}catch(e){N.call(n,e)}}):(r._v=e,r._s=1,L(r,!1))}catch(e){N.call({_w:r,_d:!1},e)}}};M||(x=function(e){m(this,x,\"Promise\",\"_h\"),p(e),n.call(this);try{e(d(A,this,1),d(N,this,1))}catch(e){N.call(this,e)}},n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},n.prototype=r(89)(x.prototype,{then:function(e,t){var r=_(h(this,x));return r.ok=\"function\"!=typeof e||e,r.fail=\"function\"==typeof t&&t,r.domain=R?b.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&L(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new n;this.promise=e,this.resolve=d(A,e,1),this.reject=d(N,e,1)},y.f=_=function(e){return e===x||e===i?new a(e):o(e)}),l(l.G+l.W+l.F*!M,{Promise:x}),r(23)(x,\"Promise\"),r(90)(\"Promise\"),i=r(0).Promise,l(l.S+l.F*!M,\"Promise\",{reject:function(e){var t=_(this);return(0,t.reject)(e),t.promise}}),l(l.S+l.F*(s||!M),\"Promise\",{resolve:function(e){return B(s&&this===i?x:this,e)}}),l(l.S+l.F*!(M&&r(61)(function(e){x.all(e).catch(E)})),\"Promise\",{all:function(e){var t=this,r=_(t),n=r.resolve,o=r.reject,a=g(function(){var r=[],a=0,i=1;v(e,!1,function(e){var s=a++,c=!1;r.push(void 0),i++,t.resolve(e).then(function(e){c||(c=!0,r[s]=e,--i||n(r))},o)}),--i||n(r)});return a.e&&o(a.v),r.promise},race:function(e){var t=this,r=_(t),n=r.reject,o=g(function(){v(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+\": incorrect invocation!\");return e}},function(e,t,r){var n=r(13),o=r(54),a=r(55),i=r(5),s=r(32),c=r(56),d={},u={},t=e.exports=function(e,t,r,l,f){var p,m,v,h,k=f?function(){return e}:c(e),C=n(r,l,t?2:1),y=0;if(\"function\"!=typeof k)throw TypeError(e+\" is not iterable!\");if(a(k)){for(p=s(e.length);p>y;y++)if((h=t?C(i(m=e[y])[0],m[1]):C(e[y]))===d||h===u)return h}else for(v=k.call(e);!(m=v.next()).done;)if((h=o(v,C,m.value,t))===d||h===u)return h};t.BREAK=d,t.RETURN=u},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(58).set,a=n.MutationObserver||n.WebKitMutationObserver,i=n.process,s=n.Promise,c=\"process\"==r(19)(i);e.exports=function(){var e,t,r,d=function(){var n,o;for(c&&(n=i.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(c)r=function(){i.nextTick(d)};else if(!a||n.navigator&&n.navigator.standalone)if(s&&s.resolve){var u=s.resolve(void 0);r=function(){u.then(d)}}else r=function(){o.call(n,d)};else{var l=!0,f=document.createTextNode(\"\");new a(d).observe(f,{characterData:!0}),r=function(){f.data=l=!l}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1),o=n.navigator;e.exports=o&&o.userAgent||\"\"},function(e,t,r){var n=r(9);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){\"use strict\";var n=r(1),o=r(0),a=r(4),i=r(8),s=r(2)(\"species\");e.exports=function(e){var t=\"function\"==typeof o[e]?o[e]:n[e];i&&t&&!t[s]&&a.f(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,r){\"use strict\";var n=r(3),o=r(0),a=r(1),i=r(57),s=r(60);n(n.P+n.R,\"Promise\",{finally:function(e){var t=i(this,o.Promise||a.Promise),r=\"function\"==typeof e;return this.then(r?function(r){return s(t,e()).then(function(){return r})}:e,r?function(r){return s(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){\"use strict\";var n=r(3),o=r(37),a=r(59);n(n.S,\"Promise\",{try:function(e){var t=o.f(this),r=a(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},function(e,t,r){var n=function(){return this}()||Function(\"return this\")(),o=n.regeneratorRuntime&&Object.getOwnPropertyNames(n).indexOf(\"regeneratorRuntime\")>=0,a=o&&n.regeneratorRuntime;if(n.regeneratorRuntime=void 0,e.exports=r(94),o)n.regeneratorRuntime=a;else try{delete n.regeneratorRuntime}catch(e){n.regeneratorRuntime=void 0}},function(e,t){!function(t){\"use strict\";function r(e,t,r,n){var a=t&&t.prototype instanceof o?t:o,i=Object.create(a.prototype),s=new p(n||[]);return i._invoke=d(e,r,s),i}function n(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}function o(){}function a(){}function i(){}function s(e){[\"next\",\"throw\",\"return\"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function c(e){function t(r,o,a,i){var s=n(e[r],e,o);if(\"throw\"!==s.type){var c=s.arg,d=c.value;return d&&\"object\"==typeof d&&C.call(d,\"__await\")?Promise.resolve(d.__await).then(function(e){t(\"next\",e,a,i)},function(e){t(\"throw\",e,a,i)}):Promise.resolve(d).then(function(e){c.value=e,a(c)},i)}i(s.arg)}function r(e,r){function n(){return new Promise(function(n,o){t(e,r,n,o)})}return o=o?o.then(n,n):n()}var o;this._invoke=r}function d(e,t,r){var o=S;return function(a,i){if(o===x)throw new Error(\"Generator is already running\");if(o===R){if(\"throw\"===a)throw i;return v()}for(r.method=a,r.arg=i;;){var s=r.delegate;if(s){var c=u(s,r);if(c){if(c===E)continue;return c}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(o===S)throw o=R,r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);o=x;var d=n(e,t,r);if(\"normal\"===d.type){if(o=r.done?R:T,d.arg===E)continue;return{value:d.arg,done:r.done}}\"throw\"===d.type&&(o=R,r.method=\"throw\",r.arg=d.arg)}}}function u(e,t){var r=e.iterator[t.method];if(r===h){if(t.delegate=null,\"throw\"===t.method){if(e.iterator.return&&(t.method=\"return\",t.arg=h,u(e,t),\"throw\"===t.method))return E;t.method=\"throw\",t.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return E}var o=n(r,e.iterator,t.arg);if(\"throw\"===o.type)return t.method=\"throw\",t.arg=o.arg,t.delegate=null,E;var a=o.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,\"return\"!==t.method&&(t.method=\"next\",t.arg=h),t.delegate=null,E):a:(t.method=\"throw\",t.arg=new TypeError(\"iterator result is not an object\"),t.delegate=null,E)}function l(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function f(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function p(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(l,this),this.reset(!0)}function m(e){if(e){var t=e[g];if(t)return t.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,n=function t(){for(;++r<e.length;)if(C.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=h,t.done=!0,t};return n.next=n}}return{next:v}}function v(){return{value:h,done:!0}}var h,k=Object.prototype,C=k.hasOwnProperty,y=\"function\"==typeof Symbol?Symbol:{},g=y.iterator||\"@@iterator\",P=y.asyncIterator||\"@@asyncIterator\",B=y.toStringTag||\"@@toStringTag\",w=\"object\"==typeof e,b=t.regeneratorRuntime;if(b)return void(w&&(e.exports=b));b=t.regeneratorRuntime=w?e.exports:{},b.wrap=r;var S=\"suspendedStart\",T=\"suspendedYield\",x=\"executing\",R=\"completed\",E={},_={};_[g]=function(){return this};var M=Object.getPrototypeOf,O=M&&M(M(m([])));O&&O!==k&&C.call(O,g)&&(_=O);var L=i.prototype=o.prototype=Object.create(_);a.prototype=L.constructor=i,i.constructor=a,i[B]=a.displayName=\"GeneratorFunction\",b.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===a||\"GeneratorFunction\"===(t.displayName||t.name))},b.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,i):(e.__proto__=i,B in e||(e[B]=\"GeneratorFunction\")),e.prototype=Object.create(L),e},b.awrap=function(e){return{__await:e}},s(c.prototype),c.prototype[P]=function(){return this},b.AsyncIterator=c,b.async=function(e,t,n,o){var a=new c(r(e,t,n,o));return b.isGeneratorFunction(t)?a:a.next().then(function(e){return e.done?e.value:a.next()})},s(L),L[B]=\"Generator\",L[g]=function(){return this},L.toString=function(){return\"[object Generator]\"},b.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},b.values=m,p.prototype={constructor:p,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=h,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=h,this.tryEntries.forEach(f),!e)for(var t in this)\"t\"===t.charAt(0)&&C.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=h)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if(\"throw\"===t.type)throw t.arg;return this.rval},dispatchException:function(e){function t(t,n){return a.type=\"throw\",a.arg=e,r.next=t,n&&(r.method=\"next\",r.arg=h),!!n}if(this.done)throw e;for(var r=this,n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n],a=o.completion;if(\"root\"===o.tryLoc)return t(\"end\");if(o.tryLoc<=this.prev){var i=C.call(o,\"catchLoc\"),s=C.call(o,\"finallyLoc\");if(i&&s){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!s)throw new Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&C.call(n,\"finallyLoc\")&&this.prev<n.finallyLoc){var o=n;break}}o&&(\"break\"===e||\"continue\"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method=\"next\",this.next=o.finallyLoc,E):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),E},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),f(r),E}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;f(r)}return o}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,t,r){return this.delegate={iterator:m(e),resultName:t,nextLoc:r},\"next\"===this.method&&(this.arg=h),E}}}(function(){return this}()||Function(\"return this\")())},function(e,t,r){e.exports=function(){return r(96)('!function(o){function e(t){if(r[t])return r[t].exports;var c=r[t]={i:t,l:!1,exports:{}};return o[t].call(c.exports,c,c.exports,e),c.l=!0,c.exports}var r={};e.m=o,e.c=r,e.d=function(o,r,t){e.o(o,r)||Object.defineProperty(o,r,{configurable:!1,enumerable:!0,get:t})},e.n=function(o){var r=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(r,\"a\",r),r},e.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},e.p=\"\",e(e.s=0)}([function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=r(1),c=r.n(t);self.addEventListener(\"message\",function(o){var e=o.data,r=c()(e.data,e.width,e.height,{inversionAttempts:\"dontInvert\"}),t=null,s=null;null!==r&&(t=r.data,s=r.location);var a={content:t,location:s,imageData:e};self.postMessage(a,[e.data.buffer])})},function(o,e,r){!function(e,r){o.exports=r()}(\"undefined\"!=typeof self&&self,function(){return function(o){function e(t){if(r[t])return r[t].exports;var c=r[t]={i:t,l:!1,exports:{}};return o[t].call(c.exports,c,c.exports,e),c.l=!0,c.exports}var r={};return e.m=o,e.c=r,e.d=function(o,r,t){e.o(o,r)||Object.defineProperty(o,r,{configurable:!1,enumerable:!0,get:t})},e.n=function(o){var r=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(r,\"a\",r),r},e.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},e.p=\"\",e(e.s=3)}([function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=function(){function o(o,e){this.width=e,this.height=o.length/e,this.data=o}return o.createEmpty=function(e,r){return new o(new Uint8ClampedArray(e*r),e)},o.prototype.get=function(o,e){return!(o<0||o>=this.width||e<0||e>=this.height)&&!!this.data[e*this.width+o]},o.prototype.set=function(o,e,r){this.data[e*this.width+o]=r?1:0},o.prototype.setRegion=function(o,e,r,t,c){for(var s=e;s<e+t;s++)for(var a=o;a<o+r;a++)this.set(a,s,!!c)},o}();e.BitMatrix=t},function(o,e,r){\"use strict\";function t(o,e){return o^e}Object.defineProperty(e,\"__esModule\",{value:!0});var c=r(2);e.addOrSubtractGF=t;var s=function(){function o(o,e,r){this.primitive=o,this.size=e,this.generatorBase=r,this.expTable=new Array(this.size),this.logTable=new Array(this.size);for(var t=1,s=0;s<this.size;s++)this.expTable[s]=t,(t*=2)>=this.size&&(t=(t^this.primitive)&this.size-1);for(var s=0;s<this.size-1;s++)this.logTable[this.expTable[s]]=s;this.zero=new c.default(this,Uint8ClampedArray.from([0])),this.one=new c.default(this,Uint8ClampedArray.from([1]))}return o.prototype.multiply=function(o,e){return 0===o||0===e?0:this.expTable[(this.logTable[o]+this.logTable[e])%(this.size-1)]},o.prototype.inverse=function(o){if(0===o)throw new Error(\"Can\\'t invert 0\");return this.expTable[this.size-this.logTable[o]-1]},o.prototype.buildMonomial=function(o,e){if(o<0)throw new Error(\"Invalid monomial degree less than 0\");if(0===e)return this.zero;var r=new Uint8ClampedArray(o+1);return r[0]=e,new c.default(this,r)},o.prototype.log=function(o){if(0===o)throw new Error(\"Can\\'t take log(0)\");return this.logTable[o]},o.prototype.exp=function(o){return this.expTable[o]},o}();e.default=s},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=r(1),c=function(){function o(o,e){if(0===e.length)throw new Error(\"No coefficients.\");this.field=o;var r=e.length;if(r>1&&0===e[0]){for(var t=1;t<r&&0===e[t];)t++;if(t===r)this.coefficients=o.zero.coefficients;else{this.coefficients=new Uint8ClampedArray(r-t);for(var c=0;c<this.coefficients.length;c++)this.coefficients[c]=e[t+c]}}else this.coefficients=e}return o.prototype.degree=function(){return this.coefficients.length-1},o.prototype.isZero=function(){return 0===this.coefficients[0]},o.prototype.getCoefficient=function(o){return this.coefficients[this.coefficients.length-1-o]},o.prototype.addOrSubtract=function(e){if(this.isZero())return e;if(e.isZero())return this;var r=this.coefficients,c=e.coefficients;r.length>c.length&&(d=[c,r],r=d[0],c=d[1]);for(var s=new Uint8ClampedArray(c.length),a=c.length-r.length,n=0;n<a;n++)s[n]=c[n];for(var n=a;n<c.length;n++)s[n]=t.addOrSubtractGF(r[n-a],c[n]);return new o(this.field,s);var d},o.prototype.multiply=function(e){if(0===e)return this.field.zero;if(1===e)return this;for(var r=this.coefficients.length,t=new Uint8ClampedArray(r),c=0;c<r;c++)t[c]=this.field.multiply(this.coefficients[c],e);return new o(this.field,t)},o.prototype.multiplyPoly=function(e){if(this.isZero()||e.isZero())return this.field.zero;for(var r=this.coefficients,c=r.length,s=e.coefficients,a=s.length,n=new Uint8ClampedArray(c+a-1),d=0;d<c;d++)for(var l=r[d],i=0;i<a;i++)n[d+i]=t.addOrSubtractGF(n[d+i],this.field.multiply(l,s[i]));return new o(this.field,n)},o.prototype.multiplyByMonomial=function(e,r){if(e<0)throw new Error(\"Invalid degree less than 0\");if(0===r)return this.field.zero;for(var t=this.coefficients.length,c=new Uint8ClampedArray(t+e),s=0;s<t;s++)c[s]=this.field.multiply(this.coefficients[s],r);return new o(this.field,c)},o.prototype.evaluateAt=function(o){var e=0;if(0===o)return this.getCoefficient(0);var r=this.coefficients.length;if(1===o)return this.coefficients.forEach(function(o){e=t.addOrSubtractGF(e,o)}),e;e=this.coefficients[0];for(var c=1;c<r;c++)e=t.addOrSubtractGF(this.field.multiply(o,e),this.coefficients[c]);return e},o}();e.default=c},function(o,e,r){\"use strict\";function t(o){var e=d.locate(o);if(!e)return null;var r=n.extract(o,e),t=a.decode(r.matrix);return t?{binaryData:t.bytes,data:t.text,chunks:t.chunks,location:{topRightCorner:r.mappingFunction(e.dimension,0),topLeftCorner:r.mappingFunction(0,0),bottomRightCorner:r.mappingFunction(e.dimension,e.dimension),bottomLeftCorner:r.mappingFunction(0,e.dimension),topRightFinderPattern:e.topRight,topLeftFinderPattern:e.topLeft,bottomLeftFinderPattern:e.bottomLeft,bottomRightAlignmentPattern:e.alignmentPattern}}:null}function c(o,e,r,c){void 0===c&&(c={});var a=l;Object.keys(a||{}).forEach(function(o){a[o]=c[o]||a[o]});var n=\"attemptBoth\"===a.inversionAttempts||\"invertFirst\"===a.inversionAttempts,d=\"onlyInvert\"===a.inversionAttempts||\"invertFirst\"===a.inversionAttempts,i=s.binarize(o,e,r,n),B=i.binarized,k=i.inverted,u=t(d?k:B);return u||\"attemptBoth\"!==a.inversionAttempts&&\"invertFirst\"!==a.inversionAttempts||(u=t(d?B:k)),u}Object.defineProperty(e,\"__esModule\",{value:!0});var s=r(4),a=r(5),n=r(11),d=r(12),l={inversionAttempts:\"attemptBoth\"};c.default=c,e.default=c},function(o,e,r){\"use strict\";function t(o,e,r){return o<e?e:o>r?r:o}function c(o,e,r,c){if(o.length!==e*r*4)throw new Error(\"Malformed data passed to binarizer.\");for(var l=new d(e,r),i=0;i<e;i++)for(var B=0;B<r;B++){var k=o[4*(B*e+i)+0],u=o[4*(B*e+i)+1],C=o[4*(B*e+i)+2];l.set(i,B,.2126*k+.7152*u+.0722*C)}for(var m=Math.ceil(e/a),f=Math.ceil(r/a),w=new d(m,f),P=0;P<f;P++)for(var v=0;v<m;v++){for(var h=0,p=1/0,b=0,B=0;B<a;B++)for(var i=0;i<a;i++){var y=l.get(v*a+i,P*a+B);h+=y,p=Math.min(p,y),b=Math.max(b,y)}var g=h/Math.pow(a,2);if(b-p<=n&&(g=p/2,P>0&&v>0)){var x=(w.get(v,P-1)+2*w.get(v-1,P)+w.get(v-1,P-1))/4;p<x&&(g=x)}w.set(v,P,g)}var M=s.BitMatrix.createEmpty(e,r),L=null;c&&(L=s.BitMatrix.createEmpty(e,r));for(var P=0;P<f;P++)for(var v=0;v<m;v++){for(var N=t(v,2,m-3),I=t(P,2,f-3),h=0,O=-2;O<=2;O++)for(var z=-2;z<=2;z++)h+=w.get(N+O,I+z);for(var S=h/25,O=0;O<a;O++)for(var z=0;z<a;z++){var i=v*a+O,B=P*a+z,X=l.get(i,B);M.set(i,B,X<=S),c&&L.set(i,B,!(X<=S))}}return c?{binarized:M,inverted:L}:{binarized:M}}Object.defineProperty(e,\"__esModule\",{value:!0});var s=r(0),a=8,n=24,d=function(){function o(o,e){this.width=o,this.data=new Uint8ClampedArray(o*e)}return o.prototype.get=function(o,e){return this.data[e*this.width+o]},o.prototype.set=function(o,e,r){this.data[e*this.width+o]=r},o}();e.binarize=c},function(o,e,r){\"use strict\";function t(o,e){for(var r=o^e,t=0;r;)t++,r&=r-1;return t}function c(o,e){return e<<1|o}function s(o){var e=17+4*o.versionNumber,r=k.BitMatrix.createEmpty(e,e);r.setRegion(0,0,9,9,!0),r.setRegion(e-8,0,8,9,!0),r.setRegion(0,e-8,9,8,!0);for(var t=0,c=o.alignmentPatternCenters;t<c.length;t++)for(var s=c[t],a=0,n=o.alignmentPatternCenters;a<n.length;a++){var d=n[a];6===s&&6===d||6===s&&d===e-7||s===e-7&&6===d||r.setRegion(s-2,d-2,5,5,!0)}return r.setRegion(6,9,1,e-17,!0),r.setRegion(9,6,e-17,1,!0),o.versionNumber>6&&(r.setRegion(e-11,0,3,6,!0),r.setRegion(0,e-11,6,3,!0)),r}function a(o,e,r){for(var t=w[r.dataMask],a=o.height,n=s(e),d=[],l=0,i=0,B=!0,k=a-1;k>0;k-=2){6===k&&k--;for(var u=0;u<a;u++)for(var C=B?a-1-u:u,m=0;m<2;m++){var f=k-m;if(!n.get(f,C)){i++;var P=o.get(f,C);t({y:C,x:f})&&(P=!P),l=c(P,l),8===i&&(d.push(l),i=0,l=0)}}B=!B}return d}function n(o){var e=o.height,r=Math.floor((e-17)/4);if(r<=6)return m.VERSIONS[r-1];for(var s=0,a=5;a>=0;a--)for(var n=e-9;n>=e-11;n--)s=c(o.get(n,a),s);for(var d=0,n=5;n>=0;n--)for(var a=e-9;a>=e-11;a--)d=c(o.get(n,a),d);for(var l,i=1/0,B=0,k=m.VERSIONS;B<k.length;B++){var u=k[B];if(u.infoBits===s||u.infoBits===d)return u;var C=t(s,u.infoBits);C<i&&(l=u,i=C),C=t(d,u.infoBits),C<i&&(l=u,i=C)}return i<=3?l:void 0}function d(o){for(var e=0,r=0;r<=8;r++)6!==r&&(e=c(o.get(r,8),e));for(var s=7;s>=0;s--)6!==s&&(e=c(o.get(8,s),e));for(var a=o.height,n=0,s=a-1;s>=a-7;s--)n=c(o.get(8,s),n);for(var r=a-8;r<a;r++)n=c(o.get(r,8),n);for(var d=1/0,l=null,i=0,B=f;i<B.length;i++){var k=B[i],u=k.bits,C=k.formatInfo;if(u===e||u===n)return C;var m=t(e,u);m<d&&(l=C,d=m),e!==n&&(m=t(n,u))<d&&(l=C,d=m)}return d<=3?l:null}function l(o,e,r){var t=e.errorCorrectionLevels[r],c=[],s=0;if(t.ecBlocks.forEach(function(o){for(var e=0;e<o.numBlocks;e++)c.push({numDataCodewords:o.dataCodewordsPerBlock,codewords:[]}),s+=o.dataCodewordsPerBlock+t.ecCodewordsPerBlock}),o.length<s)return null;o=o.slice(0,s);for(var a=t.ecBlocks[0].dataCodewordsPerBlock,n=0;n<a;n++)for(var d=0,l=c;d<l.length;d++){var i=l[d];i.codewords.push(o.shift())}if(t.ecBlocks.length>1)for(var B=t.ecBlocks[0].numBlocks,k=t.ecBlocks[1].numBlocks,n=0;n<k;n++)c[B+n].codewords.push(o.shift());for(;o.length>0;)for(var u=0,C=c;u<C.length;u++){var i=C[u];i.codewords.push(o.shift())}return c}function i(o){var e=n(o);if(!e)return null;var r=d(o);if(!r)return null;var t=a(o,e,r),c=l(t,e,r.errorCorrectionLevel);if(!c)return null;for(var s=c.reduce(function(o,e){return o+e.numDataCodewords},0),i=new Uint8ClampedArray(s),B=0,k=0,m=c;k<m.length;k++){var f=m[k],w=C.decode(f.codewords,f.codewords.length-f.numDataCodewords);if(!w)return null;for(var P=0;P<f.numDataCodewords;P++)i[B++]=w[P]}try{return u.decode(i,e.versionNumber)}catch(o){return null}}function B(o){if(null==o)return null;var e=i(o);if(e)return e;for(var r=0;r<o.width;r++)for(var t=r+1;t<o.height;t++)o.get(r,t)!==o.get(t,r)&&(o.set(r,t,!o.get(r,t)),o.set(t,r,!o.get(t,r)));return i(o)}Object.defineProperty(e,\"__esModule\",{value:!0});var k=r(0),u=r(6),C=r(9),m=r(10),f=[{bits:21522,formatInfo:{errorCorrectionLevel:1,dataMask:0}},{bits:20773,formatInfo:{errorCorrectionLevel:1,dataMask:1}},{bits:24188,formatInfo:{errorCorrectionLevel:1,dataMask:2}},{bits:23371,formatInfo:{errorCorrectionLevel:1,dataMask:3}},{bits:17913,formatInfo:{errorCorrectionLevel:1,dataMask:4}},{bits:16590,formatInfo:{errorCorrectionLevel:1,dataMask:5}},{bits:20375,formatInfo:{errorCorrectionLevel:1,dataMask:6}},{bits:19104,formatInfo:{errorCorrectionLevel:1,dataMask:7}},{bits:30660,formatInfo:{errorCorrectionLevel:0,dataMask:0}},{bits:29427,formatInfo:{errorCorrectionLevel:0,dataMask:1}},{bits:32170,formatInfo:{errorCorrectionLevel:0,dataMask:2}},{bits:30877,formatInfo:{errorCorrectionLevel:0,dataMask:3}},{bits:26159,formatInfo:{errorCorrectionLevel:0,dataMask:4}},{bits:25368,formatInfo:{errorCorrectionLevel:0,dataMask:5}},{bits:27713,formatInfo:{errorCorrectionLevel:0,dataMask:6}},{bits:26998,formatInfo:{errorCorrectionLevel:0,dataMask:7}},{bits:5769,formatInfo:{errorCorrectionLevel:3,dataMask:0}},{bits:5054,formatInfo:{errorCorrectionLevel:3,dataMask:1}},{bits:7399,formatInfo:{errorCorrectionLevel:3,dataMask:2}},{bits:6608,formatInfo:{errorCorrectionLevel:3,dataMask:3}},{bits:1890,formatInfo:{errorCorrectionLevel:3,dataMask:4}},{bits:597,formatInfo:{errorCorrectionLevel:3,dataMask:5}},{bits:3340,formatInfo:{errorCorrectionLevel:3,dataMask:6}},{bits:2107,formatInfo:{errorCorrectionLevel:3,dataMask:7}},{bits:13663,formatInfo:{errorCorrectionLevel:2,dataMask:0}},{bits:12392,formatInfo:{errorCorrectionLevel:2,dataMask:1}},{bits:16177,formatInfo:{errorCorrectionLevel:2,dataMask:2}},{bits:14854,formatInfo:{errorCorrectionLevel:2,dataMask:3}},{bits:9396,formatInfo:{errorCorrectionLevel:2,dataMask:4}},{bits:8579,formatInfo:{errorCorrectionLevel:2,dataMask:5}},{bits:11994,formatInfo:{errorCorrectionLevel:2,dataMask:6}},{bits:11245,formatInfo:{errorCorrectionLevel:2,dataMask:7}}],w=[function(o){return(o.y+o.x)%2==0},function(o){return o.y%2==0},function(o){return o.x%3==0},function(o){return(o.y+o.x)%3==0},function(o){return(Math.floor(o.y/2)+Math.floor(o.x/3))%2==0},function(o){return o.x*o.y%2+o.x*o.y%3==0},function(o){return(o.y*o.x%2+o.y*o.x%3)%2==0},function(o){return((o.y+o.x)%2+o.y*o.x%3)%2==0}];e.decode=B},function(o,e,r){\"use strict\";function t(o,e){for(var r=[],t=\"\",c=[10,12,14][e],s=o.readBits(c);s>=3;){var a=o.readBits(10);if(a>=1e3)throw new Error(\"Invalid numeric value above 999\");var n=Math.floor(a/100),d=Math.floor(a/10)%10,l=a%10;r.push(48+n,48+d,48+l),t+=n.toString()+d.toString()+l.toString(),s-=3}if(2===s){var a=o.readBits(7);if(a>=100)throw new Error(\"Invalid numeric value above 99\");var n=Math.floor(a/10),d=a%10;r.push(48+n,48+d),t+=n.toString()+d.toString()}else if(1===s){var a=o.readBits(4);if(a>=10)throw new Error(\"Invalid numeric value above 9\");r.push(48+a),t+=a.toString()}return{bytes:r,text:t}}function c(o,e){for(var r=[],t=\"\",c=[9,11,13][e],s=o.readBits(c);s>=2;){var a=o.readBits(11),n=Math.floor(a/45),d=a%45;r.push(k[n].charCodeAt(0),k[d].charCodeAt(0)),t+=k[n]+k[d],s-=2}if(1===s){var n=o.readBits(6);r.push(k[n].charCodeAt(0)),t+=k[n]}return{bytes:r,text:t}}function s(o,e){for(var r=[],t=\"\",c=[8,16,16][e],s=o.readBits(c),a=0;a<s;a++){var n=o.readBits(8);r.push(n)}try{t+=decodeURIComponent(r.map(function(o){return\"%\"+(\"0\"+o.toString(16)).substr(-2)}).join(\"\"))}catch(o){}return{bytes:r,text:t}}function a(o,e){for(var r=[],t=\"\",c=[8,10,12][e],s=o.readBits(c),a=0;a<s;a++){var n=o.readBits(13),d=Math.floor(n/192)<<8|n%192;d+=d<7936?33088:49472,r.push(d>>8,255&d),t+=String.fromCharCode(i.shiftJISTable[d])}return{bytes:r,text:t}}function n(o,e){for(var r=new l.BitStream(o),n=e<=9?0:e<=26?1:2,i={text:\"\",bytes:[],chunks:[]};r.available()>=4;){var k=r.readBits(4);if(k===B.Terminator)return i;if(k===B.ECI)0===r.readBits(1)?i.chunks.push({type:d.ECI,assignmentNumber:r.readBits(7)}):0===r.readBits(1)?i.chunks.push({type:d.ECI,assignmentNumber:r.readBits(14)}):0===r.readBits(1)?i.chunks.push({type:d.ECI,assignmentNumber:r.readBits(21)}):i.chunks.push({type:d.ECI,assignmentNumber:-1});else if(k===B.Numeric){var u=t(r,n);i.text+=u.text,(w=i.bytes).push.apply(w,u.bytes),i.chunks.push({type:d.Numeric,text:u.text})}else if(k===B.Alphanumeric){var C=c(r,n);i.text+=C.text,(P=i.bytes).push.apply(P,C.bytes),i.chunks.push({type:d.Alphanumeric,text:C.text})}else if(k===B.Byte){var m=s(r,n);i.text+=m.text,(v=i.bytes).push.apply(v,m.bytes),i.chunks.push({type:d.Byte,bytes:m.bytes,text:m.text})}else if(k===B.Kanji){var f=a(r,n);i.text+=f.text,(h=i.bytes).push.apply(h,f.bytes),i.chunks.push({type:d.Kanji,bytes:f.bytes,text:f.text})}}var w,P,v,h}Object.defineProperty(e,\"__esModule\",{value:!0});var d,l=r(7),i=r(8);!function(o){o.Numeric=\"numeric\",o.Alphanumeric=\"alphanumeric\",o.Byte=\"byte\",o.Kanji=\"kanji\",o.ECI=\"eci\"}(d=e.Mode||(e.Mode={}));var B;!function(o){o[o.Terminator=0]=\"Terminator\",o[o.Numeric=1]=\"Numeric\",o[o.Alphanumeric=2]=\"Alphanumeric\",o[o.Byte=4]=\"Byte\",o[o.Kanji=8]=\"Kanji\",o[o.ECI=7]=\"ECI\"}(B||(B={}));var k=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\" \",\"$\",\"%\",\"*\",\"+\",\"-\",\".\",\"/\",\":\"];e.decode=n},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=function(){function o(o){this.byteOffset=0,this.bitOffset=0,this.bytes=o}return o.prototype.readBits=function(o){if(o<1||o>32||o>this.available())throw new Error(\"Cannot read \"+o.toString()+\" bits\");var e=0;if(this.bitOffset>0){var r=8-this.bitOffset,t=o<r?o:r,c=r-t,s=255>>8-t<<c;e=(this.bytes[this.byteOffset]&s)>>c,o-=t,this.bitOffset+=t,8===this.bitOffset&&(this.bitOffset=0,this.byteOffset++)}if(o>0){for(;o>=8;)e=e<<8|255&this.bytes[this.byteOffset],this.byteOffset++,o-=8;if(o>0){var c=8-o,s=255>>c<<c;e=e<<o|(this.bytes[this.byteOffset]&s)>>c,this.bitOffset+=o}}return e},o.prototype.available=function(){return 8*(this.bytes.length-this.byteOffset)-this.bitOffset},o}();e.BitStream=t},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.shiftJISTable={32:32,33:33,34:34,35:35,36:36,37:37,38:38,39:39,40:40,41:41,42:42,43:43,44:44,45:45,46:46,47:47,48:48,49:49,50:50,51:51,52:52,53:53,54:54,55:55,56:56,57:57,58:58,59:59,60:60,61:61,62:62,63:63,64:64,65:65,66:66,67:67,68:68,69:69,70:70,71:71,72:72,73:73,74:74,75:75,76:76,77:77,78:78,79:79,80:80,81:81,82:82,83:83,84:84,85:85,86:86,87:87,88:88,89:89,90:90,91:91,92:165,93:93,94:94,95:95,96:96,97:97,98:98,99:99,100:100,101:101,102:102,103:103,104:104,105:105,106:106,107:107,108:108,109:109,110:110,111:111,112:112,113:113,114:114,115:115,116:116,117:117,118:118,119:119,120:120,121:121,122:122,123:123,124:124,125:125,126:8254,33088:12288,33089:12289,33090:12290,33091:65292,33092:65294,33093:12539,33094:65306,33095:65307,33096:65311,33097:65281,33098:12443,33099:12444,33100:180,33101:65344,33102:168,33103:65342,33104:65507,33105:65343,33106:12541,33107:12542,33108:12445,33109:12446,33110:12291,33111:20189,33112:12293,33113:12294,33114:12295,33115:12540,33116:8213,33117:8208,33118:65295,33119:92,33120:12316,33121:8214,33122:65372,33123:8230,33124:8229,33125:8216,33126:8217,33127:8220,33128:8221,33129:65288,33130:65289,33131:12308,33132:12309,33133:65339,33134:65341,33135:65371,33136:65373,33137:12296,33138:12297,33139:12298,33140:12299,33141:12300,33142:12301,33143:12302,33144:12303,33145:12304,33146:12305,33147:65291,33148:8722,33149:177,33150:215,33152:247,33153:65309,33154:8800,33155:65308,33156:65310,33157:8806,33158:8807,33159:8734,33160:8756,33161:9794,33162:9792,33163:176,33164:8242,33165:8243,33166:8451,33167:65509,33168:65284,33169:162,33170:163,33171:65285,33172:65283,33173:65286,33174:65290,33175:65312,33176:167,33177:9734,33178:9733,33179:9675,33180:9679,33181:9678,33182:9671,33183:9670,33184:9633,33185:9632,33186:9651,33187:9650,33188:9661,33189:9660,33190:8251,33191:12306,33192:8594,33193:8592,33194:8593,33195:8595,33196:12307,33208:8712,33209:8715,33210:8838,33211:8839,33212:8834,33213:8835,33214:8746,33215:8745,33224:8743,33225:8744,33226:172,33227:8658,33228:8660,33229:8704,33230:8707,33242:8736,33243:8869,33244:8978,33245:8706,33246:8711,33247:8801,33248:8786,33249:8810,33250:8811,33251:8730,33252:8765,33253:8733,33254:8757,33255:8747,33256:8748,33264:8491,33265:8240,33266:9839,33267:9837,33268:9834,33269:8224,33270:8225,33271:182,33276:9711,33359:65296,33360:65297,33361:65298,33362:65299,33363:65300,33364:65301,33365:65302,33366:65303,33367:65304,33368:65305,33376:65313,33377:65314,33378:65315,33379:65316,33380:65317,33381:65318,33382:65319,33383:65320,33384:65321,33385:65322,33386:65323,33387:65324,33388:65325,33389:65326,33390:65327,33391:65328,33392:65329,33393:65330,33394:65331,33395:65332,33396:65333,33397:65334,33398:65335,33399:65336,33400:65337,33401:65338,33409:65345,33410:65346,33411:65347,33412:65348,33413:65349,33414:65350,33415:65351,33416:65352,33417:65353,33418:65354,33419:65355,33420:65356,33421:65357,33422:65358,33423:65359,33424:65360,33425:65361,33426:65362,33427:65363,33428:65364,33429:65365,33430:65366,33431:65367,33432:65368,33433:65369,33434:65370,33439:12353,33440:12354,33441:12355,33442:12356,33443:12357,33444:12358,33445:12359,33446:12360,33447:12361,33448:12362,33449:12363,33450:12364,33451:12365,33452:12366,33453:12367,33454:12368,33455:12369,33456:12370,33457:12371,33458:12372,33459:12373,33460:12374,33461:12375,33462:12376,33463:12377,33464:12378,33465:12379,33466:12380,33467:12381,33468:12382,33469:12383,33470:12384,33471:12385,33472:12386,33473:12387,33474:12388,33475:12389,33476:12390,33477:12391,33478:12392,33479:12393,33480:12394,33481:12395,33482:12396,33483:12397,33484:12398,33485:12399,33486:12400,33487:12401,33488:12402,33489:12403,33490:12404,33491:12405,33492:12406,33493:12407,33494:12408,33495:12409,33496:12410,33497:12411,33498:12412,33499:12413,33500:12414,33501:12415,33502:12416,33503:12417,33504:12418,33505:12419,33506:12420,33507:12421,33508:12422,33509:12423,33510:12424,33511:12425,33512:12426,33513:12427,33514:12428,33515:12429,33516:12430,33517:12431,33518:12432,33519:12433,33520:12434,33521:12435,33600:12449,33601:12450,33602:12451,33603:12452,33604:12453,33605:12454,33606:12455,33607:12456,33608:12457,33609:12458,33610:12459,33611:12460,33612:12461,33613:12462,33614:12463,33615:12464,33616:12465,33617:12466,33618:12467,33619:12468,33620:12469,33621:12470,33622:12471,33623:12472,33624:12473,33625:12474,33626:12475,33627:12476,33628:12477,33629:12478,33630:12479,33631:12480,33632:12481,33633:12482,33634:12483,33635:12484,33636:12485,33637:12486,33638:12487,33639:12488,33640:12489,33641:12490,33642:12491,33643:12492,33644:12493,33645:12494,33646:12495,33647:12496,33648:12497,33649:12498,33650:12499,33651:12500,33652:12501,33653:12502,33654:12503,33655:12504,33656:12505,33657:12506,33658:12507,33659:12508,33660:12509,33661:12510,33662:12511,33664:12512,33665:12513,33666:12514,33667:12515,33668:12516,33669:12517,33670:12518,33671:12519,33672:12520,33673:12521,33674:12522,33675:12523,33676:12524,33677:12525,33678:12526,33679:12527,33680:12528,33681:12529,33682:12530,33683:12531,33684:12532,33685:12533,33686:12534,33695:913,33696:914,33697:915,33698:916,33699:917,33700:918,33701:919,33702:920,33703:921,33704:922,33705:923,33706:924,33707:925,33708:926,33709:927,33710:928,33711:929,33712:931,33713:932,33714:933,33715:934,33716:935,33717:936,33718:937,33727:945,33728:946,33729:947,33730:948,33731:949,33732:950,33733:951,33734:952,33735:953,33736:954,33737:955,33738:956,33739:957,33740:958,33741:959,33742:960,33743:961,33744:963,33745:964,33746:965,33747:966,33748:967,33749:968,33750:969,33856:1040,33857:1041,33858:1042,33859:1043,33860:1044,33861:1045,33862:1025,33863:1046,33864:1047,33865:1048,33866:1049,33867:1050,33868:1051,33869:1052,33870:1053,33871:1054,33872:1055,33873:1056,33874:1057,33875:1058,33876:1059,33877:1060,33878:1061,33879:1062,33880:1063,33881:1064,33882:1065,33883:1066,33884:1067,33885:1068,33886:1069,33887:1070,33888:1071,33904:1072,33905:1073,33906:1074,33907:1075,33908:1076,33909:1077,33910:1105,33911:1078,33912:1079,33913:1080,33914:1081,33915:1082,33916:1083,33917:1084,33918:1085,33920:1086,33921:1087,33922:1088,33923:1089,33924:1090,33925:1091,33926:1092,33927:1093,33928:1094,33929:1095,33930:1096,33931:1097,33932:1098,33933:1099,33934:1100,33935:1101,33936:1102,33937:1103,33951:9472,33952:9474,33953:9484,33954:9488,33955:9496,33956:9492,33957:9500,33958:9516,33959:9508,33960:9524,33961:9532,33962:9473,33963:9475,33964:9487,33965:9491,33966:9499,33967:9495,33968:9507,33969:9523,33970:9515,33971:9531,33972:9547,33973:9504,33974:9519,33975:9512,33976:9527,33977:9535,33978:9501,33979:9520,33980:9509,33981:9528,33982:9538,34975:20124,34976:21782,34977:23043,34978:38463,34979:21696,34980:24859,34981:25384,34982:23030,34983:36898,34984:33909,34985:33564,34986:31312,34987:24746,34988:25569,34989:28197,34990:26093,34991:33894,34992:33446,34993:39925,34994:26771,34995:22311,34996:26017,34997:25201,34998:23451,34999:22992,35e3:34427,35001:39156,35002:32098,35003:32190,35004:39822,35005:25110,35006:31903,35007:34999,35008:23433,35009:24245,35010:25353,35011:26263,35012:26696,35013:38343,35014:38797,35015:26447,35016:20197,35017:20234,35018:20301,35019:20381,35020:20553,35021:22258,35022:22839,35023:22996,35024:23041,35025:23561,35026:24799,35027:24847,35028:24944,35029:26131,35030:26885,35031:28858,35032:30031,35033:30064,35034:31227,35035:32173,35036:32239,35037:32963,35038:33806,35039:34915,35040:35586,35041:36949,35042:36986,35043:21307,35044:20117,35045:20133,35046:22495,35047:32946,35048:37057,35049:30959,35050:19968,35051:22769,35052:28322,35053:36920,35054:31282,35055:33576,35056:33419,35057:39983,35058:20801,35059:21360,35060:21693,35061:21729,35062:22240,35063:23035,35064:24341,35065:39154,35066:28139,35067:32996,35068:34093,35136:38498,35137:38512,35138:38560,35139:38907,35140:21515,35141:21491,35142:23431,35143:28879,35144:32701,35145:36802,35146:38632,35147:21359,35148:40284,35149:31418,35150:19985,35151:30867,35152:33276,35153:28198,35154:22040,35155:21764,35156:27421,35157:34074,35158:39995,35159:23013,35160:21417,35161:28006,35162:29916,35163:38287,35164:22082,35165:20113,35166:36939,35167:38642,35168:33615,35169:39180,35170:21473,35171:21942,35172:23344,35173:24433,35174:26144,35175:26355,35176:26628,35177:27704,35178:27891,35179:27945,35180:29787,35181:30408,35182:31310,35183:38964,35184:33521,35185:34907,35186:35424,35187:37613,35188:28082,35189:30123,35190:30410,35191:39365,35192:24742,35193:35585,35194:36234,35195:38322,35196:27022,35197:21421,35198:20870,35200:22290,35201:22576,35202:22852,35203:23476,35204:24310,35205:24616,35206:25513,35207:25588,35208:27839,35209:28436,35210:28814,35211:28948,35212:29017,35213:29141,35214:29503,35215:32257,35216:33398,35217:33489,35218:34199,35219:36960,35220:37467,35221:40219,35222:22633,35223:26044,35224:27738,35225:29989,35226:20985,35227:22830,35228:22885,35229:24448,35230:24540,35231:25276,35232:26106,35233:27178,35234:27431,35235:27572,35236:29579,35237:32705,35238:35158,35239:40236,35240:40206,35241:40644,35242:23713,35243:27798,35244:33659,35245:20740,35246:23627,35247:25014,35248:33222,35249:26742,35250:29281,35251:20057,35252:20474,35253:21368,35254:24681,35255:28201,35256:31311,35257:38899,35258:19979,35259:21270,35260:20206,35261:20309,35262:20285,35263:20385,35264:20339,35265:21152,35266:21487,35267:22025,35268:22799,35269:23233,35270:23478,35271:23521,35272:31185,35273:26247,35274:26524,35275:26550,35276:27468,35277:27827,35278:28779,35279:29634,35280:31117,35281:31166,35282:31292,35283:31623,35284:33457,35285:33499,35286:33540,35287:33655,35288:33775,35289:33747,35290:34662,35291:35506,35292:22057,35293:36008,35294:36838,35295:36942,35296:38686,35297:34442,35298:20420,35299:23784,35300:25105,35301:29273,35302:30011,35303:33253,35304:33469,35305:34558,35306:36032,35307:38597,35308:39187,35309:39381,35310:20171,35311:20250,35312:35299,35313:22238,35314:22602,35315:22730,35316:24315,35317:24555,35318:24618,35319:24724,35320:24674,35321:25040,35322:25106,35323:25296,35324:25913,35392:39745,35393:26214,35394:26800,35395:28023,35396:28784,35397:30028,35398:30342,35399:32117,35400:33445,35401:34809,35402:38283,35403:38542,35404:35997,35405:20977,35406:21182,35407:22806,35408:21683,35409:23475,35410:23830,35411:24936,35412:27010,35413:28079,35414:30861,35415:33995,35416:34903,35417:35442,35418:37799,35419:39608,35420:28012,35421:39336,35422:34521,35423:22435,35424:26623,35425:34510,35426:37390,35427:21123,35428:22151,35429:21508,35430:24275,35431:25313,35432:25785,35433:26684,35434:26680,35435:27579,35436:29554,35437:30906,35438:31339,35439:35226,35440:35282,35441:36203,35442:36611,35443:37101,35444:38307,35445:38548,35446:38761,35447:23398,35448:23731,35449:27005,35450:38989,35451:38990,35452:25499,35453:31520,35454:27179,35456:27263,35457:26806,35458:39949,35459:28511,35460:21106,35461:21917,35462:24688,35463:25324,35464:27963,35465:28167,35466:28369,35467:33883,35468:35088,35469:36676,35470:19988,35471:39993,35472:21494,35473:26907,35474:27194,35475:38788,35476:26666,35477:20828,35478:31427,35479:33970,35480:37340,35481:37772,35482:22107,35483:40232,35484:26658,35485:33541,35486:33841,35487:31909,35488:21e3,35489:33477,35490:29926,35491:20094,35492:20355,35493:20896,35494:23506,35495:21002,35496:21208,35497:21223,35498:24059,35499:21914,35500:22570,35501:23014,35502:23436,35503:23448,35504:23515,35505:24178,35506:24185,35507:24739,35508:24863,35509:24931,35510:25022,35511:25563,35512:25954,35513:26577,35514:26707,35515:26874,35516:27454,35517:27475,35518:27735,35519:28450,35520:28567,35521:28485,35522:29872,35523:29976,35524:30435,35525:30475,35526:31487,35527:31649,35528:31777,35529:32233,35530:32566,35531:32752,35532:32925,35533:33382,35534:33694,35535:35251,35536:35532,35537:36011,35538:36996,35539:37969,35540:38291,35541:38289,35542:38306,35543:38501,35544:38867,35545:39208,35546:33304,35547:20024,35548:21547,35549:23736,35550:24012,35551:29609,35552:30284,35553:30524,35554:23721,35555:32747,35556:36107,35557:38593,35558:38929,35559:38996,35560:39e3,35561:20225,35562:20238,35563:21361,35564:21916,35565:22120,35566:22522,35567:22855,35568:23305,35569:23492,35570:23696,35571:24076,35572:24190,35573:24524,35574:25582,35575:26426,35576:26071,35577:26082,35578:26399,35579:26827,35580:26820,35648:27231,35649:24112,35650:27589,35651:27671,35652:27773,35653:30079,35654:31048,35655:23395,35656:31232,35657:32e3,35658:24509,35659:35215,35660:35352,35661:36020,35662:36215,35663:36556,35664:36637,35665:39138,35666:39438,35667:39740,35668:20096,35669:20605,35670:20736,35671:22931,35672:23452,35673:25135,35674:25216,35675:25836,35676:27450,35677:29344,35678:30097,35679:31047,35680:32681,35681:34811,35682:35516,35683:35696,35684:25516,35685:33738,35686:38816,35687:21513,35688:21507,35689:21931,35690:26708,35691:27224,35692:35440,35693:30759,35694:26485,35695:40653,35696:21364,35697:23458,35698:33050,35699:34384,35700:36870,35701:19992,35702:20037,35703:20167,35704:20241,35705:21450,35706:21560,35707:23470,35708:24339,35709:24613,35710:25937,35712:26429,35713:27714,35714:27762,35715:27875,35716:28792,35717:29699,35718:31350,35719:31406,35720:31496,35721:32026,35722:31998,35723:32102,35724:26087,35725:29275,35726:21435,35727:23621,35728:24040,35729:25298,35730:25312,35731:25369,35732:28192,35733:34394,35734:35377,35735:36317,35736:37624,35737:28417,35738:31142,35739:39770,35740:20136,35741:20139,35742:20140,35743:20379,35744:20384,35745:20689,35746:20807,35747:31478,35748:20849,35749:20982,35750:21332,35751:21281,35752:21375,35753:21483,35754:21932,35755:22659,35756:23777,35757:24375,35758:24394,35759:24623,35760:24656,35761:24685,35762:25375,35763:25945,35764:27211,35765:27841,35766:29378,35767:29421,35768:30703,35769:33016,35770:33029,35771:33288,35772:34126,35773:37111,35774:37857,35775:38911,35776:39255,35777:39514,35778:20208,35779:20957,35780:23597,35781:26241,35782:26989,35783:23616,35784:26354,35785:26997,35786:29577,35787:26704,35788:31873,35789:20677,35790:21220,35791:22343,35792:24062,35793:37670,35794:26020,35795:27427,35796:27453,35797:29748,35798:31105,35799:31165,35800:31563,35801:32202,35802:33465,35803:33740,35804:34943,35805:35167,35806:35641,35807:36817,35808:37329,35809:21535,35810:37504,35811:20061,35812:20534,35813:21477,35814:21306,35815:29399,35816:29590,35817:30697,35818:33510,35819:36527,35820:39366,35821:39368,35822:39378,35823:20855,35824:24858,35825:34398,35826:21936,35827:31354,35828:20598,35829:23507,35830:36935,35831:38533,35832:20018,35833:27355,35834:37351,35835:23633,35836:23624,35904:25496,35905:31391,35906:27795,35907:38772,35908:36705,35909:31402,35910:29066,35911:38536,35912:31874,35913:26647,35914:32368,35915:26705,35916:37740,35917:21234,35918:21531,35919:34219,35920:35347,35921:32676,35922:36557,35923:37089,35924:21350,35925:34952,35926:31041,35927:20418,35928:20670,35929:21009,35930:20804,35931:21843,35932:22317,35933:29674,35934:22411,35935:22865,35936:24418,35937:24452,35938:24693,35939:24950,35940:24935,35941:25001,35942:25522,35943:25658,35944:25964,35945:26223,35946:26690,35947:28179,35948:30054,35949:31293,35950:31995,35951:32076,35952:32153,35953:32331,35954:32619,35955:33550,35956:33610,35957:34509,35958:35336,35959:35427,35960:35686,35961:36605,35962:38938,35963:40335,35964:33464,35965:36814,35966:39912,35968:21127,35969:25119,35970:25731,35971:28608,35972:38553,35973:26689,35974:20625,35975:27424,35976:27770,35977:28500,35978:31348,35979:32080,35980:34880,35981:35363,35982:26376,35983:20214,35984:20537,35985:20518,35986:20581,35987:20860,35988:21048,35989:21091,35990:21927,35991:22287,35992:22533,35993:23244,35994:24314,35995:25010,35996:25080,35997:25331,35998:25458,35999:26908,36e3:27177,36001:29309,36002:29356,36003:29486,36004:30740,36005:30831,36006:32121,36007:30476,36008:32937,36009:35211,36010:35609,36011:36066,36012:36562,36013:36963,36014:37749,36015:38522,36016:38997,36017:39443,36018:40568,36019:20803,36020:21407,36021:21427,36022:24187,36023:24358,36024:28187,36025:28304,36026:29572,36027:29694,36028:32067,36029:33335,36030:35328,36031:35578,36032:38480,36033:20046,36034:20491,36035:21476,36036:21628,36037:22266,36038:22993,36039:23396,36040:24049,36041:24235,36042:24359,36043:25144,36044:25925,36045:26543,36046:28246,36047:29392,36048:31946,36049:34996,36050:32929,36051:32993,36052:33776,36053:34382,36054:35463,36055:36328,36056:37431,36057:38599,36058:39015,36059:40723,36060:20116,36061:20114,36062:20237,36063:21320,36064:21577,36065:21566,36066:23087,36067:24460,36068:24481,36069:24735,36070:26791,36071:27278,36072:29786,36073:30849,36074:35486,36075:35492,36076:35703,36077:37264,36078:20062,36079:39881,36080:20132,36081:20348,36082:20399,36083:20505,36084:20502,36085:20809,36086:20844,36087:21151,36088:21177,36089:21246,36090:21402,36091:21475,36092:21521,36160:21518,36161:21897,36162:22353,36163:22434,36164:22909,36165:23380,36166:23389,36167:23439,36168:24037,36169:24039,36170:24055,36171:24184,36172:24195,36173:24218,36174:24247,36175:24344,36176:24658,36177:24908,36178:25239,36179:25304,36180:25511,36181:25915,36182:26114,36183:26179,36184:26356,36185:26477,36186:26657,36187:26775,36188:27083,36189:27743,36190:27946,36191:28009,36192:28207,36193:28317,36194:30002,36195:30343,36196:30828,36197:31295,36198:31968,36199:32005,36200:32024,36201:32094,36202:32177,36203:32789,36204:32771,36205:32943,36206:32945,36207:33108,36208:33167,36209:33322,36210:33618,36211:34892,36212:34913,36213:35611,36214:36002,36215:36092,36216:37066,36217:37237,36218:37489,36219:30783,36220:37628,36221:38308,36222:38477,36224:38917,36225:39321,36226:39640,36227:40251,36228:21083,36229:21163,36230:21495,36231:21512,36232:22741,36233:25335,36234:28640,36235:35946,36236:36703,36237:40633,36238:20811,36239:21051,36240:21578,36241:22269,36242:31296,36243:37239,36244:40288,36245:40658,36246:29508,36247:28425,36248:33136,36249:29969,36250:24573,36251:24794,36252:39592,36253:29403,36254:36796,36255:27492,36256:38915,36257:20170,36258:22256,36259:22372,36260:22718,36261:23130,36262:24680,36263:25031,36264:26127,36265:26118,36266:26681,36267:26801,36268:28151,36269:30165,36270:32058,36271:33390,36272:39746,36273:20123,36274:20304,36275:21449,36276:21766,36277:23919,36278:24038,36279:24046,36280:26619,36281:27801,36282:29811,36283:30722,36284:35408,36285:37782,36286:35039,36287:22352,36288:24231,36289:25387,36290:20661,36291:20652,36292:20877,36293:26368,36294:21705,36295:22622,36296:22971,36297:23472,36298:24425,36299:25165,36300:25505,36301:26685,36302:27507,36303:28168,36304:28797,36305:37319,36306:29312,36307:30741,36308:30758,36309:31085,36310:25998,36311:32048,36312:33756,36313:35009,36314:36617,36315:38555,36316:21092,36317:22312,36318:26448,36319:32618,36320:36001,36321:20916,36322:22338,36323:38442,36324:22586,36325:27018,36326:32948,36327:21682,36328:23822,36329:22524,36330:30869,36331:40442,36332:20316,36333:21066,36334:21643,36335:25662,36336:26152,36337:26388,36338:26613,36339:31364,36340:31574,36341:32034,36342:37679,36343:26716,36344:39853,36345:31545,36346:21273,36347:20874,36348:21047,36416:23519,36417:25334,36418:25774,36419:25830,36420:26413,36421:27578,36422:34217,36423:38609,36424:30352,36425:39894,36426:25420,36427:37638,36428:39851,36429:30399,36430:26194,36431:19977,36432:20632,36433:21442,36434:23665,36435:24808,36436:25746,36437:25955,36438:26719,36439:29158,36440:29642,36441:29987,36442:31639,36443:32386,36444:34453,36445:35715,36446:36059,36447:37240,36448:39184,36449:26028,36450:26283,36451:27531,36452:20181,36453:20180,36454:20282,36455:20351,36456:21050,36457:21496,36458:21490,36459:21987,36460:22235,36461:22763,36462:22987,36463:22985,36464:23039,36465:23376,36466:23629,36467:24066,36468:24107,36469:24535,36470:24605,36471:25351,36472:25903,36473:23388,36474:26031,36475:26045,36476:26088,36477:26525,36478:27490,36480:27515,36481:27663,36482:29509,36483:31049,36484:31169,36485:31992,36486:32025,36487:32043,36488:32930,36489:33026,36490:33267,36491:35222,36492:35422,36493:35433,36494:35430,36495:35468,36496:35566,36497:36039,36498:36060,36499:38604,36500:39164,36501:27503,36502:20107,36503:20284,36504:20365,36505:20816,36506:23383,36507:23546,36508:24904,36509:25345,36510:26178,36511:27425,36512:28363,36513:27835,36514:29246,36515:29885,36516:30164,36517:30913,36518:31034,36519:32780,36520:32819,36521:33258,36522:33940,36523:36766,36524:27728,36525:40575,36526:24335,36527:35672,36528:40235,36529:31482,36530:36600,36531:23437,36532:38635,36533:19971,36534:21489,36535:22519,36536:22833,36537:23241,36538:23460,36539:24713,36540:28287,36541:28422,36542:30142,36543:36074,36544:23455,36545:34048,36546:31712,36547:20594,36548:26612,36549:33437,36550:23649,36551:34122,36552:32286,36553:33294,36554:20889,36555:23556,36556:25448,36557:36198,36558:26012,36559:29038,36560:31038,36561:32023,36562:32773,36563:35613,36564:36554,36565:36974,36566:34503,36567:37034,36568:20511,36569:21242,36570:23610,36571:26451,36572:28796,36573:29237,36574:37196,36575:37320,36576:37675,36577:33509,36578:23490,36579:24369,36580:24825,36581:20027,36582:21462,36583:23432,36584:25163,36585:26417,36586:27530,36587:29417,36588:29664,36589:31278,36590:33131,36591:36259,36592:37202,36593:39318,36594:20754,36595:21463,36596:21610,36597:23551,36598:25480,36599:27193,36600:32172,36601:38656,36602:22234,36603:21454,36604:21608,36672:23447,36673:23601,36674:24030,36675:20462,36676:24833,36677:25342,36678:27954,36679:31168,36680:31179,36681:32066,36682:32333,36683:32722,36684:33261,36685:33311,36686:33936,36687:34886,36688:35186,36689:35728,36690:36468,36691:36655,36692:36913,36693:37195,36694:37228,36695:38598,36696:37276,36697:20160,36698:20303,36699:20805,36700:21313,36701:24467,36702:25102,36703:26580,36704:27713,36705:28171,36706:29539,36707:32294,36708:37325,36709:37507,36710:21460,36711:22809,36712:23487,36713:28113,36714:31069,36715:32302,36716:31899,36717:22654,36718:29087,36719:20986,36720:34899,36721:36848,36722:20426,36723:23803,36724:26149,36725:30636,36726:31459,36727:33308,36728:39423,36729:20934,36730:24490,36731:26092,36732:26991,36733:27529,36734:28147,36736:28310,36737:28516,36738:30462,36739:32020,36740:24033,36741:36981,36742:37255,36743:38918,36744:20966,36745:21021,36746:25152,36747:26257,36748:26329,36749:28186,36750:24246,36751:32210,36752:32626,36753:26360,36754:34223,36755:34295,36756:35576,36757:21161,36758:21465,36759:22899,36760:24207,36761:24464,36762:24661,36763:37604,36764:38500,36765:20663,36766:20767,36767:21213,36768:21280,36769:21319,36770:21484,36771:21736,36772:21830,36773:21809,36774:22039,36775:22888,36776:22974,36777:23100,36778:23477,36779:23558,36780:23567,36781:23569,36782:23578,36783:24196,36784:24202,36785:24288,36786:24432,36787:25215,36788:25220,36789:25307,36790:25484,36791:25463,36792:26119,36793:26124,36794:26157,36795:26230,36796:26494,36797:26786,36798:27167,36799:27189,36800:27836,36801:28040,36802:28169,36803:28248,36804:28988,36805:28966,36806:29031,36807:30151,36808:30465,36809:30813,36810:30977,36811:31077,36812:31216,36813:31456,36814:31505,36815:31911,36816:32057,36817:32918,36818:33750,36819:33931,36820:34121,36821:34909,36822:35059,36823:35359,36824:35388,36825:35412,36826:35443,36827:35937,36828:36062,36829:37284,36830:37478,36831:37758,36832:37912,36833:38556,36834:38808,36835:19978,36836:19976,36837:19998,36838:20055,36839:20887,36840:21104,36841:22478,36842:22580,36843:22732,36844:23330,36845:24120,36846:24773,36847:25854,36848:26465,36849:26454,36850:27972,36851:29366,36852:30067,36853:31331,36854:33976,36855:35698,36856:37304,36857:37664,36858:22065,36859:22516,36860:39166,36928:25325,36929:26893,36930:27542,36931:29165,36932:32340,36933:32887,36934:33394,36935:35302,36936:39135,36937:34645,36938:36785,36939:23611,36940:20280,36941:20449,36942:20405,36943:21767,36944:23072,36945:23517,36946:23529,36947:24515,36948:24910,36949:25391,36950:26032,36951:26187,36952:26862,36953:27035,36954:28024,36955:28145,36956:30003,36957:30137,36958:30495,36959:31070,36960:31206,36961:32051,36962:33251,36963:33455,36964:34218,36965:35242,36966:35386,36967:36523,36968:36763,36969:36914,36970:37341,36971:38663,36972:20154,36973:20161,36974:20995,36975:22645,36976:22764,36977:23563,36978:29978,36979:23613,36980:33102,36981:35338,36982:36805,36983:38499,36984:38765,36985:31525,36986:35535,36987:38920,36988:37218,36989:22259,36990:21416,36992:36887,36993:21561,36994:22402,36995:24101,36996:25512,36997:27700,36998:28810,36999:30561,37e3:31883,37001:32736,37002:34928,37003:36930,37004:37204,37005:37648,37006:37656,37007:38543,37008:29790,37009:39620,37010:23815,37011:23913,37012:25968,37013:26530,37014:36264,37015:38619,37016:25454,37017:26441,37018:26905,37019:33733,37020:38935,37021:38592,37022:35070,37023:28548,37024:25722,37025:23544,37026:19990,37027:28716,37028:30045,37029:26159,37030:20932,37031:21046,37032:21218,37033:22995,37034:24449,37035:24615,37036:25104,37037:25919,37038:25972,37039:26143,37040:26228,37041:26866,37042:26646,37043:27491,37044:28165,37045:29298,37046:29983,37047:30427,37048:31934,37049:32854,37050:22768,37051:35069,37052:35199,37053:35488,37054:35475,37055:35531,37056:36893,37057:37266,37058:38738,37059:38745,37060:25993,37061:31246,37062:33030,37063:38587,37064:24109,37065:24796,37066:25114,37067:26021,37068:26132,37069:26512,37070:30707,37071:31309,37072:31821,37073:32318,37074:33034,37075:36012,37076:36196,37077:36321,37078:36447,37079:30889,37080:20999,37081:25305,37082:25509,37083:25666,37084:25240,37085:35373,37086:31363,37087:31680,37088:35500,37089:38634,37090:32118,37091:33292,37092:34633,37093:20185,37094:20808,37095:21315,37096:21344,37097:23459,37098:23554,37099:23574,37100:24029,37101:25126,37102:25159,37103:25776,37104:26643,37105:26676,37106:27849,37107:27973,37108:27927,37109:26579,37110:28508,37111:29006,37112:29053,37113:26059,37114:31359,37115:31661,37116:32218,37184:32330,37185:32680,37186:33146,37187:33307,37188:33337,37189:34214,37190:35438,37191:36046,37192:36341,37193:36984,37194:36983,37195:37549,37196:37521,37197:38275,37198:39854,37199:21069,37200:21892,37201:28472,37202:28982,37203:20840,37204:31109,37205:32341,37206:33203,37207:31950,37208:22092,37209:22609,37210:23720,37211:25514,37212:26366,37213:26365,37214:26970,37215:29401,37216:30095,37217:30094,37218:30990,37219:31062,37220:31199,37221:31895,37222:32032,37223:32068,37224:34311,37225:35380,37226:38459,37227:36961,37228:40736,37229:20711,37230:21109,37231:21452,37232:21474,37233:20489,37234:21930,37235:22766,37236:22863,37237:29245,37238:23435,37239:23652,37240:21277,37241:24803,37242:24819,37243:25436,37244:25475,37245:25407,37246:25531,37248:25805,37249:26089,37250:26361,37251:24035,37252:27085,37253:27133,37254:28437,37255:29157,37256:20105,37257:30185,37258:30456,37259:31379,37260:31967,37261:32207,37262:32156,37263:32865,37264:33609,37265:33624,37266:33900,37267:33980,37268:34299,37269:35013,37270:36208,37271:36865,37272:36973,37273:37783,37274:38684,37275:39442,37276:20687,37277:22679,37278:24974,37279:33235,37280:34101,37281:36104,37282:36896,37283:20419,37284:20596,37285:21063,37286:21363,37287:24687,37288:25417,37289:26463,37290:28204,37291:36275,37292:36895,37293:20439,37294:23646,37295:36042,37296:26063,37297:32154,37298:21330,37299:34966,37300:20854,37301:25539,37302:23384,37303:23403,37304:23562,37305:25613,37306:26449,37307:36956,37308:20182,37309:22810,37310:22826,37311:27760,37312:35409,37313:21822,37314:22549,37315:22949,37316:24816,37317:25171,37318:26561,37319:33333,37320:26965,37321:38464,37322:39364,37323:39464,37324:20307,37325:22534,37326:23550,37327:32784,37328:23729,37329:24111,37330:24453,37331:24608,37332:24907,37333:25140,37334:26367,37335:27888,37336:28382,37337:32974,37338:33151,37339:33492,37340:34955,37341:36024,37342:36864,37343:36910,37344:38538,37345:40667,37346:39899,37347:20195,37348:21488,37349:22823,37350:31532,37351:37261,37352:38988,37353:40441,37354:28381,37355:28711,37356:21331,37357:21828,37358:23429,37359:25176,37360:25246,37361:25299,37362:27810,37363:28655,37364:29730,37365:35351,37366:37944,37367:28609,37368:35582,37369:33592,37370:20967,37371:34552,37372:21482,37440:21481,37441:20294,37442:36948,37443:36784,37444:22890,37445:33073,37446:24061,37447:31466,37448:36799,37449:26842,37450:35895,37451:29432,37452:40008,37453:27197,37454:35504,37455:20025,37456:21336,37457:22022,37458:22374,37459:25285,37460:25506,37461:26086,37462:27470,37463:28129,37464:28251,37465:28845,37466:30701,37467:31471,37468:31658,37469:32187,37470:32829,37471:32966,37472:34507,37473:35477,37474:37723,37475:22243,37476:22727,37477:24382,37478:26029,37479:26262,37480:27264,37481:27573,37482:30007,37483:35527,37484:20516,37485:30693,37486:22320,37487:24347,37488:24677,37489:26234,37490:27744,37491:30196,37492:31258,37493:32622,37494:33268,37495:34584,37496:36933,37497:39347,37498:31689,37499:30044,37500:31481,37501:31569,37502:33988,37504:36880,37505:31209,37506:31378,37507:33590,37508:23265,37509:30528,37510:20013,37511:20210,37512:23449,37513:24544,37514:25277,37515:26172,37516:26609,37517:27880,37518:34411,37519:34935,37520:35387,37521:37198,37522:37619,37523:39376,37524:27159,37525:28710,37526:29482,37527:33511,37528:33879,37529:36015,37530:19969,37531:20806,37532:20939,37533:21899,37534:23541,37535:24086,37536:24115,37537:24193,37538:24340,37539:24373,37540:24427,37541:24500,37542:25074,37543:25361,37544:26274,37545:26397,37546:28526,37547:29266,37548:30010,37549:30522,37550:32884,37551:33081,37552:33144,37553:34678,37554:35519,37555:35548,37556:36229,37557:36339,37558:37530,37559:38263,37560:38914,37561:40165,37562:21189,37563:25431,37564:30452,37565:26389,37566:27784,37567:29645,37568:36035,37569:37806,37570:38515,37571:27941,37572:22684,37573:26894,37574:27084,37575:36861,37576:37786,37577:30171,37578:36890,37579:22618,37580:26626,37581:25524,37582:27131,37583:20291,37584:28460,37585:26584,37586:36795,37587:34086,37588:32180,37589:37716,37590:26943,37591:28528,37592:22378,37593:22775,37594:23340,37595:32044,37596:29226,37597:21514,37598:37347,37599:40372,37600:20141,37601:20302,37602:20572,37603:20597,37604:21059,37605:35998,37606:21576,37607:22564,37608:23450,37609:24093,37610:24213,37611:24237,37612:24311,37613:24351,37614:24716,37615:25269,37616:25402,37617:25552,37618:26799,37619:27712,37620:30855,37621:31118,37622:31243,37623:32224,37624:33351,37625:35330,37626:35558,37627:36420,37628:36883,37696:37048,37697:37165,37698:37336,37699:40718,37700:27877,37701:25688,37702:25826,37703:25973,37704:28404,37705:30340,37706:31515,37707:36969,37708:37841,37709:28346,37710:21746,37711:24505,37712:25764,37713:36685,37714:36845,37715:37444,37716:20856,37717:22635,37718:22825,37719:23637,37720:24215,37721:28155,37722:32399,37723:29980,37724:36028,37725:36578,37726:39003,37727:28857,37728:20253,37729:27583,37730:28593,37731:3e4,37732:38651,37733:20814,37734:21520,37735:22581,37736:22615,37737:22956,37738:23648,37739:24466,37740:26007,37741:26460,37742:28193,37743:30331,37744:33759,37745:36077,37746:36884,37747:37117,37748:37709,37749:30757,37750:30778,37751:21162,37752:24230,37753:22303,37754:22900,37755:24594,37756:20498,37757:20826,37758:20908,37760:20941,37761:20992,37762:21776,37763:22612,37764:22616,37765:22871,37766:23445,37767:23798,37768:23947,37769:24764,37770:25237,37771:25645,37772:26481,37773:26691,37774:26812,37775:26847,37776:30423,37777:28120,37778:28271,37779:28059,37780:28783,37781:29128,37782:24403,37783:30168,37784:31095,37785:31561,37786:31572,37787:31570,37788:31958,37789:32113,37790:21040,37791:33891,37792:34153,37793:34276,37794:35342,37795:35588,37796:35910,37797:36367,37798:36867,37799:36879,37800:37913,37801:38518,37802:38957,37803:39472,37804:38360,37805:20685,37806:21205,37807:21516,37808:22530,37809:23566,37810:24999,37811:25758,37812:27934,37813:30643,37814:31461,37815:33012,37816:33796,37817:36947,37818:37509,37819:23776,37820:40199,37821:21311,37822:24471,37823:24499,37824:28060,37825:29305,37826:30563,37827:31167,37828:31716,37829:27602,37830:29420,37831:35501,37832:26627,37833:27233,37834:20984,37835:31361,37836:26932,37837:23626,37838:40182,37839:33515,37840:23493,37841:37193,37842:28702,37843:22136,37844:23663,37845:24775,37846:25958,37847:27788,37848:35930,37849:36929,37850:38931,37851:21585,37852:26311,37853:37389,37854:22856,37855:37027,37856:20869,37857:20045,37858:20970,37859:34201,37860:35598,37861:28760,37862:25466,37863:37707,37864:26978,37865:39348,37866:32260,37867:30071,37868:21335,37869:26976,37870:36575,37871:38627,37872:27741,37873:20108,37874:23612,37875:24336,37876:36841,37877:21250,37878:36049,37879:32905,37880:34425,37881:24319,37882:26085,37883:20083,37884:20837,37952:22914,37953:23615,37954:38894,37955:20219,37956:22922,37957:24525,37958:35469,37959:28641,37960:31152,37961:31074,37962:23527,37963:33905,37964:29483,37965:29105,37966:24180,37967:24565,37968:25467,37969:25754,37970:29123,37971:31896,37972:20035,37973:24316,37974:20043,37975:22492,37976:22178,37977:24745,37978:28611,37979:32013,37980:33021,37981:33075,37982:33215,37983:36786,37984:35223,37985:34468,37986:24052,37987:25226,37988:25773,37989:35207,37990:26487,37991:27874,37992:27966,37993:29750,37994:30772,37995:23110,37996:32629,37997:33453,37998:39340,37999:20467,38e3:24259,38001:25309,38002:25490,38003:25943,38004:26479,38005:30403,38006:29260,38007:32972,38008:32954,38009:36649,38010:37197,38011:20493,38012:22521,38013:23186,38014:26757,38016:26995,38017:29028,38018:29437,38019:36023,38020:22770,38021:36064,38022:38506,38023:36889,38024:34687,38025:31204,38026:30695,38027:33833,38028:20271,38029:21093,38030:21338,38031:25293,38032:26575,38033:27850,38034:30333,38035:31636,38036:31893,38037:33334,38038:34180,38039:36843,38040:26333,38041:28448,38042:29190,38043:32283,38044:33707,38045:39361,38046:40614,38047:20989,38048:31665,38049:30834,38050:31672,38051:32903,38052:31560,38053:27368,38054:24161,38055:32908,38056:30033,38057:30048,38058:20843,38059:37474,38060:28300,38061:30330,38062:37271,38063:39658,38064:20240,38065:32624,38066:25244,38067:31567,38068:38309,38069:40169,38070:22138,38071:22617,38072:34532,38073:38588,38074:20276,38075:21028,38076:21322,38077:21453,38078:21467,38079:24070,38080:25644,38081:26001,38082:26495,38083:27710,38084:27726,38085:29256,38086:29359,38087:29677,38088:30036,38089:32321,38090:33324,38091:34281,38092:36009,38093:31684,38094:37318,38095:29033,38096:38930,38097:39151,38098:25405,38099:26217,38100:30058,38101:30436,38102:30928,38103:34115,38104:34542,38105:21290,38106:21329,38107:21542,38108:22915,38109:24199,38110:24444,38111:24754,38112:25161,38113:25209,38114:25259,38115:26e3,38116:27604,38117:27852,38118:30130,38119:30382,38120:30865,38121:31192,38122:32203,38123:32631,38124:32933,38125:34987,38126:35513,38127:36027,38128:36991,38129:38750,38130:39131,38131:27147,38132:31800,38133:20633,38134:23614,38135:24494,38136:26503,38137:27608,38138:29749,38139:30473,38140:32654,38208:40763,38209:26570,38210:31255,38211:21305,38212:30091,38213:39661,38214:24422,38215:33181,38216:33777,38217:32920,38218:24380,38219:24517,38220:30050,38221:31558,38222:36924,38223:26727,38224:23019,38225:23195,38226:32016,38227:30334,38228:35628,38229:20469,38230:24426,38231:27161,38232:27703,38233:28418,38234:29922,38235:31080,38236:34920,38237:35413,38238:35961,38239:24287,38240:25551,38241:30149,38242:31186,38243:33495,38244:37672,38245:37618,38246:33948,38247:34541,38248:39981,38249:21697,38250:24428,38251:25996,38252:27996,38253:28693,38254:36007,38255:36051,38256:38971,38257:25935,38258:29942,38259:19981,38260:20184,38261:22496,38262:22827,38263:23142,38264:23500,38265:20904,38266:24067,38267:24220,38268:24598,38269:25206,38270:25975,38272:26023,38273:26222,38274:28014,38275:29238,38276:31526,38277:33104,38278:33178,38279:33433,38280:35676,38281:36e3,38282:36070,38283:36212,38284:38428,38285:38468,38286:20398,38287:25771,38288:27494,38289:33310,38290:33889,38291:34154,38292:37096,38293:23553,38294:26963,38295:39080,38296:33914,38297:34135,38298:20239,38299:21103,38300:24489,38301:24133,38302:26381,38303:31119,38304:33145,38305:35079,38306:35206,38307:28149,38308:24343,38309:25173,38310:27832,38311:20175,38312:29289,38313:39826,38314:20998,38315:21563,38316:22132,38317:22707,38318:24996,38319:25198,38320:28954,38321:22894,38322:31881,38323:31966,38324:32027,38325:38640,38326:25991,38327:32862,38328:19993,38329:20341,38330:20853,38331:22592,38332:24163,38333:24179,38334:24330,38335:26564,38336:20006,38337:34109,38338:38281,38339:38491,38340:31859,38341:38913,38342:20731,38343:22721,38344:30294,38345:30887,38346:21029,38347:30629,38348:34065,38349:31622,38350:20559,38351:22793,38352:29255,38353:31687,38354:32232,38355:36794,38356:36820,38357:36941,38358:20415,38359:21193,38360:23081,38361:24321,38362:38829,38363:20445,38364:33303,38365:37610,38366:22275,38367:25429,38368:27497,38369:29995,38370:35036,38371:36628,38372:31298,38373:21215,38374:22675,38375:24917,38376:25098,38377:26286,38378:27597,38379:31807,38380:33769,38381:20515,38382:20472,38383:21253,38384:21574,38385:22577,38386:22857,38387:23453,38388:23792,38389:23791,38390:23849,38391:24214,38392:25265,38393:25447,38394:25918,38395:26041,38396:26379,38464:27861,38465:27873,38466:28921,38467:30770,38468:32299,38469:32990,38470:33459,38471:33804,38472:34028,38473:34562,38474:35090,38475:35370,38476:35914,38477:37030,38478:37586,38479:39165,38480:40179,38481:40300,38482:20047,38483:20129,38484:20621,38485:21078,38486:22346,38487:22952,38488:24125,38489:24536,38490:24537,38491:25151,38492:26292,38493:26395,38494:26576,38495:26834,38496:20882,38497:32033,38498:32938,38499:33192,38500:35584,38501:35980,38502:36031,38503:37502,38504:38450,38505:21536,38506:38956,38507:21271,38508:20693,38509:21340,38510:22696,38511:25778,38512:26420,38513:29287,38514:30566,38515:31302,38516:37350,38517:21187,38518:27809,38519:27526,38520:22528,38521:24140,38522:22868,38523:26412,38524:32763,38525:20961,38526:30406,38528:25705,38529:30952,38530:39764,38531:40635,38532:22475,38533:22969,38534:26151,38535:26522,38536:27598,38537:21737,38538:27097,38539:24149,38540:33180,38541:26517,38542:39850,38543:26622,38544:40018,38545:26717,38546:20134,38547:20451,38548:21448,38549:25273,38550:26411,38551:27819,38552:36804,38553:20397,38554:32365,38555:40639,38556:19975,38557:24930,38558:28288,38559:28459,38560:34067,38561:21619,38562:26410,38563:39749,38564:24051,38565:31637,38566:23724,38567:23494,38568:34588,38569:28234,38570:34001,38571:31252,38572:33032,38573:22937,38574:31885,38575:27665,38576:30496,38577:21209,38578:22818,38579:28961,38580:29279,38581:30683,38582:38695,38583:40289,38584:26891,38585:23167,38586:23064,38587:20901,38588:21517,38589:21629,38590:26126,38591:30431,38592:36855,38593:37528,38594:40180,38595:23018,38596:29277,38597:28357,38598:20813,38599:26825,38600:32191,38601:32236,38602:38754,38603:40634,38604:25720,38605:27169,38606:33538,38607:22916,38608:23391,38609:27611,38610:29467,38611:30450,38612:32178,38613:32791,38614:33945,38615:20786,38616:26408,38617:40665,38618:30446,38619:26466,38620:21247,38621:39173,38622:23588,38623:25147,38624:31870,38625:36016,38626:21839,38627:24758,38628:32011,38629:38272,38630:21249,38631:20063,38632:20918,38633:22812,38634:29242,38635:32822,38636:37326,38637:24357,38638:30690,38639:21380,38640:24441,38641:32004,38642:34220,38643:35379,38644:36493,38645:38742,38646:26611,38647:34222,38648:37971,38649:24841,38650:24840,38651:27833,38652:30290,38720:35565,38721:36664,38722:21807,38723:20305,38724:20778,38725:21191,38726:21451,38727:23461,38728:24189,38729:24736,38730:24962,38731:25558,38732:26377,38733:26586,38734:28263,38735:28044,38736:29494,38737:29495,38738:30001,38739:31056,38740:35029,38741:35480,38742:36938,38743:37009,38744:37109,38745:38596,38746:34701,38747:22805,38748:20104,38749:20313,38750:19982,38751:35465,38752:36671,38753:38928,38754:20653,38755:24188,38756:22934,38757:23481,38758:24248,38759:25562,38760:25594,38761:25793,38762:26332,38763:26954,38764:27096,38765:27915,38766:28342,38767:29076,38768:29992,38769:31407,38770:32650,38771:32768,38772:33865,38773:33993,38774:35201,38775:35617,38776:36362,38777:36965,38778:38525,38779:39178,38780:24958,38781:25233,38782:27442,38784:27779,38785:28020,38786:32716,38787:32764,38788:28096,38789:32645,38790:34746,38791:35064,38792:26469,38793:33713,38794:38972,38795:38647,38796:27931,38797:32097,38798:33853,38799:37226,38800:20081,38801:21365,38802:23888,38803:27396,38804:28651,38805:34253,38806:34349,38807:35239,38808:21033,38809:21519,38810:23653,38811:26446,38812:26792,38813:29702,38814:29827,38815:30178,38816:35023,38817:35041,38818:37324,38819:38626,38820:38520,38821:24459,38822:29575,38823:31435,38824:33870,38825:25504,38826:30053,38827:21129,38828:27969,38829:28316,38830:29705,38831:30041,38832:30827,38833:31890,38834:38534,38835:31452,38836:40845,38837:20406,38838:24942,38839:26053,38840:34396,38841:20102,38842:20142,38843:20698,38844:20001,38845:20940,38846:23534,38847:26009,38848:26753,38849:28092,38850:29471,38851:30274,38852:30637,38853:31260,38854:31975,38855:33391,38856:35538,38857:36988,38858:37327,38859:38517,38860:38936,38861:21147,38862:32209,38863:20523,38864:21400,38865:26519,38866:28107,38867:29136,38868:29747,38869:33256,38870:36650,38871:38563,38872:40023,38873:40607,38874:29792,38875:22593,38876:28057,38877:32047,38878:39006,38879:20196,38880:20278,38881:20363,38882:20919,38883:21169,38884:23994,38885:24604,38886:29618,38887:31036,38888:33491,38889:37428,38890:38583,38891:38646,38892:38666,38893:40599,38894:40802,38895:26278,38896:27508,38897:21015,38898:21155,38899:28872,38900:35010,38901:24265,38902:24651,38903:24976,38904:28451,38905:29001,38906:31806,38907:32244,38908:32879,38976:34030,38977:36899,38978:37676,38979:21570,38980:39791,38981:27347,38982:28809,38983:36034,38984:36335,38985:38706,38986:21172,38987:23105,38988:24266,38989:24324,38990:26391,38991:27004,38992:27028,38993:28010,38994:28431,38995:29282,38996:29436,38997:31725,38998:32769,38999:32894,39e3:34635,39001:37070,39002:20845,39003:40595,39004:31108,39005:32907,39006:37682,39007:35542,39008:20525,39009:21644,39010:35441,39011:27498,39012:36036,39013:33031,39014:24785,39015:26528,39016:40434,39017:20121,39018:20120,39019:39952,39020:35435,39021:34241,39022:34152,39023:26880,39024:28286,39025:30871,39026:33109,39071:24332,39072:19984,39073:19989,39074:20010,39075:20017,39076:20022,39077:20028,39078:20031,39079:20034,39080:20054,39081:20056,39082:20098,39083:20101,39084:35947,39085:20106,39086:33298,39087:24333,39088:20110,39089:20126,39090:20127,39091:20128,39092:20130,39093:20144,39094:20147,39095:20150,39096:20174,39097:20173,39098:20164,39099:20166,39100:20162,39101:20183,39102:20190,39103:20205,39104:20191,39105:20215,39106:20233,39107:20314,39108:20272,39109:20315,39110:20317,39111:20311,39112:20295,39113:20342,39114:20360,39115:20367,39116:20376,39117:20347,39118:20329,39119:20336,39120:20369,39121:20335,39122:20358,39123:20374,39124:20760,39125:20436,39126:20447,39127:20430,39128:20440,39129:20443,39130:20433,39131:20442,39132:20432,39133:20452,39134:20453,39135:20506,39136:20520,39137:20500,39138:20522,39139:20517,39140:20485,39141:20252,39142:20470,39143:20513,39144:20521,39145:20524,39146:20478,39147:20463,39148:20497,39149:20486,39150:20547,39151:20551,39152:26371,39153:20565,39154:20560,39155:20552,39156:20570,39157:20566,39158:20588,39159:20600,39160:20608,39161:20634,39162:20613,39163:20660,39164:20658,39232:20681,39233:20682,39234:20659,39235:20674,39236:20694,39237:20702,39238:20709,39239:20717,39240:20707,39241:20718,39242:20729,39243:20725,39244:20745,39245:20737,39246:20738,39247:20758,39248:20757,39249:20756,39250:20762,39251:20769,39252:20794,39253:20791,39254:20796,39255:20795,39256:20799,39257:20800,39258:20818,39259:20812,39260:20820,39261:20834,39262:31480,39263:20841,39264:20842,39265:20846,39266:20864,39267:20866,39268:22232,39269:20876,39270:20873,39271:20879,39272:20881,39273:20883,39274:20885,39275:20886,39276:20900,39277:20902,39278:20898,39279:20905,39280:20906,39281:20907,39282:20915,39283:20913,39284:20914,39285:20912,39286:20917,39287:20925,39288:20933,39289:20937,39290:20955,39291:20960,39292:34389,39293:20969,39294:20973,39296:20976,39297:20981,39298:20990,39299:20996,39300:21003,39301:21012,39302:21006,39303:21031,39304:21034,39305:21038,39306:21043,39307:21049,39308:21071,39309:21060,39310:21067,39311:21068,39312:21086,39313:21076,39314:21098,39315:21108,39316:21097,39317:21107,39318:21119,39319:21117,39320:21133,39321:21140,39322:21138,39323:21105,39324:21128,39325:21137,39326:36776,39327:36775,39328:21164,39329:21165,39330:21180,39331:21173,39332:21185,39333:21197,39334:21207,39335:21214,39336:21219,39337:21222,39338:39149,39339:21216,39340:21235,39341:21237,39342:21240,39343:21241,39344:21254,39345:21256,39346:30008,39347:21261,39348:21264,39349:21263,39350:21269,39351:21274,39352:21283,39353:21295,39354:21297,39355:21299,39356:21304,39357:21312,39358:21318,39359:21317,39360:19991,39361:21321,39362:21325,39363:20950,39364:21342,39365:21353,39366:21358,39367:22808,39368:21371,39369:21367,39370:21378,39371:21398,39372:21408,39373:21414,39374:21413,39375:21422,39376:21424,39377:21430,39378:21443,39379:31762,39380:38617,39381:21471,39382:26364,39383:29166,39384:21486,39385:21480,39386:21485,39387:21498,39388:21505,39389:21565,39390:21568,39391:21548,39392:21549,39393:21564,39394:21550,39395:21558,39396:21545,39397:21533,39398:21582,39399:21647,39400:21621,39401:21646,39402:21599,39403:21617,39404:21623,39405:21616,39406:21650,39407:21627,39408:21632,39409:21622,39410:21636,39411:21648,39412:21638,39413:21703,39414:21666,39415:21688,39416:21669,39417:21676,39418:21700,39419:21704,39420:21672,39488:21675,39489:21698,39490:21668,39491:21694,39492:21692,39493:21720,39494:21733,39495:21734,39496:21775,39497:21780,39498:21757,39499:21742,39500:21741,39501:21754,39502:21730,39503:21817,39504:21824,39505:21859,39506:21836,39507:21806,39508:21852,39509:21829,39510:21846,39511:21847,39512:21816,39513:21811,39514:21853,39515:21913,39516:21888,39517:21679,39518:21898,39519:21919,39520:21883,39521:21886,39522:21912,39523:21918,39524:21934,39525:21884,39526:21891,39527:21929,39528:21895,39529:21928,39530:21978,39531:21957,39532:21983,39533:21956,39534:21980,39535:21988,39536:21972,39537:22036,39538:22007,39539:22038,39540:22014,39541:22013,39542:22043,39543:22009,39544:22094,39545:22096,39546:29151,39547:22068,39548:22070,39549:22066,39550:22072,39552:22123,39553:22116,39554:22063,39555:22124,39556:22122,39557:22150,39558:22144,39559:22154,39560:22176,39561:22164,39562:22159,39563:22181,39564:22190,39565:22198,39566:22196,39567:22210,39568:22204,39569:22209,39570:22211,39571:22208,39572:22216,39573:22222,39574:22225,39575:22227,39576:22231,39577:22254,39578:22265,39579:22272,39580:22271,39581:22276,39582:22281,39583:22280,39584:22283,39585:22285,39586:22291,39587:22296,39588:22294,39589:21959,39590:22300,39591:22310,39592:22327,39593:22328,39594:22350,39595:22331,39596:22336,39597:22351,39598:22377,39599:22464,39600:22408,39601:22369,39602:22399,39603:22409,39604:22419,39605:22432,39606:22451,39607:22436,39608:22442,39609:22448,39610:22467,39611:22470,39612:22484,39613:22482,39614:22483,39615:22538,39616:22486,39617:22499,39618:22539,39619:22553,39620:22557,39621:22642,39622:22561,39623:22626,39624:22603,39625:22640,39626:27584,39627:22610,39628:22589,39629:22649,39630:22661,39631:22713,39632:22687,39633:22699,39634:22714,39635:22750,39636:22715,39637:22712,39638:22702,39639:22725,39640:22739,39641:22737,39642:22743,39643:22745,39644:22744,39645:22757,39646:22748,39647:22756,39648:22751,39649:22767,39650:22778,39651:22777,39652:22779,39653:22780,39654:22781,39655:22786,39656:22794,39657:22800,39658:22811,39659:26790,39660:22821,39661:22828,39662:22829,39663:22834,39664:22840,39665:22846,39666:31442,39667:22869,39668:22864,39669:22862,39670:22874,39671:22872,39672:22882,39673:22880,39674:22887,39675:22892,39676:22889,39744:22904,39745:22913,39746:22941,39747:20318,39748:20395,39749:22947,39750:22962,39751:22982,39752:23016,39753:23004,39754:22925,39755:23001,39756:23002,39757:23077,39758:23071,39759:23057,39760:23068,39761:23049,39762:23066,39763:23104,39764:23148,39765:23113,39766:23093,39767:23094,39768:23138,39769:23146,39770:23194,39771:23228,39772:23230,39773:23243,39774:23234,39775:23229,39776:23267,39777:23255,39778:23270,39779:23273,39780:23254,39781:23290,39782:23291,39783:23308,39784:23307,39785:23318,39786:23346,39787:23248,39788:23338,39789:23350,39790:23358,39791:23363,39792:23365,39793:23360,39794:23377,39795:23381,39796:23386,39797:23387,39798:23397,39799:23401,39800:23408,39801:23411,39802:23413,39803:23416,39804:25992,39805:23418,39806:23424,39808:23427,39809:23462,39810:23480,39811:23491,39812:23495,39813:23497,39814:23508,39815:23504,39816:23524,39817:23526,39818:23522,39819:23518,39820:23525,39821:23531,39822:23536,39823:23542,39824:23539,39825:23557,39826:23559,39827:23560,39828:23565,39829:23571,39830:23584,39831:23586,39832:23592,39833:23608,39834:23609,39835:23617,39836:23622,39837:23630,39838:23635,39839:23632,39840:23631,39841:23409,39842:23660,39843:23662,39844:20066,39845:23670,39846:23673,39847:23692,39848:23697,39849:23700,39850:22939,39851:23723,39852:23739,39853:23734,39854:23740,39855:23735,39856:23749,39857:23742,39858:23751,39859:23769,39860:23785,39861:23805,39862:23802,39863:23789,39864:23948,39865:23786,39866:23819,39867:23829,39868:23831,39869:23900,39870:23839,39871:23835,39872:23825,39873:23828,39874:23842,39875:23834,39876:23833,39877:23832,39878:23884,39879:23890,39880:23886,39881:23883,39882:23916,39883:23923,39884:23926,39885:23943,39886:23940,39887:23938,39888:23970,39889:23965,39890:23980,39891:23982,39892:23997,39893:23952,39894:23991,39895:23996,39896:24009,39897:24013,39898:24019,39899:24018,39900:24022,39901:24027,39902:24043,39903:24050,39904:24053,39905:24075,39906:24090,39907:24089,39908:24081,39909:24091,39910:24118,39911:24119,39912:24132,39913:24131,39914:24128,39915:24142,39916:24151,39917:24148,39918:24159,39919:24162,39920:24164,39921:24135,39922:24181,39923:24182,39924:24186,39925:40636,39926:24191,39927:24224,39928:24257,39929:24258,39930:24264,39931:24272,39932:24271,4e4:24278,40001:24291,40002:24285,40003:24282,40004:24283,40005:24290,40006:24289,40007:24296,40008:24297,40009:24300,40010:24305,40011:24307,40012:24304,40013:24308,40014:24312,40015:24318,40016:24323,40017:24329,40018:24413,40019:24412,40020:24331,40021:24337,40022:24342,40023:24361,40024:24365,40025:24376,40026:24385,40027:24392,40028:24396,40029:24398,40030:24367,40031:24401,40032:24406,40033:24407,40034:24409,40035:24417,40036:24429,40037:24435,40038:24439,40039:24451,40040:24450,40041:24447,40042:24458,40043:24456,40044:24465,40045:24455,40046:24478,40047:24473,40048:24472,40049:24480,40050:24488,40051:24493,40052:24508,40053:24534,40054:24571,40055:24548,40056:24568,40057:24561,40058:24541,40059:24755,40060:24575,40061:24609,40062:24672,40064:24601,40065:24592,40066:24617,40067:24590,40068:24625,40069:24603,40070:24597,40071:24619,40072:24614,40073:24591,40074:24634,40075:24666,40076:24641,40077:24682,40078:24695,40079:24671,40080:24650,40081:24646,40082:24653,40083:24675,40084:24643,40085:24676,40086:24642,40087:24684,40088:24683,40089:24665,40090:24705,40091:24717,40092:24807,40093:24707,40094:24730,40095:24708,40096:24731,40097:24726,40098:24727,40099:24722,40100:24743,40101:24715,40102:24801,40103:24760,40104:24800,40105:24787,40106:24756,40107:24560,40108:24765,40109:24774,40110:24757,40111:24792,40112:24909,40113:24853,40114:24838,40115:24822,40116:24823,40117:24832,40118:24820,40119:24826,40120:24835,40121:24865,40122:24827,40123:24817,40124:24845,40125:24846,40126:24903,40127:24894,40128:24872,40129:24871,40130:24906,40131:24895,40132:24892,40133:24876,40134:24884,40135:24893,40136:24898,40137:24900,40138:24947,40139:24951,40140:24920,40141:24921,40142:24922,40143:24939,40144:24948,40145:24943,40146:24933,40147:24945,40148:24927,40149:24925,40150:24915,40151:24949,40152:24985,40153:24982,40154:24967,40155:25004,40156:24980,40157:24986,40158:24970,40159:24977,40160:25003,40161:25006,40162:25036,40163:25034,40164:25033,40165:25079,40166:25032,40167:25027,40168:25030,40169:25018,40170:25035,40171:32633,40172:25037,40173:25062,40174:25059,40175:25078,40176:25082,40177:25076,40178:25087,40179:25085,40180:25084,40181:25086,40182:25088,40183:25096,40184:25097,40185:25101,40186:25100,40187:25108,40188:25115,40256:25118,40257:25121,40258:25130,40259:25134,40260:25136,40261:25138,40262:25139,40263:25153,40264:25166,40265:25182,40266:25187,40267:25179,40268:25184,40269:25192,40270:25212,40271:25218,40272:25225,40273:25214,40274:25234,40275:25235,40276:25238,40277:25300,40278:25219,40279:25236,40280:25303,40281:25297,40282:25275,40283:25295,40284:25343,40285:25286,40286:25812,40287:25288,40288:25308,40289:25292,40290:25290,40291:25282,40292:25287,40293:25243,40294:25289,40295:25356,40296:25326,40297:25329,40298:25383,40299:25346,40300:25352,40301:25327,40302:25333,40303:25424,40304:25406,40305:25421,40306:25628,40307:25423,40308:25494,40309:25486,40310:25472,40311:25515,40312:25462,40313:25507,40314:25487,40315:25481,40316:25503,40317:25525,40318:25451,40320:25449,40321:25534,40322:25577,40323:25536,40324:25542,40325:25571,40326:25545,40327:25554,40328:25590,40329:25540,40330:25622,40331:25652,40332:25606,40333:25619,40334:25638,40335:25654,40336:25885,40337:25623,40338:25640,40339:25615,40340:25703,40341:25711,40342:25718,40343:25678,40344:25898,40345:25749,40346:25747,40347:25765,40348:25769,40349:25736,40350:25788,40351:25818,40352:25810,40353:25797,40354:25799,40355:25787,40356:25816,40357:25794,40358:25841,40359:25831,40360:33289,40361:25824,40362:25825,40363:25260,40364:25827,40365:25839,40366:25900,40367:25846,40368:25844,40369:25842,40370:25850,40371:25856,40372:25853,40373:25880,40374:25884,40375:25861,40376:25892,40377:25891,40378:25899,40379:25908,40380:25909,40381:25911,40382:25910,40383:25912,40384:30027,40385:25928,40386:25942,40387:25941,40388:25933,40389:25944,40390:25950,40391:25949,40392:25970,40393:25976,40394:25986,40395:25987,40396:35722,40397:26011,40398:26015,40399:26027,40400:26039,40401:26051,40402:26054,40403:26049,40404:26052,40405:26060,40406:26066,40407:26075,40408:26073,40409:26080,40410:26081,40411:26097,40412:26482,40413:26122,40414:26115,40415:26107,40416:26483,40417:26165,40418:26166,40419:26164,40420:26140,40421:26191,40422:26180,40423:26185,40424:26177,40425:26206,40426:26205,40427:26212,40428:26215,40429:26216,40430:26207,40431:26210,40432:26224,40433:26243,40434:26248,40435:26254,40436:26249,40437:26244,40438:26264,40439:26269,40440:26305,40441:26297,40442:26313,40443:26302,40444:26300,40512:26308,40513:26296,40514:26326,40515:26330,40516:26336,40517:26175,40518:26342,40519:26345,40520:26352,40521:26357,40522:26359,40523:26383,40524:26390,40525:26398,40526:26406,40527:26407,40528:38712,40529:26414,40530:26431,40531:26422,40532:26433,40533:26424,40534:26423,40535:26438,40536:26462,40537:26464,40538:26457,40539:26467,40540:26468,40541:26505,40542:26480,40543:26537,40544:26492,40545:26474,40546:26508,40547:26507,40548:26534,40549:26529,40550:26501,40551:26551,40552:26607,40553:26548,40554:26604,40555:26547,40556:26601,40557:26552,40558:26596,40559:26590,40560:26589,40561:26594,40562:26606,40563:26553,40564:26574,40565:26566,40566:26599,40567:27292,40568:26654,40569:26694,40570:26665,40571:26688,40572:26701,40573:26674,40574:26702,40576:26803,40577:26667,40578:26713,40579:26723,40580:26743,40581:26751,40582:26783,40583:26767,40584:26797,40585:26772,40586:26781,40587:26779,40588:26755,40589:27310,40590:26809,40591:26740,40592:26805,40593:26784,40594:26810,40595:26895,40596:26765,40597:26750,40598:26881,40599:26826,40600:26888,40601:26840,40602:26914,40603:26918,40604:26849,40605:26892,40606:26829,40607:26836,40608:26855,40609:26837,40610:26934,40611:26898,40612:26884,40613:26839,40614:26851,40615:26917,40616:26873,40617:26848,40618:26863,40619:26920,40620:26922,40621:26906,40622:26915,40623:26913,40624:26822,40625:27001,40626:26999,40627:26972,40628:27e3,40629:26987,40630:26964,40631:27006,40632:26990,40633:26937,40634:26996,40635:26941,40636:26969,40637:26928,40638:26977,40639:26974,40640:26973,40641:27009,40642:26986,40643:27058,40644:27054,40645:27088,40646:27071,40647:27073,40648:27091,40649:27070,40650:27086,40651:23528,40652:27082,40653:27101,40654:27067,40655:27075,40656:27047,40657:27182,40658:27025,40659:27040,40660:27036,40661:27029,40662:27060,40663:27102,40664:27112,40665:27138,40666:27163,40667:27135,40668:27402,40669:27129,40670:27122,40671:27111,40672:27141,40673:27057,40674:27166,40675:27117,40676:27156,40677:27115,40678:27146,40679:27154,40680:27329,40681:27171,40682:27155,40683:27204,40684:27148,40685:27250,40686:27190,40687:27256,40688:27207,40689:27234,40690:27225,40691:27238,40692:27208,40693:27192,40694:27170,40695:27280,40696:27277,40697:27296,40698:27268,40699:27298,40700:27299,40768:27287,40769:34327,40770:27323,40771:27331,40772:27330,40773:27320,40774:27315,40775:27308,40776:27358,40777:27345,40778:27359,40779:27306,40780:27354,40781:27370,40782:27387,40783:27397,40784:34326,40785:27386,40786:27410,40787:27414,40788:39729,40789:27423,40790:27448,40791:27447,40792:30428,40793:27449,40794:39150,40795:27463,40796:27459,40797:27465,40798:27472,40799:27481,40800:27476,40801:27483,40802:27487,40803:27489,40804:27512,40805:27513,40806:27519,40807:27520,40808:27524,40809:27523,40810:27533,40811:27544,40812:27541,40813:27550,40814:27556,40815:27562,40816:27563,40817:27567,40818:27570,40819:27569,40820:27571,40821:27575,40822:27580,40823:27590,40824:27595,40825:27603,40826:27615,40827:27628,40828:27627,40829:27635,40830:27631,40832:40638,40833:27656,40834:27667,40835:27668,40836:27675,40837:27684,40838:27683,40839:27742,40840:27733,40841:27746,40842:27754,40843:27778,40844:27789,40845:27802,40846:27777,40847:27803,40848:27774,40849:27752,40850:27763,40851:27794,40852:27792,40853:27844,40854:27889,40855:27859,40856:27837,40857:27863,40858:27845,40859:27869,40860:27822,40861:27825,40862:27838,40863:27834,40864:27867,40865:27887,40866:27865,40867:27882,40868:27935,40869:34893,40870:27958,40871:27947,40872:27965,40873:27960,40874:27929,40875:27957,40876:27955,40877:27922,40878:27916,40879:28003,40880:28051,40881:28004,40882:27994,40883:28025,40884:27993,40885:28046,40886:28053,40887:28644,40888:28037,40889:28153,40890:28181,40891:28170,40892:28085,40893:28103,40894:28134,40895:28088,40896:28102,40897:28140,40898:28126,40899:28108,40900:28136,40901:28114,40902:28101,40903:28154,40904:28121,40905:28132,40906:28117,40907:28138,40908:28142,40909:28205,40910:28270,40911:28206,40912:28185,40913:28274,40914:28255,40915:28222,40916:28195,40917:28267,40918:28203,40919:28278,40920:28237,40921:28191,40922:28227,40923:28218,40924:28238,40925:28196,40926:28415,40927:28189,40928:28216,40929:28290,40930:28330,40931:28312,40932:28361,40933:28343,40934:28371,40935:28349,40936:28335,40937:28356,40938:28338,40939:28372,40940:28373,40941:28303,40942:28325,40943:28354,40944:28319,40945:28481,40946:28433,40947:28748,40948:28396,40949:28408,40950:28414,40951:28479,40952:28402,40953:28465,40954:28399,40955:28466,40956:28364,161:65377,162:65378,163:65379,164:65380,165:65381,166:65382,167:65383,168:65384,169:65385,170:65386,171:65387,172:65388,173:65389,174:65390,175:65391,176:65392,177:65393,178:65394,179:65395,180:65396,181:65397,182:65398,183:65399,184:65400,185:65401,186:65402,187:65403,188:65404,189:65405,190:65406,191:65407,192:65408,193:65409,194:65410,195:65411,196:65412,197:65413,198:65414,199:65415,200:65416,201:65417,202:65418,203:65419,204:65420,205:65421,206:65422,207:65423,208:65424,209:65425,210:65426,211:65427,212:65428,213:65429,214:65430,215:65431,216:65432,217:65433,218:65434,219:65435,220:65436,221:65437,222:65438,223:65439,57408:28478,57409:28435,57410:28407,57411:28550,57412:28538,57413:28536,57414:28545,57415:28544,57416:28527,57417:28507,57418:28659,57419:28525,57420:28546,57421:28540,57422:28504,57423:28558,57424:28561,57425:28610,57426:28518,57427:28595,57428:28579,57429:28577,57430:28580,57431:28601,57432:28614,57433:28586,57434:28639,57435:28629,57436:28652,57437:28628,57438:28632,57439:28657,57440:28654,57441:28635,57442:28681,57443:28683,57444:28666,57445:28689,57446:28673,57447:28687,57448:28670,57449:28699,57450:28698,57451:28532,57452:28701,57453:28696,57454:28703,57455:28720,57456:28734,57457:28722,57458:28753,57459:28771,57460:28825,57461:28818,57462:28847,57463:28913,57464:28844,57465:28856,57466:28851,57467:28846,57468:28895,57469:28875,57470:28893,57472:28889,57473:28937,57474:28925,57475:28956,57476:28953,57477:29029,57478:29013,57479:29064,57480:29030,57481:29026,57482:29004,57483:29014,57484:29036,57485:29071,57486:29179,57487:29060,57488:29077,57489:29096,57490:29100,57491:29143,57492:29113,57493:29118,57494:29138,57495:29129,57496:29140,57497:29134,57498:29152,57499:29164,57500:29159,57501:29173,57502:29180,57503:29177,57504:29183,57505:29197,57506:29200,57507:29211,57508:29224,57509:29229,57510:29228,57511:29232,57512:29234,57513:29243,57514:29244,57515:29247,57516:29248,57517:29254,57518:29259,57519:29272,57520:29300,57521:29310,57522:29314,57523:29313,57524:29319,57525:29330,57526:29334,57527:29346,57528:29351,57529:29369,57530:29362,57531:29379,57532:29382,57533:29380,57534:29390,57535:29394,57536:29410,57537:29408,57538:29409,57539:29433,57540:29431,57541:20495,57542:29463,57543:29450,57544:29468,57545:29462,57546:29469,57547:29492,57548:29487,57549:29481,57550:29477,57551:29502,57552:29518,57553:29519,57554:40664,57555:29527,57556:29546,57557:29544,57558:29552,57559:29560,57560:29557,57561:29563,57562:29562,57563:29640,57564:29619,57565:29646,57566:29627,57567:29632,57568:29669,57569:29678,57570:29662,57571:29858,57572:29701,57573:29807,57574:29733,57575:29688,57576:29746,57577:29754,57578:29781,57579:29759,57580:29791,57581:29785,57582:29761,57583:29788,57584:29801,57585:29808,57586:29795,57587:29802,57588:29814,57589:29822,57590:29835,57591:29854,57592:29863,57593:29898,57594:29903,57595:29908,57596:29681,57664:29920,57665:29923,57666:29927,57667:29929,57668:29934,57669:29938,57670:29936,57671:29937,57672:29944,57673:29943,57674:29956,57675:29955,57676:29957,57677:29964,57678:29966,57679:29965,57680:29973,57681:29971,57682:29982,57683:29990,57684:29996,57685:30012,57686:30020,57687:30029,57688:30026,57689:30025,57690:30043,57691:30022,57692:30042,57693:30057,57694:30052,57695:30055,57696:30059,57697:30061,57698:30072,57699:30070,57700:30086,57701:30087,57702:30068,57703:30090,57704:30089,57705:30082,57706:30100,57707:30106,57708:30109,57709:30117,57710:30115,57711:30146,57712:30131,57713:30147,57714:30133,57715:30141,57716:30136,57717:30140,57718:30129,57719:30157,57720:30154,57721:30162,57722:30169,57723:30179,57724:30174,57725:30206,57726:30207,57728:30204,57729:30209,57730:30192,57731:30202,57732:30194,57733:30195,57734:30219,57735:30221,57736:30217,57737:30239,57738:30247,57739:30240,57740:30241,57741:30242,57742:30244,57743:30260,57744:30256,57745:30267,57746:30279,57747:30280,57748:30278,57749:30300,57750:30296,57751:30305,57752:30306,57753:30312,57754:30313,57755:30314,57756:30311,57757:30316,57758:30320,57759:30322,57760:30326,57761:30328,57762:30332,57763:30336,57764:30339,57765:30344,57766:30347,57767:30350,57768:30358,57769:30355,57770:30361,57771:30362,57772:30384,57773:30388,57774:30392,57775:30393,57776:30394,57777:30402,57778:30413,57779:30422,57780:30418,57781:30430,57782:30433,57783:30437,57784:30439,57785:30442,57786:34351,57787:30459,57788:30472,57789:30471,57790:30468,57791:30505,57792:30500,57793:30494,57794:30501,57795:30502,57796:30491,57797:30519,57798:30520,57799:30535,57800:30554,57801:30568,57802:30571,57803:30555,57804:30565,57805:30591,57806:30590,57807:30585,57808:30606,57809:30603,57810:30609,57811:30624,57812:30622,57813:30640,57814:30646,57815:30649,57816:30655,57817:30652,57818:30653,57819:30651,57820:30663,57821:30669,57822:30679,57823:30682,57824:30684,57825:30691,57826:30702,57827:30716,57828:30732,57829:30738,57830:31014,57831:30752,57832:31018,57833:30789,57834:30862,57835:30836,57836:30854,57837:30844,57838:30874,57839:30860,57840:30883,57841:30901,57842:30890,57843:30895,57844:30929,57845:30918,57846:30923,57847:30932,57848:30910,57849:30908,57850:30917,57851:30922,57852:30956,57920:30951,57921:30938,57922:30973,57923:30964,57924:30983,57925:30994,57926:30993,57927:31001,57928:31020,57929:31019,57930:31040,57931:31072,57932:31063,57933:31071,57934:31066,57935:31061,57936:31059,57937:31098,57938:31103,57939:31114,57940:31133,57941:31143,57942:40779,57943:31146,57944:31150,57945:31155,57946:31161,57947:31162,57948:31177,57949:31189,57950:31207,57951:31212,57952:31201,57953:31203,57954:31240,57955:31245,57956:31256,57957:31257,57958:31264,57959:31263,57960:31104,57961:31281,57962:31291,57963:31294,57964:31287,57965:31299,57966:31319,57967:31305,57968:31329,57969:31330,57970:31337,57971:40861,57972:31344,57973:31353,57974:31357,57975:31368,57976:31383,57977:31381,57978:31384,57979:31382,57980:31401,57981:31432,57982:31408,57984:31414,57985:31429,57986:31428,57987:31423,57988:36995,57989:31431,57990:31434,57991:31437,57992:31439,57993:31445,57994:31443,57995:31449,57996:31450,57997:31453,57998:31457,57999:31458,58e3:31462,58001:31469,58002:31472,58003:31490,58004:31503,58005:31498,58006:31494,58007:31539,58008:31512,58009:31513,58010:31518,58011:31541,58012:31528,58013:31542,58014:31568,58015:31610,58016:31492,58017:31565,58018:31499,58019:31564,58020:31557,58021:31605,58022:31589,58023:31604,58024:31591,58025:31600,58026:31601,58027:31596,58028:31598,58029:31645,58030:31640,58031:31647,58032:31629,58033:31644,58034:31642,58035:31627,58036:31634,58037:31631,58038:31581,58039:31641,58040:31691,58041:31681,58042:31692,58043:31695,58044:31668,58045:31686,58046:31709,58047:31721,58048:31761,58049:31764,58050:31718,58051:31717,58052:31840,58053:31744,58054:31751,58055:31763,58056:31731,58057:31735,58058:31767,58059:31757,58060:31734,58061:31779,58062:31783,58063:31786,58064:31775,58065:31799,58066:31787,58067:31805,58068:31820,58069:31811,58070:31828,58071:31823,58072:31808,58073:31824,58074:31832,58075:31839,58076:31844,58077:31830,58078:31845,58079:31852,58080:31861,58081:31875,58082:31888,58083:31908,58084:31917,58085:31906,58086:31915,58087:31905,58088:31912,58089:31923,58090:31922,58091:31921,58092:31918,58093:31929,58094:31933,58095:31936,58096:31941,58097:31938,58098:31960,58099:31954,58100:31964,58101:31970,58102:39739,58103:31983,58104:31986,58105:31988,58106:31990,58107:31994,58108:32006,58176:32002,58177:32028,58178:32021,58179:32010,58180:32069,58181:32075,58182:32046,58183:32050,58184:32063,58185:32053,58186:32070,58187:32115,58188:32086,58189:32078,58190:32114,58191:32104,58192:32110,58193:32079,58194:32099,58195:32147,58196:32137,58197:32091,58198:32143,58199:32125,58200:32155,58201:32186,58202:32174,58203:32163,58204:32181,58205:32199,58206:32189,58207:32171,58208:32317,58209:32162,58210:32175,58211:32220,58212:32184,58213:32159,58214:32176,58215:32216,58216:32221,58217:32228,58218:32222,58219:32251,58220:32242,58221:32225,58222:32261,58223:32266,58224:32291,58225:32289,58226:32274,58227:32305,58228:32287,58229:32265,58230:32267,58231:32290,58232:32326,58233:32358,58234:32315,58235:32309,58236:32313,58237:32323,58238:32311,58240:32306,58241:32314,58242:32359,58243:32349,58244:32342,58245:32350,58246:32345,58247:32346,58248:32377,58249:32362,58250:32361,58251:32380,58252:32379,58253:32387,58254:32213,58255:32381,58256:36782,58257:32383,58258:32392,58259:32393,58260:32396,58261:32402,58262:32400,58263:32403,58264:32404,58265:32406,58266:32398,58267:32411,58268:32412,58269:32568,58270:32570,58271:32581,58272:32588,58273:32589,58274:32590,58275:32592,58276:32593,58277:32597,58278:32596,58279:32600,58280:32607,58281:32608,58282:32616,58283:32617,58284:32615,58285:32632,58286:32642,58287:32646,58288:32643,58289:32648,58290:32647,58291:32652,58292:32660,58293:32670,58294:32669,58295:32666,58296:32675,58297:32687,58298:32690,58299:32697,58300:32686,58301:32694,58302:32696,58303:35697,58304:32709,58305:32710,58306:32714,58307:32725,58308:32724,58309:32737,58310:32742,58311:32745,58312:32755,58313:32761,58314:39132,58315:32774,58316:32772,58317:32779,58318:32786,58319:32792,58320:32793,58321:32796,58322:32801,58323:32808,58324:32831,58325:32827,58326:32842,58327:32838,58328:32850,58329:32856,58330:32858,58331:32863,58332:32866,58333:32872,58334:32883,58335:32882,58336:32880,58337:32886,58338:32889,58339:32893,58340:32895,58341:32900,58342:32902,58343:32901,58344:32923,58345:32915,58346:32922,58347:32941,58348:20880,58349:32940,58350:32987,58351:32997,58352:32985,58353:32989,58354:32964,58355:32986,58356:32982,58357:33033,58358:33007,58359:33009,58360:33051,58361:33065,58362:33059,58363:33071,58364:33099,58432:38539,58433:33094,58434:33086,58435:33107,58436:33105,58437:33020,58438:33137,58439:33134,58440:33125,58441:33126,58442:33140,58443:33155,58444:33160,58445:33162,58446:33152,58447:33154,58448:33184,58449:33173,58450:33188,58451:33187,58452:33119,58453:33171,58454:33193,58455:33200,58456:33205,58457:33214,58458:33208,58459:33213,58460:33216,58461:33218,58462:33210,58463:33225,58464:33229,58465:33233,58466:33241,58467:33240,58468:33224,58469:33242,58470:33247,58471:33248,58472:33255,58473:33274,58474:33275,58475:33278,58476:33281,58477:33282,58478:33285,58479:33287,58480:33290,58481:33293,58482:33296,58483:33302,58484:33321,58485:33323,58486:33336,58487:33331,58488:33344,58489:33369,58490:33368,58491:33373,58492:33370,58493:33375,58494:33380,58496:33378,58497:33384,58498:33386,58499:33387,58500:33326,58501:33393,58502:33399,58503:33400,58504:33406,58505:33421,58506:33426,58507:33451,58508:33439,58509:33467,58510:33452,58511:33505,58512:33507,58513:33503,58514:33490,58515:33524,58516:33523,58517:33530,58518:33683,58519:33539,58520:33531,58521:33529,58522:33502,58523:33542,58524:33500,58525:33545,58526:33497,58527:33589,58528:33588,58529:33558,58530:33586,58531:33585,58532:33600,58533:33593,58534:33616,58535:33605,58536:33583,58537:33579,58538:33559,58539:33560,58540:33669,58541:33690,58542:33706,58543:33695,58544:33698,58545:33686,58546:33571,58547:33678,58548:33671,58549:33674,58550:33660,58551:33717,58552:33651,58553:33653,58554:33696,58555:33673,58556:33704,58557:33780,58558:33811,58559:33771,58560:33742,58561:33789,58562:33795,58563:33752,58564:33803,58565:33729,58566:33783,58567:33799,58568:33760,58569:33778,58570:33805,58571:33826,58572:33824,58573:33725,58574:33848,58575:34054,58576:33787,58577:33901,58578:33834,58579:33852,58580:34138,58581:33924,58582:33911,58583:33899,58584:33965,58585:33902,58586:33922,58587:33897,58588:33862,58589:33836,58590:33903,58591:33913,58592:33845,58593:33994,58594:33890,58595:33977,58596:33983,58597:33951,58598:34009,58599:33997,58600:33979,58601:34010,58602:34e3,58603:33985,58604:33990,58605:34006,58606:33953,58607:34081,58608:34047,58609:34036,58610:34071,58611:34072,58612:34092,58613:34079,58614:34069,58615:34068,58616:34044,58617:34112,58618:34147,58619:34136,58620:34120,58688:34113,58689:34306,58690:34123,58691:34133,58692:34176,58693:34212,58694:34184,58695:34193,58696:34186,58697:34216,58698:34157,58699:34196,58700:34203,58701:34282,58702:34183,58703:34204,58704:34167,58705:34174,58706:34192,58707:34249,58708:34234,58709:34255,58710:34233,58711:34256,58712:34261,58713:34269,58714:34277,58715:34268,58716:34297,58717:34314,58718:34323,58719:34315,58720:34302,58721:34298,58722:34310,58723:34338,58724:34330,58725:34352,58726:34367,58727:34381,58728:20053,58729:34388,58730:34399,58731:34407,58732:34417,58733:34451,58734:34467,58735:34473,58736:34474,58737:34443,58738:34444,58739:34486,58740:34479,58741:34500,58742:34502,58743:34480,58744:34505,58745:34851,58746:34475,58747:34516,58748:34526,58749:34537,58750:34540,58752:34527,58753:34523,58754:34543,58755:34578,58756:34566,58757:34568,58758:34560,58759:34563,58760:34555,58761:34577,58762:34569,58763:34573,58764:34553,58765:34570,58766:34612,58767:34623,58768:34615,58769:34619,58770:34597,58771:34601,58772:34586,58773:34656,58774:34655,58775:34680,58776:34636,58777:34638,58778:34676,58779:34647,58780:34664,58781:34670,58782:34649,58783:34643,58784:34659,58785:34666,58786:34821,58787:34722,58788:34719,58789:34690,58790:34735,58791:34763,58792:34749,58793:34752,58794:34768,58795:38614,58796:34731,58797:34756,58798:34739,58799:34759,58800:34758,58801:34747,58802:34799,58803:34802,58804:34784,58805:34831,58806:34829,58807:34814,58808:34806,58809:34807,58810:34830,58811:34770,58812:34833,58813:34838,58814:34837,58815:34850,58816:34849,58817:34865,58818:34870,58819:34873,58820:34855,58821:34875,58822:34884,58823:34882,58824:34898,58825:34905,58826:34910,58827:34914,58828:34923,58829:34945,58830:34942,58831:34974,58832:34933,58833:34941,58834:34997,58835:34930,58836:34946,58837:34967,58838:34962,58839:34990,58840:34969,58841:34978,58842:34957,58843:34980,58844:34992,58845:35007,58846:34993,58847:35011,58848:35012,58849:35028,58850:35032,58851:35033,58852:35037,58853:35065,58854:35074,58855:35068,58856:35060,58857:35048,58858:35058,58859:35076,58860:35084,58861:35082,58862:35091,58863:35139,58864:35102,58865:35109,58866:35114,58867:35115,58868:35137,58869:35140,58870:35131,58871:35126,58872:35128,58873:35148,58874:35101,58875:35168,58876:35166,58944:35174,58945:35172,58946:35181,58947:35178,58948:35183,58949:35188,58950:35191,58951:35198,58952:35203,58953:35208,58954:35210,58955:35219,58956:35224,58957:35233,58958:35241,58959:35238,58960:35244,58961:35247,58962:35250,58963:35258,58964:35261,58965:35263,58966:35264,58967:35290,58968:35292,58969:35293,58970:35303,58971:35316,58972:35320,58973:35331,58974:35350,58975:35344,58976:35340,58977:35355,58978:35357,58979:35365,58980:35382,58981:35393,58982:35419,58983:35410,58984:35398,58985:35400,58986:35452,58987:35437,58988:35436,58989:35426,58990:35461,58991:35458,58992:35460,58993:35496,58994:35489,58995:35473,58996:35493,58997:35494,58998:35482,58999:35491,59e3:35524,59001:35533,59002:35522,59003:35546,59004:35563,59005:35571,59006:35559,59008:35556,59009:35569,59010:35604,59011:35552,59012:35554,59013:35575,59014:35550,59015:35547,59016:35596,59017:35591,59018:35610,59019:35553,59020:35606,59021:35600,59022:35607,59023:35616,59024:35635,59025:38827,59026:35622,59027:35627,59028:35646,59029:35624,59030:35649,59031:35660,59032:35663,59033:35662,59034:35657,59035:35670,59036:35675,59037:35674,59038:35691,59039:35679,59040:35692,59041:35695,59042:35700,59043:35709,59044:35712,59045:35724,59046:35726,59047:35730,59048:35731,59049:35734,59050:35737,59051:35738,59052:35898,59053:35905,59054:35903,59055:35912,59056:35916,59057:35918,59058:35920,59059:35925,59060:35938,59061:35948,59062:35960,59063:35962,59064:35970,59065:35977,59066:35973,59067:35978,59068:35981,59069:35982,59070:35988,59071:35964,59072:35992,59073:25117,59074:36013,59075:36010,59076:36029,59077:36018,59078:36019,59079:36014,59080:36022,59081:36040,59082:36033,59083:36068,59084:36067,59085:36058,59086:36093,59087:36090,59088:36091,59089:36100,59090:36101,59091:36106,59092:36103,59093:36111,59094:36109,59095:36112,59096:40782,59097:36115,59098:36045,59099:36116,59100:36118,59101:36199,59102:36205,59103:36209,59104:36211,59105:36225,59106:36249,59107:36290,59108:36286,59109:36282,59110:36303,59111:36314,59112:36310,59113:36300,59114:36315,59115:36299,59116:36330,59117:36331,59118:36319,59119:36323,59120:36348,59121:36360,59122:36361,59123:36351,59124:36381,59125:36382,59126:36368,59127:36383,59128:36418,59129:36405,59130:36400,59131:36404,59132:36426,59200:36423,59201:36425,59202:36428,59203:36432,59204:36424,59205:36441,59206:36452,59207:36448,59208:36394,59209:36451,59210:36437,59211:36470,59212:36466,59213:36476,59214:36481,59215:36487,59216:36485,59217:36484,59218:36491,59219:36490,59220:36499,59221:36497,59222:36500,59223:36505,59224:36522,59225:36513,59226:36524,59227:36528,59228:36550,59229:36529,59230:36542,59231:36549,59232:36552,59233:36555,59234:36571,59235:36579,59236:36604,59237:36603,59238:36587,59239:36606,59240:36618,59241:36613,59242:36629,59243:36626,59244:36633,59245:36627,59246:36636,59247:36639,59248:36635,59249:36620,59250:36646,59251:36659,59252:36667,59253:36665,59254:36677,59255:36674,59256:36670,59257:36684,59258:36681,59259:36678,59260:36686,59261:36695,59262:36700,59264:36706,59265:36707,59266:36708,59267:36764,59268:36767,59269:36771,59270:36781,59271:36783,59272:36791,59273:36826,59274:36837,59275:36834,59276:36842,59277:36847,59278:36999,59279:36852,59280:36869,59281:36857,59282:36858,59283:36881,59284:36885,59285:36897,59286:36877,59287:36894,59288:36886,59289:36875,59290:36903,59291:36918,59292:36917,59293:36921,59294:36856,59295:36943,59296:36944,59297:36945,59298:36946,59299:36878,59300:36937,59301:36926,59302:36950,59303:36952,59304:36958,59305:36968,59306:36975,59307:36982,59308:38568,59309:36978,59310:36994,59311:36989,59312:36993,59313:36992,59314:37002,59315:37001,59316:37007,59317:37032,59318:37039,59319:37041,59320:37045,59321:37090,59322:37092,59323:25160,59324:37083,59325:37122,59326:37138,59327:37145,59328:37170,59329:37168,59330:37194,59331:37206,59332:37208,59333:37219,59334:37221,59335:37225,59336:37235,59337:37234,59338:37259,59339:37257,59340:37250,59341:37282,59342:37291,59343:37295,59344:37290,59345:37301,59346:37300,59347:37306,59348:37312,59349:37313,59350:37321,59351:37323,59352:37328,59353:37334,59354:37343,59355:37345,59356:37339,59357:37372,59358:37365,59359:37366,59360:37406,59361:37375,59362:37396,59363:37420,59364:37397,59365:37393,59366:37470,59367:37463,59368:37445,59369:37449,59370:37476,59371:37448,59372:37525,59373:37439,59374:37451,59375:37456,59376:37532,59377:37526,59378:37523,59379:37531,59380:37466,59381:37583,59382:37561,59383:37559,59384:37609,59385:37647,59386:37626,59387:37700,59388:37678,59456:37657,59457:37666,59458:37658,59459:37667,59460:37690,59461:37685,59462:37691,59463:37724,59464:37728,59465:37756,59466:37742,59467:37718,59468:37808,59469:37804,59470:37805,59471:37780,59472:37817,59473:37846,59474:37847,59475:37864,59476:37861,59477:37848,59478:37827,59479:37853,59480:37840,59481:37832,59482:37860,59483:37914,59484:37908,59485:37907,59486:37891,59487:37895,59488:37904,59489:37942,59490:37931,59491:37941,59492:37921,59493:37946,59494:37953,59495:37970,59496:37956,59497:37979,59498:37984,59499:37986,59500:37982,59501:37994,59502:37417,59503:38e3,59504:38005,59505:38007,59506:38013,59507:37978,59508:38012,59509:38014,59510:38017,59511:38015,59512:38274,59513:38279,59514:38282,59515:38292,59516:38294,59517:38296,59518:38297,59520:38304,59521:38312,59522:38311,59523:38317,59524:38332,59525:38331,59526:38329,59527:38334,59528:38346,59529:28662,59530:38339,59531:38349,59532:38348,59533:38357,59534:38356,59535:38358,59536:38364,59537:38369,59538:38373,59539:38370,59540:38433,59541:38440,59542:38446,59543:38447,59544:38466,59545:38476,59546:38479,59547:38475,59548:38519,59549:38492,59550:38494,59551:38493,59552:38495,59553:38502,59554:38514,59555:38508,59556:38541,59557:38552,59558:38549,59559:38551,59560:38570,59561:38567,59562:38577,59563:38578,59564:38576,59565:38580,59566:38582,59567:38584,59568:38585,59569:38606,59570:38603,59571:38601,59572:38605,59573:35149,59574:38620,59575:38669,59576:38613,59577:38649,59578:38660,59579:38662,59580:38664,59581:38675,59582:38670,59583:38673,59584:38671,59585:38678,59586:38681,59587:38692,59588:38698,59589:38704,59590:38713,59591:38717,59592:38718,59593:38724,59594:38726,59595:38728,59596:38722,59597:38729,59598:38748,59599:38752,59600:38756,59601:38758,59602:38760,59603:21202,59604:38763,59605:38769,59606:38777,59607:38789,59608:38780,59609:38785,59610:38778,59611:38790,59612:38795,59613:38799,59614:38800,59615:38812,59616:38824,59617:38822,59618:38819,59619:38835,59620:38836,59621:38851,59622:38854,59623:38856,59624:38859,59625:38876,59626:38893,59627:40783,59628:38898,59629:31455,59630:38902,59631:38901,59632:38927,59633:38924,59634:38968,59635:38948,59636:38945,59637:38967,59638:38973,59639:38982,59640:38991,59641:38987,59642:39019,59643:39023,59644:39024,59712:39025,59713:39028,59714:39027,59715:39082,59716:39087,59717:39089,59718:39094,59719:39108,59720:39107,59721:39110,59722:39145,59723:39147,59724:39171,59725:39177,59726:39186,59727:39188,59728:39192,59729:39201,59730:39197,59731:39198,59732:39204,59733:39200,59734:39212,59735:39214,59736:39229,59737:39230,59738:39234,59739:39241,59740:39237,59741:39248,59742:39243,59743:39249,59744:39250,59745:39244,59746:39253,59747:39319,59748:39320,59749:39333,59750:39341,59751:39342,59752:39356,59753:39391,59754:39387,59755:39389,59756:39384,59757:39377,59758:39405,59759:39406,59760:39409,59761:39410,59762:39419,59763:39416,59764:39425,59765:39439,59766:39429,59767:39394,59768:39449,59769:39467,59770:39479,59771:39493,59772:39490,59773:39488,59774:39491,59776:39486,59777:39509,59778:39501,59779:39515,59780:39511,59781:39519,59782:39522,59783:39525,59784:39524,59785:39529,59786:39531,59787:39530,59788:39597,59789:39600,59790:39612,59791:39616,59792:39631,59793:39633,59794:39635,59795:39636,59796:39646,59797:39647,59798:39650,59799:39651,59800:39654,59801:39663,59802:39659,59803:39662,59804:39668,59805:39665,59806:39671,59807:39675,59808:39686,59809:39704,59810:39706,59811:39711,59812:39714,59813:39715,59814:39717,59815:39719,59816:39720,59817:39721,59818:39722,59819:39726,59820:39727,59821:39730,59822:39748,59823:39747,59824:39759,59825:39757,59826:39758,59827:39761,59828:39768,59829:39796,59830:39827,59831:39811,59832:39825,59833:39830,59834:39831,59835:39839,59836:39840,59837:39848,59838:39860,59839:39872,59840:39882,59841:39865,59842:39878,59843:39887,59844:39889,59845:39890,59846:39907,59847:39906,59848:39908,59849:39892,59850:39905,59851:39994,59852:39922,59853:39921,59854:39920,59855:39957,59856:39956,59857:39945,59858:39955,59859:39948,59860:39942,59861:39944,59862:39954,59863:39946,59864:39940,59865:39982,59866:39963,59867:39973,59868:39972,59869:39969,59870:39984,59871:40007,59872:39986,59873:40006,59874:39998,59875:40026,59876:40032,59877:40039,59878:40054,59879:40056,59880:40167,59881:40172,59882:40176,59883:40201,59884:40200,59885:40171,59886:40195,59887:40198,59888:40234,59889:40230,59890:40367,59891:40227,59892:40223,59893:40260,59894:40213,59895:40210,59896:40257,59897:40255,59898:40254,59899:40262,59900:40264,59968:40285,59969:40286,59970:40292,59971:40273,59972:40272,59973:40281,59974:40306,59975:40329,59976:40327,59977:40363,59978:40303,59979:40314,59980:40346,59981:40356,59982:40361,59983:40370,59984:40388,59985:40385,59986:40379,59987:40376,59988:40378,59989:40390,59990:40399,59991:40386,59992:40409,59993:40403,59994:40440,59995:40422,59996:40429,59997:40431,59998:40445,59999:40474,6e4:40475,60001:40478,60002:40565,60003:40569,60004:40573,60005:40577,60006:40584,60007:40587,60008:40588,60009:40594,60010:40597,60011:40593,60012:40605,60013:40613,60014:40617,60015:40632,60016:40618,60017:40621,60018:38753,60019:40652,60020:40654,60021:40655,60022:40656,60023:40660,60024:40668,60025:40670,60026:40669,60027:40672,60028:40677,60029:40680,60030:40687,60032:40692,60033:40694,60034:40695,60035:40697,60036:40699,60037:40700,60038:40701,60039:40711,60040:40712,60041:30391,60042:40725,60043:40737,60044:40748,60045:40766,60046:40778,60047:40786,60048:40788,60049:40803,60050:40799,60051:40800,60052:40801,60053:40806,60054:40807,60055:40812,60056:40810,60057:40823,60058:40818,60059:40822,60060:40853,60061:40860,60062:40864,60063:22575,60064:27079,60065:36953,60066:29796,60067:20956,60068:29081}},function(o,e,r){\"use strict\";function t(o,e,r,t){e.degree()<r.degree()&&(w=[r,e],e=w[0],r=w[1]);for(var c=e,s=r,a=o.zero,n=o.one;s.degree()>=t/2;){var d=c,l=a;if(c=s,a=n,c.isZero())return null;s=d;for(var i=o.zero,B=c.getCoefficient(c.degree()),k=o.inverse(B);s.degree()>=c.degree()&&!s.isZero();){var u=s.degree()-c.degree(),C=o.multiply(s.getCoefficient(s.degree()),k);i=i.addOrSubtract(o.buildMonomial(u,C)),s=s.addOrSubtract(c.multiplyByMonomial(u,C))}if(n=i.multiplyPoly(a).addOrSubtract(l),s.degree()>=c.degree())return null}var m=n.getCoefficient(0);if(0===m)return null;var f=o.inverse(m);return[n.multiply(f),s.multiply(f)];var w}function c(o,e){var r=e.degree();if(1===r)return[e.getCoefficient(1)];for(var t=new Array(r),c=0,s=1;s<o.size&&c<r;s++)0===e.evaluateAt(s)&&(t[c]=o.inverse(s),c++);return c!==r?null:t}function s(o,e,r){for(var t=r.length,c=new Array(t),s=0;s<t;s++){for(var a=o.inverse(r[s]),d=1,l=0;l<t;l++)s!==l&&(d=o.multiply(d,n.addOrSubtractGF(1,o.multiply(r[l],a))));c[s]=o.multiply(e.evaluateAt(a),o.inverse(d)),0!==o.generatorBase&&(c[s]=o.multiply(c[s],a))}return c}function a(o,e){var r=new Uint8ClampedArray(o.length);r.set(o);for(var a=new n.default(285,256,0),l=new d.default(a,r),i=new Uint8ClampedArray(e),B=!1,k=0;k<e;k++){var u=l.evaluateAt(a.exp(k+a.generatorBase));i[i.length-1-k]=u,0!==u&&(B=!0)}if(!B)return r;var C=new d.default(a,i),m=t(a,a.buildMonomial(e,1),C,e);if(null===m)return null;var f=c(a,m[0]);if(null==f)return null;for(var w=s(a,m[1],f),P=0;P<f.length;P++){var v=r.length-1-a.log(f[P]);if(v<0)return null;r[v]=n.addOrSubtractGF(r[v],w[P])}return r}Object.defineProperty(e,\"__esModule\",{value:!0});var n=r(1),d=r(2);e.decode=a},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.VERSIONS=[{infoBits:null,versionNumber:1,alignmentPatternCenters:[],errorCorrectionLevels:[{ecCodewordsPerBlock:7,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:13,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:13}]},{ecCodewordsPerBlock:17,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:2,alignmentPatternCenters:[6,18],errorCorrectionLevels:[{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:34}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:28}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]}]},{infoBits:null,versionNumber:3,alignmentPatternCenters:[6,22],errorCorrectionLevels:[{ecCodewordsPerBlock:15,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:55}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:13}]}]},{infoBits:null,versionNumber:4,alignmentPatternCenters:[6,26],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:80}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:32}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:5,alignmentPatternCenters:[6,30],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:43}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:11},{numBlocks:2,dataCodewordsPerBlock:12}]}]},{infoBits:null,versionNumber:6,alignmentPatternCenters:[6,34],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:27}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:31892,versionNumber:7,alignmentPatternCenters:[6,22,38],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:78}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:31}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:13},{numBlocks:1,dataCodewordsPerBlock:14}]}]},{infoBits:34236,versionNumber:8,alignmentPatternCenters:[6,24,42],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:97}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:38},{numBlocks:2,dataCodewordsPerBlock:39}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:18},{numBlocks:2,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:14},{numBlocks:2,dataCodewordsPerBlock:15}]}]},{infoBits:39577,versionNumber:9,alignmentPatternCenters:[6,26,46],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:12},{numBlocks:4,dataCodewordsPerBlock:13}]}]},{infoBits:42195,versionNumber:10,alignmentPatternCenters:[6,28,50],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68},{numBlocks:2,dataCodewordsPerBlock:69}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:43},{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]}]},{infoBits:48118,versionNumber:11,alignmentPatternCenters:[6,30,54],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:81}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:50},{numBlocks:4,dataCodewordsPerBlock:51}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:22},{numBlocks:4,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:12},{numBlocks:8,dataCodewordsPerBlock:13}]}]},{infoBits:51042,versionNumber:12,alignmentPatternCenters:[6,32,58],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:92},{numBlocks:2,dataCodewordsPerBlock:93}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:20},{numBlocks:6,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:55367,versionNumber:13,alignmentPatternCenters:[6,34,62],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:37},{numBlocks:1,dataCodewordsPerBlock:38}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:20},{numBlocks:4,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:11},{numBlocks:4,dataCodewordsPerBlock:12}]}]},{infoBits:58893,versionNumber:14,alignmentPatternCenters:[6,26,46,66],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:40},{numBlocks:5,dataCodewordsPerBlock:41}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:16},{numBlocks:5,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:5,dataCodewordsPerBlock:13}]}]},{infoBits:63784,versionNumber:15,alignmentPatternCenters:[6,26,48,70],errorCorrectionLevels:[{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:87},{numBlocks:1,dataCodewordsPerBlock:88}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:41},{numBlocks:5,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:7,dataCodewordsPerBlock:13}]}]},{infoBits:68472,versionNumber:16,alignmentPatternCenters:[6,26,50,74],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:98},{numBlocks:1,dataCodewordsPerBlock:99}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:70749,versionNumber:17,alignmentPatternCenters:[6,30,54,78],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:1,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22},{numBlocks:15,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:17,dataCodewordsPerBlock:15}]}]},{infoBits:76311,versionNumber:18,alignmentPatternCenters:[6,30,56,82],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:120},{numBlocks:1,dataCodewordsPerBlock:121}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:43},{numBlocks:4,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:1,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:19,dataCodewordsPerBlock:15}]}]},{infoBits:79154,versionNumber:19,alignmentPatternCenters:[6,30,58,86],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:113},{numBlocks:4,dataCodewordsPerBlock:114}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:44},{numBlocks:11,dataCodewordsPerBlock:45}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:21},{numBlocks:4,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:13},{numBlocks:16,dataCodewordsPerBlock:14}]}]},{infoBits:84390,versionNumber:20,alignmentPatternCenters:[6,34,62,90],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:41},{numBlocks:13,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:5,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:15},{numBlocks:10,dataCodewordsPerBlock:16}]}]},{infoBits:87683,versionNumber:21,alignmentPatternCenters:[6,28,50,72,94],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:116},{numBlocks:4,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:16},{numBlocks:6,dataCodewordsPerBlock:17}]}]},{infoBits:92361,versionNumber:22,alignmentPatternCenters:[6,26,50,74,98],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:111},{numBlocks:7,dataCodewordsPerBlock:112}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:13}]}]},{infoBits:96236,versionNumber:23,alignmentPatternCenters:[6,30,54,74,102],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:121},{numBlocks:5,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:47},{numBlocks:14,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:16,dataCodewordsPerBlock:15},{numBlocks:14,dataCodewordsPerBlock:16}]}]},{infoBits:102084,versionNumber:24,alignmentPatternCenters:[6,28,54,80,106],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:45},{numBlocks:14,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:30,dataCodewordsPerBlock:16},{numBlocks:2,dataCodewordsPerBlock:17}]}]},{infoBits:102881,versionNumber:25,alignmentPatternCenters:[6,32,58,84,110],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:106},{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:47},{numBlocks:13,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:110507,versionNumber:26,alignmentPatternCenters:[6,30,58,86,114],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:114},{numBlocks:2,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:46},{numBlocks:4,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:28,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:33,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]}]},{infoBits:110734,versionNumber:27,alignmentPatternCenters:[6,34,62,90,118],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:23},{numBlocks:26,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:117786,versionNumber:28,alignmentPatternCenters:[6,26,50,74,98,122],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:117},{numBlocks:10,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:45},{numBlocks:23,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:24},{numBlocks:31,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:31,dataCodewordsPerBlock:16}]}]},{infoBits:119615,versionNumber:29,alignmentPatternCenters:[6,30,54,78,102,126],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:116},{numBlocks:7,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:21,dataCodewordsPerBlock:45},{numBlocks:7,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:23},{numBlocks:37,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:26,dataCodewordsPerBlock:16}]}]},{infoBits:126325,versionNumber:30,alignmentPatternCenters:[6,26,52,78,104,130],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:115},{numBlocks:10,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:47},{numBlocks:10,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:25,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:25,dataCodewordsPerBlock:16}]}]},{infoBits:127568,versionNumber:31,alignmentPatternCenters:[6,30,56,82,108,134],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:3,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:46},{numBlocks:29,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:24},{numBlocks:1,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:133589,versionNumber:32,alignmentPatternCenters:[6,34,60,86,112,138],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:24},{numBlocks:35,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:35,dataCodewordsPerBlock:16}]}]},{infoBits:136944,versionNumber:33,alignmentPatternCenters:[6,30,58,86,114,142],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:21,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:24},{numBlocks:19,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:141498,versionNumber:34,alignmentPatternCenters:[6,34,62,90,118,146],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:6,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:44,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:59,dataCodewordsPerBlock:16},{numBlocks:1,dataCodewordsPerBlock:17}]}]},{infoBits:145311,versionNumber:35,alignmentPatternCenters:[6,30,54,78,102,126,150],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:121},{numBlocks:7,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:47},{numBlocks:26,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:39,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:41,dataCodewordsPerBlock:16}]}]},{infoBits:150283,versionNumber:36,alignmentPatternCenters:[6,24,50,76,102,128,154],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:121},{numBlocks:14,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:47},{numBlocks:34,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:46,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:64,dataCodewordsPerBlock:16}]}]},{infoBits:152622,versionNumber:37,alignmentPatternCenters:[6,28,54,80,106,132,158],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:46},{numBlocks:14,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:49,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:24,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:158308,versionNumber:38,alignmentPatternCenters:[6,32,58,84,110,136,162],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:122},{numBlocks:18,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:46},{numBlocks:32,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:48,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:15},{numBlocks:32,dataCodewordsPerBlock:16}]}]},{infoBits:161089,versionNumber:39,alignmentPatternCenters:[6,26,54,82,110,138,166],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:40,dataCodewordsPerBlock:47},{numBlocks:7,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:43,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:15},{numBlocks:67,dataCodewordsPerBlock:16}]}]},{infoBits:167017,versionNumber:40,alignmentPatternCenters:[6,30,58,86,114,142,170],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:118},{numBlocks:6,dataCodewordsPerBlock:119}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:18,dataCodewordsPerBlock:47},{numBlocks:31,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:24},{numBlocks:34,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:15},{numBlocks:61,dataCodewordsPerBlock:16}]}]}]},function(o,e,r){\"use strict\";function t(o,e,r,t){var c=o.x-e.x+r.x-t.x,s=o.y-e.y+r.y-t.y;if(0===c&&0===s)return{a11:e.x-o.x,a12:e.y-o.y,a13:0,a21:r.x-e.x,a22:r.y-e.y,a23:0,a31:o.x,a32:o.y,a33:1};var a=e.x-r.x,n=t.x-r.x,d=e.y-r.y,l=t.y-r.y,i=a*l-n*d,B=(c*l-n*s)/i,k=(a*s-c*d)/i;return{a11:e.x-o.x+B*e.x,a12:e.y-o.y+B*e.y,a13:B,a21:t.x-o.x+k*t.x,a22:t.y-o.y+k*t.y,a23:k,a31:o.x,a32:o.y,a33:1}}function c(o,e,r,c){var s=t(o,e,r,c);return{a11:s.a22*s.a33-s.a23*s.a32,a12:s.a13*s.a32-s.a12*s.a33,a13:s.a12*s.a23-s.a13*s.a22,a21:s.a23*s.a31-s.a21*s.a33,a22:s.a11*s.a33-s.a13*s.a31,a23:s.a13*s.a21-s.a11*s.a23,a31:s.a21*s.a32-s.a22*s.a31,a32:s.a12*s.a31-s.a11*s.a32,a33:s.a11*s.a22-s.a12*s.a21}}function s(o,e){return{a11:o.a11*e.a11+o.a21*e.a12+o.a31*e.a13,a12:o.a12*e.a11+o.a22*e.a12+o.a32*e.a13,a13:o.a13*e.a11+o.a23*e.a12+o.a33*e.a13,a21:o.a11*e.a21+o.a21*e.a22+o.a31*e.a23,a22:o.a12*e.a21+o.a22*e.a22+o.a32*e.a23,a23:o.a13*e.a21+o.a23*e.a22+o.a33*e.a23,a31:o.a11*e.a31+o.a21*e.a32+o.a31*e.a33,a32:o.a12*e.a31+o.a22*e.a32+o.a32*e.a33,a33:o.a13*e.a31+o.a23*e.a32+o.a33*e.a33}}function a(o,e){for(var r=c({x:3.5,y:3.5},{x:e.dimension-3.5,y:3.5},{x:e.dimension-6.5,y:e.dimension-6.5},{x:3.5,y:e.dimension-3.5}),a=t(e.topLeft,e.topRight,e.alignmentPattern,e.bottomLeft),d=s(a,r),l=n.BitMatrix.createEmpty(e.dimension,e.dimension),i=function(o,e){var r=d.a13*o+d.a23*e+d.a33;return{x:(d.a11*o+d.a21*e+d.a31)/r,y:(d.a12*o+d.a22*e+d.a32)/r}},B=0;B<e.dimension;B++)for(var k=0;k<e.dimension;k++){var u=k+.5,C=B+.5,m=i(u,C);l.set(k,B,o.get(Math.floor(m.x),Math.floor(m.y)))}return{matrix:l,mappingFunction:i}}Object.defineProperty(e,\"__esModule\",{value:!0});var n=r(0);e.extract=a},function(o,e,r){\"use strict\";function t(o){return o.reduce(function(o,e){return o+e})}function c(o,e,r){var t,c,s,a=C(o,e),n=C(e,r),d=C(o,r);return n>=a&&n>=d?(l=[e,o,r],t=l[0],c=l[1],s=l[2]):d>=n&&d>=a?(i=[o,e,r],t=i[0],c=i[1],s=i[2]):(B=[o,r,e],t=B[0],c=B[1],s=B[2]),(s.x-c.x)*(t.y-c.y)-(s.y-c.y)*(t.x-c.x)<0&&(k=[s,t],t=k[0],s=k[1]),{bottomLeft:t,topLeft:c,topRight:s};var l,i,B,k}function s(o,e,r,c){var s=(t(n(o,r,c,5))/7+t(n(o,e,c,5))/7+t(n(r,o,c,5))/7+t(n(e,o,c,5))/7)/4;if(s<1)throw new Error(\"Invalid module size\");var a=Math.round(C(o,e)/s),d=Math.round(C(o,r)/s),l=Math.floor((a+d)/2)+7;switch(l%4){case 0:l++;break;case 2:l--}return{dimension:l,moduleSize:s}}function a(o,e,r,t){var c,s,a,n,d=[{x:Math.floor(o.x),y:Math.floor(o.y)}],l=Math.abs(e.y-o.y)>Math.abs(e.x-o.x);l?(c=Math.floor(o.y),s=Math.floor(o.x),a=Math.floor(e.y),n=Math.floor(e.x)):(c=Math.floor(o.x),s=Math.floor(o.y),a=Math.floor(e.x),n=Math.floor(e.y));for(var i=Math.abs(a-c),B=Math.abs(n-s),k=Math.floor(-i/2),u=c<a?1:-1,m=s<n?1:-1,f=!0,w=c,P=s;w!==a+u;w+=u){var v=l?P:w,h=l?w:P;if(r.get(v,h)!==f&&(f=!f,d.push({x:v,y:h}),d.length===t+1))break;if((k+=B)>0){if(P===n)break;P+=m,k-=i}}for(var p=[],b=0;b<t;b++)d[b]&&d[b+1]?p.push(C(d[b],d[b+1])):p.push(0);return p}function n(o,e,r,t){var c=e.y-o.y,s=e.x-o.x,n=a(o,e,r,Math.ceil(t/2)),d=a(o,{x:o.x-s,y:o.y-c},r,Math.ceil(t/2)),l=n.shift()+d.shift()-1;return(i=d.concat(l)).concat.apply(i,n);var i}function d(o,e){var r=t(o)/t(e),c=0;return e.forEach(function(e,t){c+=Math.pow(o[t]-e*r,2)}),{averageSize:r,error:c}}function l(o,e,r){try{var t=n(o,{x:-1,y:o.y},r,e.length),c=n(o,{x:o.x,y:-1},r,e.length),s={x:Math.max(0,o.x-o.y)-1,y:Math.max(0,o.y-o.x)-1},a=n(o,s,r,e.length),l={x:Math.min(r.width,o.x+o.y)+1,y:Math.min(r.height,o.y+o.x)+1},i=n(o,l,r,e.length),B=d(t,e),k=d(c,e),u=d(a,e),C=d(i,e),m=Math.sqrt(B.error*B.error+k.error*k.error+u.error*u.error+C.error*C.error),f=(B.averageSize+k.averageSize+u.averageSize+C.averageSize)/4;return m+(Math.pow(B.averageSize-f,2)+Math.pow(k.averageSize-f,2)+Math.pow(u.averageSize-f,2)+Math.pow(C.averageSize-f,2))/f}catch(o){return 1/0}}function i(o){for(var e=[],r=[],a=[],n=[],d=0;d<=o.height;d++)!function(c){for(var s=0,d=!1,l=[0,0,0,0,0],i=-1;i<=o.width;i++)!function(e){var a=o.get(e,c);if(a===d)s++;else{l=[l[1],l[2],l[3],l[4],s],s=1,d=a;var i=t(l)/7,B=Math.abs(l[0]-i)<i&&Math.abs(l[1]-i)<i&&Math.abs(l[2]-3*i)<3*i&&Math.abs(l[3]-i)<i&&Math.abs(l[4]-i)<i&&!a,C=t(l.slice(-3))/3,m=Math.abs(l[2]-C)<C&&Math.abs(l[3]-C)<C&&Math.abs(l[4]-C)<C&&a;if(B){var f=e-l[3]-l[4],w=f-l[2],P={startX:w,endX:f,y:c},v=r.filter(function(o){return w>=o.bottom.startX&&w<=o.bottom.endX||f>=o.bottom.startX&&w<=o.bottom.endX||w<=o.bottom.startX&&f>=o.bottom.endX&&l[2]/(o.bottom.endX-o.bottom.startX)<u&&l[2]/(o.bottom.endX-o.bottom.startX)>k});v.length>0?v[0].bottom=P:r.push({top:P,bottom:P})}if(m){var h=e-l[4],p=h-l[3],P={startX:p,y:c,endX:h},v=n.filter(function(o){return p>=o.bottom.startX&&p<=o.bottom.endX||h>=o.bottom.startX&&p<=o.bottom.endX||p<=o.bottom.startX&&h>=o.bottom.endX&&l[2]/(o.bottom.endX-o.bottom.startX)<u&&l[2]/(o.bottom.endX-o.bottom.startX)>k});v.length>0?v[0].bottom=P:n.push({top:P,bottom:P})}}}(i);e.push.apply(e,r.filter(function(o){return o.bottom.y!==c&&o.bottom.y-o.top.y>=2})),r=r.filter(function(o){return o.bottom.y===c}),a.push.apply(a,n.filter(function(o){return o.bottom.y!==c})),n=n.filter(function(o){return o.bottom.y===c})}(d);e.push.apply(e,r.filter(function(o){return o.bottom.y-o.top.y>=2})),a.push.apply(a,n);var i=e.filter(function(o){return o.bottom.y-o.top.y>=2}).map(function(e){var r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,c=(e.top.y+e.bottom.y+1)/2;if(o.get(Math.round(r),Math.round(c))){var s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1],a=t(s)/s.length;return{score:l({x:Math.round(r),y:Math.round(c)},[1,1,3,1,1],o),x:r,y:c,size:a}}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score}).map(function(o,e,r){if(e>B)return null;var t=r.filter(function(o,r){return e!==r}).map(function(e){return{x:e.x,y:e.y,score:e.score+Math.pow(e.size-o.size,2)/o.size,size:e.size}}).sort(function(o,e){return o.score-e.score});if(t.length<2)return null;var c=o.score+t[0].score+t[1].score;return{points:[o].concat(t.slice(0,2)),score:c}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score});if(0===i.length)return null;var m,f,w=c(i[0].points[0],i[0].points[1],i[0].points[2]),P=w.topRight,v=w.topLeft,h=w.bottomLeft;try{L=s(v,P,h,o),m=L.dimension,f=L.moduleSize}catch(o){return null}var p={x:P.x-v.x+h.x,y:P.y-v.y+h.y},b=(C(v,h)+C(v,P))/2/f,y=1-3/b,g={x:v.x+y*(p.x-v.x),y:v.y+y*(p.y-v.y)},x=a.map(function(e){var r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,c=(e.top.y+e.bottom.y+1)/2;if(o.get(Math.floor(r),Math.floor(c))){var s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1];t(s);return{x:r,y:c,score:l({x:Math.floor(r),y:Math.floor(c)},[1,1,1],o)+C({x:r,y:c},g)}}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score}),M=b>=15&&x.length?x[0]:g;return{alignmentPattern:{x:M.x,y:M.y},bottomLeft:{x:h.x,y:h.y},dimension:m,topLeft:{x:v.x,y:v.y},topRight:{x:P.x,y:P.y}};var L}Object.defineProperty(e,\"__esModule\",{value:!0});var B=4,k=.5,u=1.5,C=function(o,e){return Math.sqrt(Math.pow(e.x-o.x,2)+Math.pow(e.y-o.y,2))};e.locate=i}]).default})}]);',null)}},function(e,t,r){\"use strict\";var n=window.URL||window.webkitURL;e.exports=function(e,t){try{try{var r;try{var o=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder;r=new o,r.append(e),r=r.getBlob()}catch(t){r=new Blob([e])}return new Worker(n.createObjectURL(r))}catch(t){return new Worker(\"data:application/javascript,\"+encodeURIComponent(e))}}catch(e){if(!t)throw Error(\"Inline worker is not supported\");return new Worker(t)}}},function(e,t,r){\"use strict\";function n(e){var t=e.color;return function(e,r){var n=e.topLeftCorner,o=e.topRightCorner,a=e.bottomLeftCorner,i=e.bottomRightCorner;r.strokeStyle=t,r.beginPath(),r.moveTo(n.x,n.y),r.lineTo(a.x,a.y),r.lineTo(i.x,i.y),r.lineTo(o.x,o.y),r.lineTo(n.x,n.y),r.closePath(),r.stroke()}}t.a=n},function(e,t,r){\"use strict\";var n=r(11),o=r.n(n),a=r(12),i=r.n(a),s=r(62),c=r.n(s),d=r(99),u=r.n(d),l=r(103),f=r.n(l),p=r(63),m=r(43),v=r(39),h=function(){function e(t,r){c()(this,e),this.videoEl=t,this.stream=r}return u()(e,[{key:\"stop\",value:function(){this.stream.getTracks().forEach(function(e){return e.stop()})}},{key:\"captureFrame\",value:function(){return Object(m.c)(this.videoEl)}}]),e}(),k=navigator&&(navigator.getUserMedia||navigator.mediaDevices&&navigator.mediaDevices.getUserMedia),C=!1;t.a=function(){var e=i()(o.a.mark(function e(t,r){var n,a;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(k){e.next=2;break}throw new p.c;case 2:return!1===C&&(f()({window:window}),C=!0),e.next=5,navigator.mediaDevices.getUserMedia(t);case 5:return n=e.sent,a=Object(v.a)(r,\"loadeddata\",\"error\"),void 0!==r.srcObject?r.srcObject=n:void 0!==r.mozSrcObject?r.mozSrcObject=n:window.URL.createObjectURL?r.src=window.URL.createObjectURL(n):window.webkitURL?r.src=window.webkitURL.createObjectURL(n):r.src=n,e.next=10,a;case 10:return e.abrupt(\"return\",new h(r,n));case 11:case\"end\":return e.stop()}},e,this)}));return function(t,r){return e.apply(this,arguments)}}()},function(e,t,r){\"use strict\";t.__esModule=!0;var n=r(100),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),(0,o.default)(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){e.exports={default:r(101),__esModule:!0}},function(e,t,r){r(102);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(3);n(n.S+n.F*!r(8),\"Object\",{defineProperty:r(4).f})},function(e,t,r){\"use strict\";var n=r(6);e.exports=function(e,t){var o=e&&e.window,a={shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);var s=n.log,c=n.detectBrowser(o),d=r(104)||null,u=r(106)||null,l=r(111)||null,f=r(113)||null,p=r(114)||null,m={browserDetails:c,commonShim:p,extractVersion:n.extractVersion,disableLog:n.disableLog,disableWarnings:n.disableWarnings};switch(c.browser){case\"chrome\":if(!d||!d.shimPeerConnection||!a.shimChrome)return s(\"Chrome shim is not included in this adapter release.\"),m;s(\"adapter.js shimming chrome.\"),m.browserShim=d,p.shimCreateObjectURL(o),d.shimGetUserMedia(o),d.shimMediaStream(o),d.shimSourceObject(o),d.shimPeerConnection(o),d.shimOnTrack(o),d.shimAddTrackRemoveTrack(o),d.shimGetSendersWithDtmf(o),d.shimSenderReceiverGetStats(o),d.fixNegotiationNeeded(o),p.shimRTCIceCandidate(o),p.shimMaxMessageSize(o),p.shimSendThrowTypeError(o);break;case\"firefox\":if(!l||!l.shimPeerConnection||!a.shimFirefox)return s(\"Firefox shim is not included in this adapter release.\"),m;s(\"adapter.js shimming firefox.\"),m.browserShim=l,p.shimCreateObjectURL(o),l.shimGetUserMedia(o),l.shimSourceObject(o),l.shimPeerConnection(o),l.shimOnTrack(o),l.shimRemoveStream(o),l.shimSenderGetStats(o),l.shimReceiverGetStats(o),l.shimRTCDataChannel(o),p.shimRTCIceCandidate(o),p.shimMaxMessageSize(o),p.shimSendThrowTypeError(o);break;case\"edge\":if(!u||!u.shimPeerConnection||!a.shimEdge)return s(\"MS edge shim is not included in this adapter release.\"),m;s(\"adapter.js shimming edge.\"),m.browserShim=u,p.shimCreateObjectURL(o),u.shimGetUserMedia(o),u.shimPeerConnection(o),u.shimReplaceTrack(o),u.shimGetDisplayMedia(o),p.shimMaxMessageSize(o),p.shimSendThrowTypeError(o);break;case\"safari\":if(!f||!a.shimSafari)return s(\"Safari shim is not included in this adapter release.\"),m;s(\"adapter.js shimming safari.\"),m.browserShim=f,p.shimCreateObjectURL(o),f.shimRTCIceServerUrls(o),f.shimCreateOfferLegacy(o),f.shimCallbacksAPI(o),f.shimLocalStreamsAPI(o),f.shimRemoteStreamsAPI(o),f.shimTrackEventTransceiver(o),f.shimGetUserMedia(o),p.shimRTCIceCandidate(o),p.shimMaxMessageSize(o),p.shimSendThrowTypeError(o);break;default:s(\"Unsupported browser!\")}return m}},function(e,t,r){\"use strict\";function n(e,t,r){t&&!r.has(t.id)&&(r.set(t.id,t),Object.keys(t).forEach(function(o){o.endsWith(\"Id\")?n(e,e.get(t[o]),r):o.endsWith(\"Ids\")&&t[o].forEach(function(t){n(e,e.get(t),r)})}))}function o(e,t,r){var o=r?\"outbound-rtp\":\"inbound-rtp\",a=new Map;if(null===t)return a;var i=[];return e.forEach(function(e){\"track\"===e.type&&e.trackIdentifier===t.id&&i.push(e)}),i.forEach(function(t){e.forEach(function(r){r.type===o&&r.trackId===t.id&&n(e,r,a)})}),a}var a=r(6),i=a.log;e.exports={shimGetUserMedia:r(105),shimMediaStream:function(e){e.MediaStream=e.MediaStream||e.webkitMediaStream},shimOnTrack:function(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||\"ontrack\"in e.RTCPeerConnection.prototype)a.wrapPeerConnectionEvent(e,\"track\",function(e){return e.transceiver||Object.defineProperty(e,\"transceiver\",{value:{receiver:e.receiver}}),e});else{Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)},enumerable:!0,configurable:!0});var t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){var r=this;return r._ontrackpoly||(r._ontrackpoly=function(t){t.stream.addEventListener(\"addtrack\",function(n){var o;o=e.RTCPeerConnection.prototype.getReceivers?r.getReceivers().find(function(e){return e.track&&e.track.id===n.track.id}):{track:n.track};var a=new Event(\"track\");a.track=n.track,a.receiver=o,a.transceiver={receiver:o},a.streams=[t.stream],r.dispatchEvent(a)}),t.stream.getTracks().forEach(function(n){var o;o=e.RTCPeerConnection.prototype.getReceivers?r.getReceivers().find(function(e){return e.track&&e.track.id===n.id}):{track:n};var a=new Event(\"track\");a.track=n,a.receiver=o,a.transceiver={receiver:o},a.streams=[t.stream],r.dispatchEvent(a)})},r.addEventListener(\"addstream\",r._ontrackpoly)),t.apply(r,arguments)}}},shimGetSendersWithDtmf:function(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){var t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};var r=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,n){var o=this,a=r.apply(o,arguments);return a||(a=t(o,e),o._senders.push(a)),a};var n=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){var t=this;n.apply(t,arguments);var r=t._senders.indexOf(e);-1!==r&&t._senders.splice(r,1)}}var o=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){var r=this;r._senders=r._senders||[],o.apply(r,[e]),e.getTracks().forEach(function(e){r._senders.push(t(r,e))})};var a=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;t._senders=t._senders||[],a.apply(t,[e]),e.getTracks().forEach(function(e){var r=t._senders.find(function(t){return t.track===e});r&&t._senders.splice(t._senders.indexOf(r),1)})}}else if(\"object\"==typeof e&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){var i=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){var e=this,t=i.apply(e,[]);return t.forEach(function(t){t._pc=e}),t},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}},shimSenderReceiverGetStats:function(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&e.RTCRtpReceiver){if(!(\"getStats\"in e.RTCRtpSender.prototype)){var t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){var e=this,r=t.apply(e,[]);return r.forEach(function(t){t._pc=e}),r});var r=e.RTCPeerConnection.prototype.addTrack;r&&(e.RTCPeerConnection.prototype.addTrack=function(){var e=r.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){var e=this;return this._pc.getStats().then(function(t){return o(t,e.track,!0)})}}if(!(\"getStats\"in e.RTCRtpReceiver.prototype)){var n=e.RTCPeerConnection.prototype.getReceivers;n&&(e.RTCPeerConnection.prototype.getReceivers=function(){var e=this,t=n.apply(e,[]);return t.forEach(function(t){t._pc=e}),t}),a.wrapPeerConnectionEvent(e,\"track\",function(e){return e.receiver._pc=e.srcElement,e}),e.RTCRtpReceiver.prototype.getStats=function(){var e=this;return this._pc.getStats().then(function(t){return o(t,e.track,!1)})}}if(\"getStats\"in e.RTCRtpSender.prototype&&\"getStats\"in e.RTCRtpReceiver.prototype){var i=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){var t=this;if(arguments.length>0&&arguments[0]instanceof e.MediaStreamTrack){var r,n,o,a=arguments[0];return t.getSenders().forEach(function(e){e.track===a&&(r?o=!0:r=e)}),t.getReceivers().forEach(function(e){return e.track===a&&(n?o=!0:n=e),e.track===a}),o||r&&n?Promise.reject(new DOMException(\"There are more than one sender or receiver for the track.\",\"InvalidAccessError\")):r?r.getStats():n?n.getStats():Promise.reject(new DOMException(\"There is no sender or receiver for the track.\",\"InvalidAccessError\"))}return i.apply(t,arguments)}}}},shimSourceObject:function(e){var t=e&&e.URL;\"object\"==typeof e&&(!e.HTMLMediaElement||\"srcObject\"in e.HTMLMediaElement.prototype||Object.defineProperty(e.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this._srcObject},set:function(e){var r=this;if(this._srcObject=e,this.src&&t.revokeObjectURL(this.src),!e)return void(this.src=\"\");this.src=t.createObjectURL(e),e.addEventListener(\"addtrack\",function(){r.src&&t.revokeObjectURL(r.src),r.src=t.createObjectURL(e)}),e.addEventListener(\"removetrack\",function(){r.src&&t.revokeObjectURL(r.src),r.src=t.createObjectURL(e)})}}))},shimAddTrackRemoveTrackWithNative:function(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){var e=this;return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map(function(t){return e._shimmedLocalStreams[t][0]})};var t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,r){if(!r)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};var n=t.apply(this,arguments);return this._shimmedLocalStreams[r.id]?-1===this._shimmedLocalStreams[r.id].indexOf(n)&&this._shimmedLocalStreams[r.id].push(n):this._shimmedLocalStreams[r.id]=[r,n],n};var r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){var t=this;this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach(function(e){if(t.getSenders().find(function(t){return t.track===e}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")});var n=t.getSenders();r.apply(this,arguments);var o=t.getSenders().filter(function(e){return-1===n.indexOf(e)});this._shimmedLocalStreams[e.id]=[e].concat(o)};var n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],n.apply(this,arguments)};var o=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){var t=this;return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach(function(r){var n=t._shimmedLocalStreams[r].indexOf(e);-1!==n&&t._shimmedLocalStreams[r].splice(n,1),1===t._shimmedLocalStreams[r].length&&delete t._shimmedLocalStreams[r]}),o.apply(this,arguments)}},shimAddTrackRemoveTrack:function(e){function t(e,t){var r=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(function(t){var n=e._reverseStreams[t],o=e._streams[n.id];r=r.replace(new RegExp(o.id,\"g\"),n.id)}),new RTCSessionDescription({type:t.type,sdp:r})}function r(e,t){var r=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(function(t){var n=e._reverseStreams[t],o=e._streams[n.id];r=r.replace(new RegExp(n.id,\"g\"),o.id)}),new RTCSessionDescription({type:t.type,sdp:r})}if(e.RTCPeerConnection){var n=a.detectBrowser(e);if(e.RTCPeerConnection.prototype.addTrack&&n.version>=65)return this.shimAddTrackRemoveTrackWithNative(e);var o=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){var e=this,t=o.apply(this);return e._reverseStreams=e._reverseStreams||{},t.map(function(t){return e._reverseStreams[t.id]})};var i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){var r=this;if(r._streams=r._streams||{},r._reverseStreams=r._reverseStreams||{},t.getTracks().forEach(function(e){if(r.getSenders().find(function(t){return t.track===e}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}),!r._reverseStreams[t.id]){var n=new e.MediaStream(t.getTracks());r._streams[t.id]=n,r._reverseStreams[n.id]=t,t=n}i.apply(r,[t])};var s=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;t._streams=t._streams||{},t._reverseStreams=t._reverseStreams||{},s.apply(t,[t._streams[e.id]||e]),delete t._reverseStreams[t._streams[e.id]?t._streams[e.id].id:e.id],delete t._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,r){var n=this;if(\"closed\"===n.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");var o=[].slice.call(arguments,1);if(1!==o.length||!o[0].getTracks().find(function(e){return e===t}))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");if(n.getSenders().find(function(e){return e.track===t}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");n._streams=n._streams||{},n._reverseStreams=n._reverseStreams||{};var a=n._streams[r.id];if(a)a.addTrack(t),Promise.resolve().then(function(){n.dispatchEvent(new Event(\"negotiationneeded\"))});else{var i=new e.MediaStream([t]);n._streams[r.id]=i,n._reverseStreams[i.id]=r,n.addStream(i)}return n.getSenders().find(function(e){return e.track===t})},[\"createOffer\",\"createAnswer\"].forEach(function(r){var n=e.RTCPeerConnection.prototype[r];e.RTCPeerConnection.prototype[r]=function(){var e=this,r=arguments;return arguments.length&&\"function\"==typeof arguments[0]?n.apply(e,[function(n){var o=t(e,n);r[0].apply(null,[o])},function(e){r[1]&&r[1].apply(null,e)},arguments[2]]):n.apply(e,arguments).then(function(r){return t(e,r)})}});var c=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){var e=this;return arguments.length&&arguments[0].type?(arguments[0]=r(e,arguments[0]),c.apply(e,arguments)):c.apply(e,arguments)};var d=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get:function(){var e=this,r=d.get.apply(this);return\"\"===r.type?r:t(e,r)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){var t=this;if(\"closed\"===t.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(e._pc!==t)throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");t._streams=t._streams||{};var r;Object.keys(t._streams).forEach(function(n){t._streams[n].getTracks().find(function(t){return e.track===t})&&(r=t._streams[n])}),r&&(1===r.getTracks().length?t.removeStream(t._reverseStreams[r.id]):r.removeTrack(e.track),t.dispatchEvent(new Event(\"negotiationneeded\")))}}},shimPeerConnection:function(e){var t=a.detectBrowser(e);if(!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=function(t,r){return i(\"PeerConnection\"),t&&t.iceTransportPolicy&&(t.iceTransports=t.iceTransportPolicy),new e.webkitRTCPeerConnection(t,r)},e.RTCPeerConnection.prototype=e.webkitRTCPeerConnection.prototype,e.webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return e.webkitRTCPeerConnection.generateCertificate}})),e.RTCPeerConnection){var r=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(e,t,n){var o=this,a=arguments;if(arguments.length>0&&\"function\"==typeof e)return r.apply(this,arguments);if(0===r.length&&(0===arguments.length||\"function\"!=typeof arguments[0]))return r.apply(this,[]);var i=function(e){var t={};return e.result().forEach(function(e){var r={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach(function(t){r[t]=e.stat(t)}),t[r.id]=r}),t},s=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){var c=function(e){a[1](s(i(e)))};return r.apply(this,[c,arguments[0]])}return new Promise(function(e,t){r.apply(o,[function(t){e(s(i(t)))},t])}).then(t,n)},t.version<51&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var r=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=arguments,t=this,n=new Promise(function(n,o){r.apply(t,[e[0],n,o])});return e.length<2?n:n.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}}),t.version<52&&[\"createOffer\",\"createAnswer\"].forEach(function(t){var r=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=this;if(arguments.length<1||1===arguments.length&&\"object\"==typeof arguments[0]){var t=1===arguments.length?arguments[0]:void 0;return new Promise(function(n,o){r.apply(e,[n,o,t])})}return r.apply(this,arguments)}}),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var r=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),r.apply(this,arguments)}});var n=e.RTCPeerConnection.prototype.addIceCandidate;e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?n.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}},fixNegotiationNeeded:function(e){a.wrapPeerConnectionEvent(e,\"negotiationneeded\",function(e){if(\"stable\"===e.target.signalingState)return e})},shimGetDisplayMedia:function(e,t){if(e.navigator&&e.navigator.mediaDevices&&!(\"getDisplayMedia\"in e.navigator.mediaDevices)){if(\"function\"!=typeof t)return void console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\");e.navigator.mediaDevices.getDisplayMedia=function(r){return t(r).then(function(t){var n=r.video&&r.video.width,o=r.video&&r.video.height,a=r.video&&r.video.frameRate;return r.video={mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:t,maxFrameRate:a||3}},n&&(r.video.mandatory.maxWidth=n),o&&(r.video.mandatory.maxHeight=o),e.navigator.mediaDevices.getUserMedia(r)})},e.navigator.getDisplayMedia=function(t){return a.deprecated(\"navigator.getDisplayMedia\",\"navigator.mediaDevices.getDisplayMedia\"),e.navigator.mediaDevices.getDisplayMedia(t)}}}}},function(e,t,r){\"use strict\";var n=r(6),o=n.log;e.exports=function(e){var t=n.detectBrowser(e),r=e&&e.navigator,a=function(e){if(\"object\"!=typeof e||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(r){if(\"require\"!==r&&\"advanced\"!==r&&\"mediaSource\"!==r){var n=\"object\"==typeof e[r]?e[r]:{ideal:e[r]};void 0!==n.exact&&\"number\"==typeof n.exact&&(n.min=n.max=n.exact);var o=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==n.ideal){t.optional=t.optional||[];var a={};\"number\"==typeof n.ideal?(a[o(\"min\",r)]=n.ideal,t.optional.push(a),a={},a[o(\"max\",r)]=n.ideal,t.optional.push(a)):(a[o(\"\",r)]=n.ideal,t.optional.push(a))}void 0!==n.exact&&\"number\"!=typeof n.exact?(t.mandatory=t.mandatory||{},t.mandatory[o(\"\",r)]=n.exact):[\"min\",\"max\"].forEach(function(e){void 0!==n[e]&&(t.mandatory=t.mandatory||{},t.mandatory[o(e,r)]=n[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},i=function(e,n){if(t.version>=61)return n(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"==typeof e.audio){var i=function(e,t,r){t in e&&!(r in e)&&(e[r]=e[t],delete e[t])};e=JSON.parse(JSON.stringify(e)),i(e.audio,\"autoGainControl\",\"googAutoGainControl\"),i(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=a(e.audio)}if(e&&\"object\"==typeof e.video){var s=e.video.facingMode;s=s&&(\"object\"==typeof s?s:{ideal:s});var c=t.version<66;if(s&&(\"user\"===s.exact||\"environment\"===s.exact||\"user\"===s.ideal||\"environment\"===s.ideal)&&(!r.mediaDevices.getSupportedConstraints||!r.mediaDevices.getSupportedConstraints().facingMode||c)){delete e.video.facingMode;var d;if(\"environment\"===s.exact||\"environment\"===s.ideal?d=[\"back\",\"rear\"]:\"user\"!==s.exact&&\"user\"!==s.ideal||(d=[\"front\"]),d)return r.mediaDevices.enumerateDevices().then(function(t){t=t.filter(function(e){return\"videoinput\"===e.kind});var r=t.find(function(e){return d.some(function(t){return-1!==e.label.toLowerCase().indexOf(t)})});return!r&&t.length&&-1!==d.indexOf(\"back\")&&(r=t[t.length-1]),r&&(e.video.deviceId=s.exact?{exact:r.deviceId}:{ideal:r.deviceId}),e.video=a(e.video),o(\"chrome: \"+JSON.stringify(e)),n(e)})}e.video=a(e.video)}return o(\"chrome: \"+JSON.stringify(e)),n(e)},s=function(e){return t.version>=64?e:{name:{PermissionDeniedError:\"NotAllowedError\",PermissionDismissedError:\"NotAllowedError\",InvalidStateError:\"NotAllowedError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotAllowedError\",MediaDeviceKillSwitchOn:\"NotAllowedError\",TabCaptureError:\"AbortError\",ScreenCaptureError:\"AbortError\",DeviceCaptureError:\"AbortError\"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString:function(){return this.name+(this.message&&\": \")+this.message}}},c=function(e,t,n){i(e,function(e){r.webkitGetUserMedia(e,t,function(e){n&&n(s(e))})})};r.getUserMedia=c;var d=function(e){return new Promise(function(t,n){r.getUserMedia(e,t,n)})};if(r.mediaDevices||(r.mediaDevices={getUserMedia:d,enumerateDevices:function(){return new Promise(function(t){var r={audio:\"audioinput\",video:\"videoinput\"};return e.MediaStreamTrack.getSources(function(e){t(e.map(function(e){return{label:e.label,kind:r[e.kind],deviceId:e.id,groupId:\"\"}}))})})},getSupportedConstraints:function(){return{deviceId:!0,echoCancellation:!0,facingMode:!0,frameRate:!0,height:!0,width:!0}}}),r.mediaDevices.getUserMedia){var u=r.mediaDevices.getUserMedia.bind(r.mediaDevices);r.mediaDevices.getUserMedia=function(e){return i(e,function(e){return u(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException(\"\",\"NotFoundError\");return t},function(e){return Promise.reject(s(e))})})}}else r.mediaDevices.getUserMedia=function(e){return d(e)};void 0===r.mediaDevices.addEventListener&&(r.mediaDevices.addEventListener=function(){o(\"Dummy mediaDevices.addEventListener called.\")}),void 0===r.mediaDevices.removeEventListener&&(r.mediaDevices.removeEventListener=function(){o(\"Dummy mediaDevices.removeEventListener called.\")})}},function(e,t,r){\"use strict\";var n=r(6),o=r(107),a=r(108);e.exports={shimGetUserMedia:r(110),shimPeerConnection:function(e){var t=n.detectBrowser(e);if(e.RTCIceGatherer&&(e.RTCIceCandidate||(e.RTCIceCandidate=function(e){return e}),e.RTCSessionDescription||(e.RTCSessionDescription=function(e){return e}),t.version<15025)){var r=Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype,\"enabled\");Object.defineProperty(e.MediaStreamTrack.prototype,\"enabled\",{set:function(e){r.set.call(this,e);var t=new Event(\"enabled\");t.enabled=e,this.dispatchEvent(t)}})}!e.RTCRtpSender||\"dtmf\"in e.RTCRtpSender.prototype||Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=new e.RTCDtmfSender(this):\"video\"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),e.RTCDtmfSender&&!e.RTCDTMFSender&&(e.RTCDTMFSender=e.RTCDtmfSender);var i=a(e,t.version);e.RTCPeerConnection=function(e){return e&&e.iceServers&&(e.iceServers=o(e.iceServers)),new i(e)},e.RTCPeerConnection.prototype=i.prototype},shimReplaceTrack:function(e){!e.RTCRtpSender||\"replaceTrack\"in e.RTCRtpSender.prototype||(e.RTCRtpSender.prototype.replaceTrack=e.RTCRtpSender.prototype.setTrack)},shimGetDisplayMedia:function(e,t){if(\"getDisplayMedia\"in e.navigator&&e.navigator.mediaDevices&&!(\"getDisplayMedia\"in e.navigator.mediaDevices)){var r=e.navigator.getDisplayMedia;e.navigator.mediaDevices.getDisplayMedia=function(t){return r.call(e.navigator,t)},e.navigator.getDisplayMedia=function(t){return n.deprecated(\"navigator.getDisplayMedia\",\"navigator.mediaDevices.getDisplayMedia\"),r.call(e.navigator,t)}}}}},function(e,t,r){\"use strict\";var n=r(6);e.exports=function(e,t){var r=!1;return e=JSON.parse(JSON.stringify(e)),e.filter(function(e){if(e&&(e.urls||e.url)){var o=e.urls||e.url;e.url&&!e.urls&&n.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\");var a=\"string\"==typeof o;return a&&(o=[o]),o=o.filter(function(e){return 0!==e.indexOf(\"turn:\")||-1===e.indexOf(\"transport=udp\")||-1!==e.indexOf(\"turn:[\")||r?0===e.indexOf(\"stun:\")&&t>=14393&&-1===e.indexOf(\"?transport=udp\"):(r=!0,!0)}),delete e.url,e.urls=a?o[0]:o,!!o.length}})}},function(e,t,r){\"use strict\";function n(e){return{inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type}function o(e,t,r,n,o){var a=u.writeRtpDescription(e.kind,t);if(a+=u.writeIceParameters(e.iceGatherer.getLocalParameters()),a+=u.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===r?\"actpass\":o||\"active\"),a+=\"a=mid:\"+e.mid+\"\\r\\n\",e.rtpSender&&e.rtpReceiver?a+=\"a=sendrecv\\r\\n\":e.rtpSender?a+=\"a=sendonly\\r\\n\":e.rtpReceiver?a+=\"a=recvonly\\r\\n\":a+=\"a=inactive\\r\\n\",e.rtpSender){var i=e.rtpSender._initialTrackId||e.rtpSender.track.id;e.rtpSender._initialTrackId=i;var s=\"msid:\"+(n?n.id:\"-\")+\" \"+i+\"\\r\\n\";a+=\"a=\"+s,a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+s,e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+s,a+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+u.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+u.localCName+\"\\r\\n\"),a}function a(e,t){var r=!1;return e=JSON.parse(JSON.stringify(e)),e.filter(function(e){if(e&&(e.urls||e.url)){var n=e.urls||e.url;e.url&&!e.urls&&console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");var o=\"string\"==typeof n;return o&&(n=[n]),n=n.filter(function(e){return 0!==e.indexOf(\"turn:\")||-1===e.indexOf(\"transport=udp\")||-1!==e.indexOf(\"turn:[\")||r?0===e.indexOf(\"stun:\")&&t>=14393&&-1===e.indexOf(\"?transport=udp\"):(r=!0,!0)}),delete e.url,e.urls=o?n[0]:n,!!n.length}})}function i(e,t){var r={codecs:[],headerExtensions:[],fecMechanisms:[]},n=function(e,t){e=parseInt(e,10);for(var r=0;r<t.length;r++)if(t[r].payloadType===e||t[r].preferredPayloadType===e)return t[r]},o=function(e,t,r,o){var a=n(e.parameters.apt,r),i=n(t.parameters.apt,o);return a&&i&&a.name.toLowerCase()===i.name.toLowerCase()};return e.codecs.forEach(function(n){for(var a=0;a<t.codecs.length;a++){var i=t.codecs[a];if(n.name.toLowerCase()===i.name.toLowerCase()&&n.clockRate===i.clockRate){if(\"rtx\"===n.name.toLowerCase()&&n.parameters&&i.parameters.apt&&!o(n,i,e.codecs,t.codecs))continue;i=JSON.parse(JSON.stringify(i)),i.numChannels=Math.min(n.numChannels,i.numChannels),r.codecs.push(i),i.rtcpFeedback=i.rtcpFeedback.filter(function(e){for(var t=0;t<n.rtcpFeedback.length;t++)if(n.rtcpFeedback[t].type===e.type&&n.rtcpFeedback[t].parameter===e.parameter)return!0;return!1});break}}}),e.headerExtensions.forEach(function(e){for(var n=0;n<t.headerExtensions.length;n++){var o=t.headerExtensions[n];if(e.uri===o.uri){r.headerExtensions.push(o);break}}}),r}function s(e,t,r){return-1!=={offer:{setLocalDescription:[\"stable\",\"have-local-offer\"],setRemoteDescription:[\"stable\",\"have-remote-offer\"]},answer:{setLocalDescription:[\"have-remote-offer\",\"have-local-pranswer\"],setRemoteDescription:[\"have-local-offer\",\"have-remote-pranswer\"]}}[t][e].indexOf(r)}function c(e,t){var r=e.getRemoteCandidates().find(function(e){return t.foundation===e.foundation&&t.ip===e.ip&&t.port===e.port&&t.priority===e.priority&&t.protocol===e.protocol&&t.type===e.type});return r||e.addRemoteCandidate(t),!r}function d(e,t){var r=new Error(t);return r.name=e,r.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[e],r}var u=r(109);e.exports=function(e,t){function r(t,r){r.addTrack(t),r.dispatchEvent(new e.MediaStreamTrackEvent(\"addtrack\",{track:t}))}function l(t,r){r.removeTrack(t),r.dispatchEvent(new e.MediaStreamTrackEvent(\"removetrack\",{track:t}))}function f(t,r,n,o){var a=new Event(\"track\");a.track=r,a.receiver=n,a.transceiver={receiver:n},a.streams=o,e.setTimeout(function(){t._dispatchEvent(\"track\",a)})}var p=function(r){var n=this,o=document.createDocumentFragment();if([\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"].forEach(function(e){n[e]=o[e].bind(o)}),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState=\"stable\",this.iceConnectionState=\"new\",this.connectionState=\"new\",this.iceGatheringState=\"new\",r=JSON.parse(JSON.stringify(r||{})),this.usingBundle=\"max-bundle\"===r.bundlePolicy,\"negotiate\"===r.rtcpMuxPolicy)throw d(\"NotSupportedError\",\"rtcpMuxPolicy 'negotiate' is not supported\");switch(r.rtcpMuxPolicy||(r.rtcpMuxPolicy=\"require\"),r.iceTransportPolicy){case\"all\":case\"relay\":break;default:r.iceTransportPolicy=\"all\"}switch(r.bundlePolicy){case\"balanced\":case\"max-compat\":case\"max-bundle\":break;default:r.bundlePolicy=\"balanced\"}if(r.iceServers=a(r.iceServers||[],t),this._iceGatherers=[],r.iceCandidatePoolSize)for(var i=r.iceCandidatePoolSize;i>0;i--)this._iceGatherers.push(new e.RTCIceGatherer({iceServers:r.iceServers,gatherPolicy:r.iceTransportPolicy}));else r.iceCandidatePoolSize=0;this._config=r,this.transceivers=[],this._sdpSessionId=u.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};Object.defineProperty(p.prototype,\"localDescription\",{configurable:!0,get:function(){return this._localDescription}}),Object.defineProperty(p.prototype,\"remoteDescription\",{configurable:!0,get:function(){return this._remoteDescription}}),p.prototype.onicecandidate=null,p.prototype.onaddstream=null,p.prototype.ontrack=null,p.prototype.onremovestream=null,p.prototype.onsignalingstatechange=null,p.prototype.oniceconnectionstatechange=null,p.prototype.onconnectionstatechange=null,p.prototype.onicegatheringstatechange=null,p.prototype.onnegotiationneeded=null,p.prototype.ondatachannel=null,p.prototype._dispatchEvent=function(e,t){this._isClosed||(this.dispatchEvent(t),\"function\"==typeof this[\"on\"+e]&&this[\"on\"+e](t))},p.prototype._emitGatheringStateChange=function(){var e=new Event(\"icegatheringstatechange\");this._dispatchEvent(\"icegatheringstatechange\",e)},p.prototype.getConfiguration=function(){return this._config},p.prototype.getLocalStreams=function(){return this.localStreams},p.prototype.getRemoteStreams=function(){return this.remoteStreams},p.prototype._createTransceiver=function(e,t){var r=this.transceivers.length>0,n={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&r)n.iceTransport=this.transceivers[0].iceTransport,n.dtlsTransport=this.transceivers[0].dtlsTransport;else{var o=this._createIceAndDtlsTransports();n.iceTransport=o.iceTransport,n.dtlsTransport=o.dtlsTransport}return t||this.transceivers.push(n),n},p.prototype.addTrack=function(t,r){if(this._isClosed)throw d(\"InvalidStateError\",\"Attempted to call addTrack on a closed peerconnection.\");if(this.transceivers.find(function(e){return e.track===t}))throw d(\"InvalidAccessError\",\"Track already exists.\");for(var n,o=0;o<this.transceivers.length;o++)this.transceivers[o].track||this.transceivers[o].kind!==t.kind||(n=this.transceivers[o]);return n||(n=this._createTransceiver(t.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(r)&&this.localStreams.push(r),n.track=t,n.stream=r,n.rtpSender=new e.RTCRtpSender(t,n.dtlsTransport),n.rtpSender},p.prototype.addStream=function(e){var r=this;if(t>=15025)e.getTracks().forEach(function(t){r.addTrack(t,e)});else{var n=e.clone();e.getTracks().forEach(function(e,t){var r=n.getTracks()[t];e.addEventListener(\"enabled\",function(e){r.enabled=e.enabled})}),n.getTracks().forEach(function(e){r.addTrack(e,n)})}},p.prototype.removeTrack=function(t){if(this._isClosed)throw d(\"InvalidStateError\",\"Attempted to call removeTrack on a closed peerconnection.\");if(!(t instanceof e.RTCRtpSender))throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");var r=this.transceivers.find(function(e){return e.rtpSender===t});if(!r)throw d(\"InvalidAccessError\",\"Sender was not created by this connection.\");var n=r.stream;r.rtpSender.stop(),r.rtpSender=null,r.track=null,r.stream=null,-1===this.transceivers.map(function(e){return e.stream}).indexOf(n)&&this.localStreams.indexOf(n)>-1&&this.localStreams.splice(this.localStreams.indexOf(n),1),this._maybeFireNegotiationNeeded()},p.prototype.removeStream=function(e){var t=this;e.getTracks().forEach(function(e){var r=t.getSenders().find(function(t){return t.track===e});r&&t.removeTrack(r)})},p.prototype.getSenders=function(){return this.transceivers.filter(function(e){return!!e.rtpSender}).map(function(e){return e.rtpSender})},p.prototype.getReceivers=function(){return this.transceivers.filter(function(e){return!!e.rtpReceiver}).map(function(e){return e.rtpReceiver})},p.prototype._createIceGatherer=function(t,r){var n=this;if(r&&t>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var o=new e.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(o,\"state\",{value:\"new\",writable:!0}),this.transceivers[t].bufferedCandidateEvents=[],this.transceivers[t].bufferCandidates=function(e){var r=!e.candidate||0===Object.keys(e.candidate).length;o.state=r?\"completed\":\"gathering\",null!==n.transceivers[t].bufferedCandidateEvents&&n.transceivers[t].bufferedCandidateEvents.push(e)},o.addEventListener(\"localcandidate\",this.transceivers[t].bufferCandidates),o},p.prototype._gather=function(t,r){var n=this,o=this.transceivers[r].iceGatherer;if(!o.onlocalcandidate){var a=this.transceivers[r].bufferedCandidateEvents;this.transceivers[r].bufferedCandidateEvents=null,o.removeEventListener(\"localcandidate\",this.transceivers[r].bufferCandidates),o.onlocalcandidate=function(e){if(!(n.usingBundle&&r>0)){var a=new Event(\"icecandidate\");a.candidate={sdpMid:t,sdpMLineIndex:r};var i=e.candidate,s=!i||0===Object.keys(i).length;if(s)\"new\"!==o.state&&\"gathering\"!==o.state||(o.state=\"completed\");else{\"new\"===o.state&&(o.state=\"gathering\"),i.component=1,i.ufrag=o.getLocalParameters().usernameFragment;var c=u.writeCandidate(i);a.candidate=Object.assign(a.candidate,u.parseCandidate(c)),a.candidate.candidate=c,a.candidate.toJSON=function(){return{candidate:a.candidate.candidate,sdpMid:a.candidate.sdpMid,sdpMLineIndex:a.candidate.sdpMLineIndex,usernameFragment:a.candidate.usernameFragment}}}var d=u.getMediaSections(n._localDescription.sdp);d[a.candidate.sdpMLineIndex]+=s?\"a=end-of-candidates\\r\\n\":\"a=\"+a.candidate.candidate+\"\\r\\n\",n._localDescription.sdp=u.getDescription(n._localDescription.sdp)+d.join(\"\");var l=n.transceivers.every(function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state});\"gathering\"!==n.iceGatheringState&&(n.iceGatheringState=\"gathering\",n._emitGatheringStateChange()),s||n._dispatchEvent(\"icecandidate\",a),l&&(n._dispatchEvent(\"icecandidate\",new Event(\"icecandidate\")),n.iceGatheringState=\"complete\",n._emitGatheringStateChange())}},e.setTimeout(function(){a.forEach(function(e){o.onlocalcandidate(e)})},0)}},p.prototype._createIceAndDtlsTransports=function(){var t=this,r=new e.RTCIceTransport(null);r.onicestatechange=function(){t._updateIceConnectionState(),t._updateConnectionState()};var n=new e.RTCDtlsTransport(r);return n.ondtlsstatechange=function(){t._updateConnectionState()},n.onerror=function(){Object.defineProperty(n,\"state\",{value:\"failed\",writable:!0}),t._updateConnectionState()},{iceTransport:r,dtlsTransport:n}},p.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var r=this.transceivers[e].iceTransport;r&&(delete r.onicestatechange,delete this.transceivers[e].iceTransport);var n=this.transceivers[e].dtlsTransport;n&&(delete n.ondtlsstatechange,delete n.onerror,delete this.transceivers[e].dtlsTransport)},p.prototype._transceive=function(e,r,n){var o=i(e.localCapabilities,e.remoteCapabilities);r&&e.rtpSender&&(o.encodings=e.sendEncodingParameters,o.rtcp={cname:u.localCName,compound:e.rtcpParameters.compound},e.recvEncodingParameters.length&&(o.rtcp.ssrc=e.recvEncodingParameters[0].ssrc),e.rtpSender.send(o)),n&&e.rtpReceiver&&o.codecs.length>0&&(\"video\"===e.kind&&e.recvEncodingParameters&&t<15019&&e.recvEncodingParameters.forEach(function(e){delete e.rtx}),e.recvEncodingParameters.length?o.encodings=e.recvEncodingParameters:o.encodings=[{}],o.rtcp={compound:e.rtcpParameters.compound},e.rtcpParameters.cname&&(o.rtcp.cname=e.rtcpParameters.cname),e.sendEncodingParameters.length&&(o.rtcp.ssrc=e.sendEncodingParameters[0].ssrc),e.rtpReceiver.receive(o))},p.prototype.setLocalDescription=function(e){var t=this;if(-1===[\"offer\",\"answer\"].indexOf(e.type))return Promise.reject(d(\"TypeError\",'Unsupported type \"'+e.type+'\"'));if(!s(\"setLocalDescription\",e.type,t.signalingState)||t._isClosed)return Promise.reject(d(\"InvalidStateError\",\"Can not set local \"+e.type+\" in state \"+t.signalingState));var r,n;if(\"offer\"===e.type)r=u.splitSections(e.sdp),n=r.shift(),r.forEach(function(e,r){var n=u.parseRtpParameters(e);t.transceivers[r].localCapabilities=n}),t.transceivers.forEach(function(e,r){t._gather(e.mid,r)});else if(\"answer\"===e.type){r=u.splitSections(t._remoteDescription.sdp),n=r.shift();var o=u.matchPrefix(n,\"a=ice-lite\").length>0;r.forEach(function(e,r){var a=t.transceivers[r],s=a.iceGatherer,c=a.iceTransport,d=a.dtlsTransport,l=a.localCapabilities,f=a.remoteCapabilities;if(!(u.isRejected(e)&&0===u.matchPrefix(e,\"a=bundle-only\").length||a.rejected)){var p=u.getIceParameters(e,n),m=u.getDtlsParameters(e,n);o&&(m.role=\"server\"),t.usingBundle&&0!==r||(t._gather(a.mid,r),\"new\"===c.state&&c.start(s,p,o?\"controlling\":\"controlled\"),\"new\"===d.state&&d.start(m));var v=i(l,f);t._transceive(a,v.codecs.length>0,!1)}})}return t._localDescription={type:e.type,sdp:e.sdp},\"offer\"===e.type?t._updateSignalingState(\"have-local-offer\"):t._updateSignalingState(\"stable\"),Promise.resolve()},p.prototype.setRemoteDescription=function(n){var o=this;if(-1===[\"offer\",\"answer\"].indexOf(n.type))return Promise.reject(d(\"TypeError\",'Unsupported type \"'+n.type+'\"'));if(!s(\"setRemoteDescription\",n.type,o.signalingState)||o._isClosed)return Promise.reject(d(\"InvalidStateError\",\"Can not set remote \"+n.type+\" in state \"+o.signalingState));var a={};o.remoteStreams.forEach(function(e){a[e.id]=e});var p=[],m=u.splitSections(n.sdp),v=m.shift(),h=u.matchPrefix(v,\"a=ice-lite\").length>0,k=u.matchPrefix(v,\"a=group:BUNDLE \").length>0;o.usingBundle=k;var C=u.matchPrefix(v,\"a=ice-options:\")[0];return o.canTrickleIceCandidates=!!C&&C.substr(14).split(\" \").indexOf(\"trickle\")>=0,m.forEach(function(s,d){var f=u.splitLines(s),m=u.getKind(s),C=u.isRejected(s)&&0===u.matchPrefix(s,\"a=bundle-only\").length,y=f[0].substr(2).split(\" \")[2],g=u.getDirection(s,v),P=u.parseMsid(s),B=u.getMid(s)||u.generateIdentifier();if(C||\"application\"===m&&(\"DTLS/SCTP\"===y||\"UDP/DTLS/SCTP\"===y))return void(o.transceivers[d]={mid:B,kind:m,protocol:y,rejected:!0});!C&&o.transceivers[d]&&o.transceivers[d].rejected&&(o.transceivers[d]=o._createTransceiver(m,!0));var w,b,S,T,x,R,E,_,M,O,L,I=u.parseRtpParameters(s);C||(O=u.getIceParameters(s,v),L=u.getDtlsParameters(s,v),L.role=\"client\"),E=u.parseRtpEncodingParameters(s);var D=u.parseRtcpParameters(s),j=u.matchPrefix(s,\"a=end-of-candidates\",v).length>0,N=u.matchPrefix(s,\"a=candidate:\").map(function(e){return u.parseCandidate(e)}).filter(function(e){return 1===e.component});if((\"offer\"===n.type||\"answer\"===n.type)&&!C&&k&&d>0&&o.transceivers[d]&&(o._disposeIceAndDtlsTransports(d),o.transceivers[d].iceGatherer=o.transceivers[0].iceGatherer,o.transceivers[d].iceTransport=o.transceivers[0].iceTransport,o.transceivers[d].dtlsTransport=o.transceivers[0].dtlsTransport,o.transceivers[d].rtpSender&&o.transceivers[d].rtpSender.setTransport(o.transceivers[0].dtlsTransport),o.transceivers[d].rtpReceiver&&o.transceivers[d].rtpReceiver.setTransport(o.transceivers[0].dtlsTransport)),\"offer\"!==n.type||C){if(\"answer\"===n.type&&!C){w=o.transceivers[d],b=w.iceGatherer,S=w.iceTransport,T=w.dtlsTransport,x=w.rtpReceiver,R=w.sendEncodingParameters,_=w.localCapabilities,o.transceivers[d].recvEncodingParameters=E,o.transceivers[d].remoteCapabilities=I,o.transceivers[d].rtcpParameters=D,N.length&&\"new\"===S.state&&(!h&&!j||k&&0!==d?N.forEach(function(e){c(w.iceTransport,e)}):S.setRemoteCandidates(N)),k&&0!==d||(\"new\"===S.state&&S.start(b,O,\"controlling\"),\"new\"===T.state&&T.start(L));var A=i(w.localCapabilities,w.remoteCapabilities),F=A.codecs.filter(function(e){return\"rtx\"===e.name.toLowerCase()}).length;!F&&w.sendEncodingParameters[0].rtx&&delete w.sendEncodingParameters[0].rtx,o._transceive(w,\"sendrecv\"===g||\"recvonly\"===g,\"sendrecv\"===g||\"sendonly\"===g),!x||\"sendrecv\"!==g&&\"sendonly\"!==g?delete w.rtpReceiver:(M=x.track,P?(a[P.stream]||(a[P.stream]=new e.MediaStream),r(M,a[P.stream]),p.push([M,x,a[P.stream]])):(a.default||(a.default=new e.MediaStream),r(M,a.default),p.push([M,x,a.default])))}}else{w=o.transceivers[d]||o._createTransceiver(m),w.mid=B,w.iceGatherer||(w.iceGatherer=o._createIceGatherer(d,k)),N.length&&\"new\"===w.iceTransport.state&&(!j||k&&0!==d?N.forEach(function(e){c(w.iceTransport,e)}):w.iceTransport.setRemoteCandidates(N)),_=e.RTCRtpReceiver.getCapabilities(m),t<15019&&(_.codecs=_.codecs.filter(function(e){return\"rtx\"!==e.name})),R=w.sendEncodingParameters||[{ssrc:1001*(2*d+2)}];var U=!1;if(\"sendrecv\"===g||\"sendonly\"===g){if(U=!w.rtpReceiver,x=w.rtpReceiver||new e.RTCRtpReceiver(w.dtlsTransport,m),U){var G;M=x.track,P&&\"-\"===P.stream||(P?(a[P.stream]||(a[P.stream]=new e.MediaStream,Object.defineProperty(a[P.stream],\"id\",{get:function(){return P.stream}})),Object.defineProperty(M,\"id\",{get:function(){return P.track}}),G=a[P.stream]):(a.default||(a.default=new e.MediaStream),G=a.default)),G&&(r(M,G),w.associatedRemoteMediaStreams.push(G)),p.push([M,x,G])}}else w.rtpReceiver&&w.rtpReceiver.track&&(w.associatedRemoteMediaStreams.forEach(function(e){var t=e.getTracks().find(function(e){return e.id===w.rtpReceiver.track.id});t&&l(t,e)}),w.associatedRemoteMediaStreams=[]);w.localCapabilities=_,w.remoteCapabilities=I,w.rtpReceiver=x,w.rtcpParameters=D,w.sendEncodingParameters=R,w.recvEncodingParameters=E,o._transceive(o.transceivers[d],!1,U)}}),void 0===o._dtlsRole&&(o._dtlsRole=\"offer\"===n.type?\"active\":\"passive\"),o._remoteDescription={type:n.type,sdp:n.sdp},\"offer\"===n.type?o._updateSignalingState(\"have-remote-offer\"):o._updateSignalingState(\"stable\"),Object.keys(a).forEach(function(t){var r=a[t];if(r.getTracks().length){if(-1===o.remoteStreams.indexOf(r)){o.remoteStreams.push(r);var n=new Event(\"addstream\");n.stream=r,e.setTimeout(function(){o._dispatchEvent(\"addstream\",n)})}p.forEach(function(e){var t=e[0],n=e[1];r.id===e[2].id&&f(o,t,n,[r])})}}),p.forEach(function(e){e[2]||f(o,e[0],e[1],[])}),e.setTimeout(function(){o&&o.transceivers&&o.transceivers.forEach(function(e){e.iceTransport&&\"new\"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"),e.iceTransport.addRemoteCandidate({}))})},4e3),Promise.resolve()},p.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._isClosed=!0,this._updateSignalingState(\"closed\")},p.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event(\"signalingstatechange\");this._dispatchEvent(\"signalingstatechange\",t)},p.prototype._maybeFireNegotiationNeeded=function(){var t=this;\"stable\"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,e.setTimeout(function(){if(t.needNegotiation){t.needNegotiation=!1;var e=new Event(\"negotiationneeded\");t._dispatchEvent(\"negotiationneeded\",e)}},0))},p.prototype._updateIceConnectionState=function(){var e,t={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(e){e.iceTransport&&!e.rejected&&t[e.iceTransport.state]++}),e=\"new\",t.failed>0?e=\"failed\":t.checking>0?e=\"checking\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0?e=\"connected\":t.completed>0&&(e=\"completed\"),e!==this.iceConnectionState){this.iceConnectionState=e;var r=new Event(\"iceconnectionstatechange\");this._dispatchEvent(\"iceconnectionstatechange\",r)}},p.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(e){e.iceTransport&&e.dtlsTransport&&!e.rejected&&(t[e.iceTransport.state]++,t[e.dtlsTransport.state]++)}),t.connected+=t.completed,e=\"new\",t.failed>0?e=\"failed\":t.connecting>0?e=\"connecting\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0&&(e=\"connected\"),e!==this.connectionState){this.connectionState=e;var r=new Event(\"connectionstatechange\");this._dispatchEvent(\"connectionstatechange\",r)}},p.prototype.createOffer=function(){var r=this;if(r._isClosed)return Promise.reject(d(\"InvalidStateError\",\"Can not call createOffer after close\"));var n=r.transceivers.filter(function(e){return\"audio\"===e.kind}).length,a=r.transceivers.filter(function(e){return\"video\"===e.kind}).length,i=arguments[0];if(i){if(i.mandatory||i.optional)throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");void 0!==i.offerToReceiveAudio&&(n=!0===i.offerToReceiveAudio?1:!1===i.offerToReceiveAudio?0:i.offerToReceiveAudio),void 0!==i.offerToReceiveVideo&&(a=!0===i.offerToReceiveVideo?1:!1===i.offerToReceiveVideo?0:i.offerToReceiveVideo)}for(r.transceivers.forEach(function(e){\"audio\"===e.kind?--n<0&&(e.wantReceive=!1):\"video\"===e.kind&&--a<0&&(e.wantReceive=!1)});n>0||a>0;)n>0&&(r._createTransceiver(\"audio\"),n--),a>0&&(r._createTransceiver(\"video\"),a--);var s=u.writeSessionBoilerplate(r._sdpSessionId,r._sdpSessionVersion++);r.transceivers.forEach(function(n,o){var a=n.track,i=n.kind,s=n.mid||u.generateIdentifier();n.mid=s,n.iceGatherer||(n.iceGatherer=r._createIceGatherer(o,r.usingBundle));var c=e.RTCRtpSender.getCapabilities(i);t<15019&&(c.codecs=c.codecs.filter(function(e){return\"rtx\"!==e.name})),c.codecs.forEach(function(e){\"H264\"===e.name&&void 0===e.parameters[\"level-asymmetry-allowed\"]&&(e.parameters[\"level-asymmetry-allowed\"]=\"1\"),n.remoteCapabilities&&n.remoteCapabilities.codecs&&n.remoteCapabilities.codecs.forEach(function(t){e.name.toLowerCase()===t.name.toLowerCase()&&e.clockRate===t.clockRate&&(e.preferredPayloadType=t.payloadType)})}),c.headerExtensions.forEach(function(e){(n.remoteCapabilities&&n.remoteCapabilities.headerExtensions||[]).forEach(function(t){e.uri===t.uri&&(e.id=t.id)})});var d=n.sendEncodingParameters||[{ssrc:1001*(2*o+1)}];a&&t>=15019&&\"video\"===i&&!d[0].rtx&&(d[0].rtx={ssrc:d[0].ssrc+1}),n.wantReceive&&(n.rtpReceiver=new e.RTCRtpReceiver(n.dtlsTransport,i)),n.localCapabilities=c,n.sendEncodingParameters=d}),\"max-compat\"!==r._config.bundlePolicy&&(s+=\"a=group:BUNDLE \"+r.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),s+=\"a=ice-options:trickle\\r\\n\",r.transceivers.forEach(function(e,t){s+=o(e,e.localCapabilities,\"offer\",e.stream,r._dtlsRole),s+=\"a=rtcp-rsize\\r\\n\",!e.iceGatherer||\"new\"===r.iceGatheringState||0!==t&&r.usingBundle||(e.iceGatherer.getLocalCandidates().forEach(function(e){e.component=1,s+=\"a=\"+u.writeCandidate(e)+\"\\r\\n\"}),\"completed\"===e.iceGatherer.state&&(s+=\"a=end-of-candidates\\r\\n\"))});var c=new e.RTCSessionDescription({type:\"offer\",sdp:s});return Promise.resolve(c)},p.prototype.createAnswer=function(){var r=this;if(r._isClosed)return Promise.reject(d(\"InvalidStateError\",\"Can not call createAnswer after close\"));if(\"have-remote-offer\"!==r.signalingState&&\"have-local-pranswer\"!==r.signalingState)return Promise.reject(d(\"InvalidStateError\",\"Can not call createAnswer in signalingState \"+r.signalingState));var n=u.writeSessionBoilerplate(r._sdpSessionId,r._sdpSessionVersion++);r.usingBundle&&(n+=\"a=group:BUNDLE \"+r.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),n+=\"a=ice-options:trickle\\r\\n\";var a=u.getMediaSections(r._remoteDescription.sdp).length;r.transceivers.forEach(function(e,s){if(!(s+1>a)){if(e.rejected)return\"application\"===e.kind?\"DTLS/SCTP\"===e.protocol?n+=\"m=application 0 DTLS/SCTP 5000\\r\\n\":n+=\"m=application 0 \"+e.protocol+\" webrtc-datachannel\\r\\n\":\"audio\"===e.kind?n+=\"m=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\na=rtpmap:0 PCMU/8000\\r\\n\":\"video\"===e.kind&&(n+=\"m=video 0 UDP/TLS/RTP/SAVPF 120\\r\\na=rtpmap:120 VP8/90000\\r\\n\"),void(n+=\"c=IN IP4 0.0.0.0\\r\\na=inactive\\r\\na=mid:\"+e.mid+\"\\r\\n\");if(e.stream){var c;\"audio\"===e.kind?c=e.stream.getAudioTracks()[0]:\"video\"===e.kind&&(c=e.stream.getVideoTracks()[0]),c&&t>=15019&&\"video\"===e.kind&&!e.sendEncodingParameters[0].rtx&&(e.sendEncodingParameters[0].rtx={ssrc:e.sendEncodingParameters[0].ssrc+1})}var d=i(e.localCapabilities,e.remoteCapabilities);!d.codecs.filter(function(e){return\"rtx\"===e.name.toLowerCase()}).length&&e.sendEncodingParameters[0].rtx&&delete e.sendEncodingParameters[0].rtx,n+=o(e,d,\"answer\",e.stream,r._dtlsRole),e.rtcpParameters&&e.rtcpParameters.reducedSize&&(n+=\"a=rtcp-rsize\\r\\n\")}});var s=new e.RTCSessionDescription({type:\"answer\",sdp:n});return Promise.resolve(s)},p.prototype.addIceCandidate=function(e){var t,r=this;return e&&void 0===e.sdpMLineIndex&&!e.sdpMid?Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")):new Promise(function(n,o){if(!r._remoteDescription)return o(d(\"InvalidStateError\",\"Can not add ICE candidate without a remote description\"));if(e&&\"\"!==e.candidate){var a=e.sdpMLineIndex;if(e.sdpMid)for(var i=0;i<r.transceivers.length;i++)if(r.transceivers[i].mid===e.sdpMid){a=i;break}var s=r.transceivers[a];if(!s)return o(d(\"OperationError\",\"Can not add ICE candidate\"));if(s.rejected)return n();var l=Object.keys(e.candidate).length>0?u.parseCandidate(e.candidate):{};if(\"tcp\"===l.protocol&&(0===l.port||9===l.port))return n();if(l.component&&1!==l.component)return n();if((0===a||a>0&&s.iceTransport!==r.transceivers[0].iceTransport)&&!c(s.iceTransport,l))return o(d(\"OperationError\",\"Can not add ICE candidate\"));var f=e.candidate.trim();0===f.indexOf(\"a=\")&&(f=f.substr(2)),t=u.getMediaSections(r._remoteDescription.sdp),t[a]+=\"a=\"+(l.type?f:\"end-of-candidates\")+\"\\r\\n\",r._remoteDescription.sdp=u.getDescription(r._remoteDescription.sdp)+t.join(\"\")}else for(var p=0;p<r.transceivers.length&&(r.transceivers[p].rejected||(r.transceivers[p].iceTransport.addRemoteCandidate({}),t=u.getMediaSections(r._remoteDescription.sdp),t[p]+=\"a=end-of-candidates\\r\\n\",r._remoteDescription.sdp=u.getDescription(r._remoteDescription.sdp)+t.join(\"\"),!r.usingBundle));p++);n()})},p.prototype.getStats=function(t){if(t&&t instanceof e.MediaStreamTrack){var r=null;if(this.transceivers.forEach(function(e){e.rtpSender&&e.rtpSender.track===t?r=e.rtpSender:e.rtpReceiver&&e.rtpReceiver.track===t&&(r=e.rtpReceiver)}),!r)throw d(\"InvalidAccessError\",\"Invalid selector.\");return r.getStats()}var n=[];return this.transceivers.forEach(function(e){[\"rtpSender\",\"rtpReceiver\",\"iceGatherer\",\"iceTransport\",\"dtlsTransport\"].forEach(function(t){e[t]&&n.push(e[t].getStats())})}),Promise.all(n).then(function(e){var t=new Map;return e.forEach(function(e){e.forEach(function(e){t.set(e.id,e)})}),t})},[\"RTCRtpSender\",\"RTCRtpReceiver\",\"RTCIceGatherer\",\"RTCIceTransport\",\"RTCDtlsTransport\"].forEach(function(t){var r=e[t];if(r&&r.prototype&&r.prototype.getStats){var o=r.prototype.getStats;r.prototype.getStats=function(){return o.apply(this).then(function(e){var t=new Map;return Object.keys(e).forEach(function(r){e[r].type=n(e[r]),t.set(r,e[r])}),t})}}});var m=[\"createOffer\",\"createAnswer\"];return m.forEach(function(e){var t=p.prototype[e];p.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[0]||\"function\"==typeof e[1]?t.apply(this,[arguments[2]]).then(function(t){\"function\"==typeof e[0]&&e[0].apply(null,[t])},function(t){\"function\"==typeof e[1]&&e[1].apply(null,[t])}):t.apply(this,arguments)}}),m=[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"],m.forEach(function(e){var t=p.prototype[e];p.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]||\"function\"==typeof e[2]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)},function(t){\"function\"==typeof e[2]&&e[2].apply(null,[t])}):t.apply(this,arguments)}}),[\"getStats\"].forEach(function(e){var t=p.prototype[e];p.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)}):t.apply(this,arguments)}}),p}},function(e,t,r){\"use strict\";var n={};n.generateIdentifier=function(){return Math.random().toString(36).substr(2,10)},n.localCName=n.generateIdentifier(),n.splitLines=function(e){return e.trim().split(\"\\n\").map(function(e){return e.trim()})},n.splitSections=function(e){return e.split(\"\\nm=\").map(function(e,t){return(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"})},n.getDescription=function(e){var t=n.splitSections(e);return t&&t[0]},n.getMediaSections=function(e){var t=n.splitSections(e);return t.shift(),t},n.matchPrefix=function(e,t){return n.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},n.parseCandidate=function(e){var t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");for(var r={foundation:t[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],port:parseInt(t[5],10),type:t[7]},n=8;n<t.length;n+=2)switch(t[n]){case\"raddr\":r.relatedAddress=t[n+1];break;case\"rport\":r.relatedPort=parseInt(t[n+1],10);break;case\"tcptype\":r.tcpType=t[n+1];break;case\"ufrag\":r.ufrag=t[n+1],r.usernameFragment=t[n+1];break;default:r[t[n]]=t[n+1]}return r},n.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.ip),t.push(e.port);var r=e.type;return t.push(\"typ\"),t.push(r),\"host\"!==r&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},n.parseIceOptions=function(e){return e.substr(14).split(\" \")},n.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),r={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),r.name=t[0],r.clockRate=parseInt(t[1],10),r.channels=3===t.length?parseInt(t[2],10):1,r.numChannels=r.channels,r},n.writeRtpMap=function(e){var t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);var r=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==r?\"/\"+r:\"\")+\"\\r\\n\"},n.parseExtmap=function(e){var t=e.substr(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1]}},n.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+\"\\r\\n\"},n.parseFmtp=function(e){for(var t,r={},n=e.substr(e.indexOf(\" \")+1).split(\";\"),o=0;o<n.length;o++)t=n[o].trim().split(\"=\"),r[t[0].trim()]=t[1];return r},n.writeFmtp=function(e){var t=\"\",r=e.payloadType;if(void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var n=[];Object.keys(e.parameters).forEach(function(t){e.parameters[t]?n.push(t+\"=\"+e.parameters[t]):n.push(t)}),t+=\"a=fmtp:\"+r+\" \"+n.join(\";\")+\"\\r\\n\"}return t},n.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},n.writeRtcpFb=function(e){var t=\"\",r=e.payloadType;return void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+=\"a=rtcp-fb:\"+r+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"}),t},n.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),r={ssrc:parseInt(e.substr(7,t-7),10)},n=e.indexOf(\":\",t);return n>-1?(r.attribute=e.substr(t+1,n-t-1),r.value=e.substr(n+1)):r.attribute=e.substr(t+1),r},n.getMid=function(e){var t=n.matchPrefix(e,\"a=mid:\")[0];if(t)return t.substr(6)},n.parseFingerprint=function(e){var t=e.substr(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1]}},n.getDtlsParameters=function(e,t){return{role:\"auto\",fingerprints:n.matchPrefix(e+t,\"a=fingerprint:\").map(n.parseFingerprint)}},n.writeDtlsParameters=function(e,t){var r=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach(function(e){r+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"}),r},n.getIceParameters=function(e,t){var r=n.splitLines(e);return r=r.concat(n.splitLines(t)),{usernameFragment:r.filter(function(e){return 0===e.indexOf(\"a=ice-ufrag:\")})[0].substr(12),password:r.filter(function(e){return 0===e.indexOf(\"a=ice-pwd:\")})[0].substr(10)}},n.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},n.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},r=n.splitLines(e),o=r[0].split(\" \"),a=3;a<o.length;a++){var i=o[a],s=n.matchPrefix(e,\"a=rtpmap:\"+i+\" \")[0];if(s){var c=n.parseRtpMap(s),d=n.matchPrefix(e,\"a=fmtp:\"+i+\" \");switch(c.parameters=d.length?n.parseFmtp(d[0]):{},c.rtcpFeedback=n.matchPrefix(e,\"a=rtcp-fb:\"+i+\" \").map(n.parseRtcpFb),t.codecs.push(c),c.name.toUpperCase()){case\"RED\":case\"ULPFEC\":t.fecMechanisms.push(c.name.toUpperCase())}}}return n.matchPrefix(e,\"a=extmap:\").forEach(function(e){t.headerExtensions.push(n.parseExtmap(e))}),t},n.writeRtpDescription=function(e,t){var r=\"\";r+=\"m=\"+e+\" \",r+=t.codecs.length>0?\"9\":\"0\",r+=\" UDP/TLS/RTP/SAVPF \",r+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(\" \")+\"\\r\\n\",r+=\"c=IN IP4 0.0.0.0\\r\\n\",r+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",t.codecs.forEach(function(e){r+=n.writeRtpMap(e),r+=n.writeFmtp(e),r+=n.writeRtcpFb(e)});var o=0;return t.codecs.forEach(function(e){e.maxptime>o&&(o=e.maxptime)}),o>0&&(r+=\"a=maxptime:\"+o+\"\\r\\n\"),r+=\"a=rtcp-mux\\r\\n\",t.headerExtensions&&t.headerExtensions.forEach(function(e){r+=n.writeExtmap(e)}),r},n.parseRtpEncodingParameters=function(e){var t,r=[],o=n.parseRtpParameters(e),a=-1!==o.fecMechanisms.indexOf(\"RED\"),i=-1!==o.fecMechanisms.indexOf(\"ULPFEC\"),s=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute}),c=s.length>0&&s[0].ssrc,d=n.matchPrefix(e,\"a=ssrc-group:FID\").map(function(e){return e.substr(17).split(\" \").map(function(e){return parseInt(e,10)})});d.length>0&&d[0].length>1&&d[0][0]===c&&(t=d[0][1]),o.codecs.forEach(function(e){if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){var n={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&t&&(n.rtx={ssrc:t}),r.push(n),a&&(n=JSON.parse(JSON.stringify(n)),n.fec={ssrc:t,mechanism:i?\"red+ulpfec\":\"red\"},r.push(n))}}),0===r.length&&c&&r.push({ssrc:c});var u=n.matchPrefix(e,\"b=\");return u.length&&(u=0===u[0].indexOf(\"b=TIAS:\")?parseInt(u[0].substr(7),10):0===u[0].indexOf(\"b=AS:\")?1e3*parseInt(u[0].substr(5),10)*.95-16e3:void 0,r.forEach(function(e){e.maxBitrate=u})),r},n.parseRtcpParameters=function(e){var t={},r=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute})[0];r&&(t.cname=r.value,t.ssrc=r.ssrc);var o=n.matchPrefix(e,\"a=rtcp-rsize\");t.reducedSize=o.length>0,t.compound=0===o.length;var a=n.matchPrefix(e,\"a=rtcp-mux\");return t.mux=a.length>0,t},n.parseMsid=function(e){var t,r=n.matchPrefix(e,\"a=msid:\");if(1===r.length)return t=r[0].substr(7).split(\" \"),{stream:t[0],track:t[1]};var o=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"msid\"===e.attribute});return o.length>0?(t=o[0].value.split(\" \"),{stream:t[0],track:t[1]}):void 0},n.generateSessionId=function(){return Math.random().toString().substr(2,21)},n.writeSessionBoilerplate=function(e,t){var r=void 0!==t?t:2;return\"v=0\\r\\no=thisisadapterortc \"+(e||n.generateSessionId())+\" \"+r+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},n.writeMediaSection=function(e,t,r,o){var a=n.writeRtpDescription(e.kind,t);if(a+=n.writeIceParameters(e.iceGatherer.getLocalParameters()),a+=n.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===r?\"actpass\":\"active\"),a+=\"a=mid:\"+e.mid+\"\\r\\n\",e.direction?a+=\"a=\"+e.direction+\"\\r\\n\":e.rtpSender&&e.rtpReceiver?a+=\"a=sendrecv\\r\\n\":e.rtpSender?a+=\"a=sendonly\\r\\n\":e.rtpReceiver?a+=\"a=recvonly\\r\\n\":a+=\"a=inactive\\r\\n\",e.rtpSender){var i=\"msid:\"+o.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";a+=\"a=\"+i,a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+i,e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+i,a+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+n.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+n.localCName+\"\\r\\n\"),a},n.getDirection=function(e,t){for(var r=n.splitLines(e),o=0;o<r.length;o++)switch(r[o]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return r[o].substr(2)}return t?n.getDirection(t):\"sendrecv\"},n.getKind=function(e){return n.splitLines(e)[0].split(\" \")[0].substr(2)},n.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},n.parseMLine=function(e){var t=n.splitLines(e),r=t[0].substr(2).split(\" \");return{kind:r[0],port:parseInt(r[1],10),protocol:r[2],fmt:r.slice(3).join(\" \")}},n.parseOLine=function(e){var t=n.matchPrefix(e,\"o=\")[0],r=t.substr(2).split(\" \");return{username:r[0],sessionId:r[1],sessionVersion:parseInt(r[2],10),netType:r[3],addressType:r[4],address:r[5]}},e.exports=n},function(e,t,r){\"use strict\";e.exports=function(e){var t=e&&e.navigator,r=function(e){return{name:{PermissionDeniedError:\"NotAllowedError\"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString:function(){return this.name}}},n=t.mediaDevices.getUserMedia.bind(t.mediaDevices);t.mediaDevices.getUserMedia=function(e){return n(e).catch(function(e){return Promise.reject(r(e))})}}},function(e,t,r){\"use strict\";var n=r(6);e.exports={shimGetUserMedia:r(112),shimOnTrack:function(e){\"object\"!=typeof e||!e.RTCPeerConnection||\"ontrack\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&(this.removeEventListener(\"track\",this._ontrack),this.removeEventListener(\"addstream\",this._ontrackpoly)),this.addEventListener(\"track\",this._ontrack=e),this.addEventListener(\"addstream\",this._ontrackpoly=function(e){e.stream.getTracks().forEach(function(t){var r=new Event(\"track\");r.track=t,r.receiver={track:t},r.transceiver={receiver:r.receiver},r.streams=[e.stream],this.dispatchEvent(r)}.bind(this))}.bind(this))},enumerable:!0,configurable:!0}),\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})},shimSourceObject:function(e){\"object\"==typeof e&&(!e.HTMLMediaElement||\"srcObject\"in e.HTMLMediaElement.prototype||Object.defineProperty(e.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},shimPeerConnection:function(e){var t=n.detectBrowser(e);if(\"object\"==typeof e&&(e.RTCPeerConnection||e.mozRTCPeerConnection)){e.RTCPeerConnection||(e.RTCPeerConnection=function(r,n){if(t.version<38&&r&&r.iceServers){for(var o=[],a=0;a<r.iceServers.length;a++){var i=r.iceServers[a];if(i.hasOwnProperty(\"urls\"))for(var s=0;s<i.urls.length;s++){var c={url:i.urls[s]};0===i.urls[s].indexOf(\"turn\")&&(c.username=i.username,c.credential=i.credential),o.push(c)}else o.push(r.iceServers[a])}r.iceServers=o}return new e.mozRTCPeerConnection(r,n)},e.RTCPeerConnection.prototype=e.mozRTCPeerConnection.prototype,e.mozRTCPeerConnection.generateCertificate&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return e.mozRTCPeerConnection.generateCertificate}}),e.RTCSessionDescription=e.mozRTCSessionDescription,e.RTCIceCandidate=e.mozRTCIceCandidate),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var r=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),r.apply(this,arguments)}});var r=e.RTCPeerConnection.prototype.addIceCandidate;e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?r.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var o=function(e){var t=new Map;return Object.keys(e).forEach(function(r){t.set(r,e[r]),t[r]=e[r]}),t},a={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},i=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(e,r,n){return i.apply(this,[e||null]).then(function(e){if(t.version<48&&(e=o(e)),t.version<53&&!r)try{e.forEach(function(e){e.type=a[e.type]||e.type})}catch(t){if(\"TypeError\"!==t.name)throw t;e.forEach(function(t,r){e.set(r,Object.assign({},t,{type:a[t.type]||t.type}))})}return e}).then(r,n)}}},shimSenderGetStats:function(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&!(e.RTCRtpSender&&\"getStats\"in e.RTCRtpSender.prototype)){var t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){var e=this,r=t.apply(e,[]);return r.forEach(function(t){t._pc=e}),r});var r=e.RTCPeerConnection.prototype.addTrack;r&&(e.RTCPeerConnection.prototype.addTrack=function(){var e=r.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Promise.resolve(new Map)}}},shimReceiverGetStats:function(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&!(e.RTCRtpSender&&\"getStats\"in e.RTCRtpReceiver.prototype)){var t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){var e=this,r=t.apply(e,[]);return r.forEach(function(t){t._pc=e}),r}),n.wrapPeerConnectionEvent(e,\"track\",function(e){return e.receiver._pc=e.srcElement,e}),e.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}},shimRemoveStream:function(e){!e.RTCPeerConnection||\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;n.deprecated(\"removeStream\",\"removeTrack\"),this.getSenders().forEach(function(r){r.track&&-1!==e.getTracks().indexOf(r.track)&&t.removeTrack(r)})})},shimRTCDataChannel:function(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)},shimGetDisplayMedia:function(e,t){!e.navigator||!e.navigator.mediaDevices||\"getDisplayMedia\"in e.navigator.mediaDevices||(e.navigator.mediaDevices.getDisplayMedia=function(r){if(!r||!r.video){var n=new DOMException(\"getDisplayMedia without video constraints is undefined\");return n.name=\"NotFoundError\",n.code=8,Promise.reject(n)}return!0===r.video?r.video={mediaSource:t}:r.video.mediaSource=t,e.navigator.mediaDevices.getUserMedia(r)},e.navigator.getDisplayMedia=function(t){return n.deprecated(\"navigator.getDisplayMedia\",\"navigator.mediaDevices.getDisplayMedia\"),e.navigator.mediaDevices.getDisplayMedia(t)})}}},function(e,t,r){\"use strict\";var n=r(6),o=n.log;e.exports=function(e){var t=n.detectBrowser(e),r=e&&e.navigator,a=e&&e.MediaStreamTrack,i=function(e){return{name:{InternalError:\"NotReadableError\",NotSupportedError:\"TypeError\",PermissionDeniedError:\"NotAllowedError\",SecurityError:\"NotAllowedError\"}[e.name]||e.name,message:{\"The operation is insecure.\":\"The request is not allowed by the user agent or the platform in the current context.\"}[e.message]||e.message,constraint:e.constraint,toString:function(){return this.name+(this.message&&\": \")+this.message}}},s=function(e,n,a){var s=function(e){if(\"object\"!=typeof e||e.require)return e;var t=[];return Object.keys(e).forEach(function(r){if(\"require\"!==r&&\"advanced\"!==r&&\"mediaSource\"!==r){var n=e[r]=\"object\"==typeof e[r]?e[r]:{ideal:e[r]};if(void 0===n.min&&void 0===n.max&&void 0===n.exact||t.push(r),void 0!==n.exact&&(\"number\"==typeof n.exact?n.min=n.max=n.exact:e[r]=n.exact,delete n.exact),void 0!==n.ideal){e.advanced=e.advanced||[];var o={};\"number\"==typeof n.ideal?o[r]={min:n.ideal,max:n.ideal}:o[r]=n.ideal,e.advanced.push(o),delete n.ideal,Object.keys(n).length||delete e[r]}}}),t.length&&(e.require=t),e};return e=JSON.parse(JSON.stringify(e)),t.version<38&&(o(\"spec: \"+JSON.stringify(e)),e.audio&&(e.audio=s(e.audio)),e.video&&(e.video=s(e.video)),o(\"ff37: \"+JSON.stringify(e))),r.mozGetUserMedia(e,n,function(e){a(i(e))})},c=function(e){return new Promise(function(t,r){s(e,t,r)})};if(r.mediaDevices||(r.mediaDevices={getUserMedia:c,addEventListener:function(){},removeEventListener:function(){}}),r.mediaDevices.enumerateDevices=r.mediaDevices.enumerateDevices||function(){return new Promise(function(e){e([{kind:\"audioinput\",deviceId:\"default\",label:\"\",groupId:\"\"},{kind:\"videoinput\",deviceId:\"default\",label:\"\",groupId:\"\"}])})},t.version<41){var d=r.mediaDevices.enumerateDevices.bind(r.mediaDevices);r.mediaDevices.enumerateDevices=function(){return d().then(void 0,function(e){if(\"NotFoundError\"===e.name)return[];throw e})}}if(t.version<49){var u=r.mediaDevices.getUserMedia.bind(r.mediaDevices);r.mediaDevices.getUserMedia=function(e){return u(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException(\"The object can not be found here.\",\"NotFoundError\");return t},function(e){return Promise.reject(i(e))})}}if(!(t.version>55&&\"autoGainControl\"in r.mediaDevices.getSupportedConstraints())){var l=function(e,t,r){t in e&&!(r in e)&&(e[r]=e[t],delete e[t])},f=r.mediaDevices.getUserMedia.bind(r.mediaDevices);if(r.mediaDevices.getUserMedia=function(e){return\"object\"==typeof e&&\"object\"==typeof e.audio&&(e=JSON.parse(JSON.stringify(e)),l(e.audio,\"autoGainControl\",\"mozAutoGainControl\"),l(e.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),f(e)},a&&a.prototype.getSettings){var p=a.prototype.getSettings;a.prototype.getSettings=function(){var e=p.apply(this,arguments);return l(e,\"mozAutoGainControl\",\"autoGainControl\"),l(e,\"mozNoiseSuppression\",\"noiseSuppression\"),e}}if(a&&a.prototype.applyConstraints){var m=a.prototype.applyConstraints;a.prototype.applyConstraints=function(e){return\"audio\"===this.kind&&\"object\"==typeof e&&(e=JSON.parse(JSON.stringify(e)),l(e,\"autoGainControl\",\"mozAutoGainControl\"),l(e,\"noiseSuppression\",\"mozNoiseSuppression\")),m.apply(this,[e])}}}r.getUserMedia=function(e,o,a){if(t.version<44)return s(e,o,a);n.deprecated(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),r.mediaDevices.getUserMedia(e).then(o,a)}}},function(e,t,r){\"use strict\";var n=r(6);e.exports={shimLocalStreamsAPI:function(e){if(\"object\"==typeof e&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),\"getStreamById\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getStreamById=function(e){var t=null;return this._localStreams&&this._localStreams.forEach(function(r){r.id===e&&(t=r)}),this._remoteStreams&&this._remoteStreams.forEach(function(r){r.id===e&&(t=r)}),t}),!(\"addStream\"in e.RTCPeerConnection.prototype)){var t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){this._localStreams||(this._localStreams=[]),-1===this._localStreams.indexOf(e)&&this._localStreams.push(e);var r=this;e.getTracks().forEach(function(n){t.call(r,n,e)})},e.RTCPeerConnection.prototype.addTrack=function(e,r){return r&&(this._localStreams?-1===this._localStreams.indexOf(r)&&this._localStreams.push(r):this._localStreams=[r]),t.call(this,e,r)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);var t=this._localStreams.indexOf(e);if(-1!==t){this._localStreams.splice(t,1);var r=this,n=e.getTracks();this.getSenders().forEach(function(e){-1!==n.indexOf(e.track)&&r.removeTrack(e)})}})}},shimRemoteStreamsAPI:function(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!(\"onaddstream\"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get:function(){return this._onaddstream},set:function(e){this._onaddstream&&this.removeEventListener(\"addstream\",this._onaddstream),this.addEventListener(\"addstream\",this._onaddstream=e)}});var t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){var e=this;return this._onaddstreampoly||this.addEventListener(\"track\",this._onaddstreampoly=function(t){t.streams.forEach(function(t){if(e._remoteStreams||(e._remoteStreams=[]),!(e._remoteStreams.indexOf(t)>=0)){e._remoteStreams.push(t);var r=new Event(\"addstream\");r.stream=t,e.dispatchEvent(r)}})}),t.apply(e,arguments)}}},shimCallbacksAPI:function(e){if(\"object\"==typeof e&&e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype,r=t.createOffer,n=t.createAnswer,o=t.setLocalDescription,a=t.setRemoteDescription,i=t.addIceCandidate;t.createOffer=function(e,t){var n=arguments.length>=2?arguments[2]:arguments[0],o=r.apply(this,[n]);return t?(o.then(e,t),Promise.resolve()):o},t.createAnswer=function(e,t){var r=arguments.length>=2?arguments[2]:arguments[0],o=n.apply(this,[r]);return t?(o.then(e,t),Promise.resolve()):o};var s=function(e,t,r){var n=o.apply(this,[e]);return r?(n.then(t,r),Promise.resolve()):n};t.setLocalDescription=s,s=function(e,t,r){var n=a.apply(this,[e]);return r?(n.then(t,r),Promise.resolve()):n},t.setRemoteDescription=s,s=function(e,t,r){var n=i.apply(this,[e]);return r?(n.then(t,r),Promise.resolve()):n},t.addIceCandidate=s}},shimGetUserMedia:function(e){var t=e&&e.navigator;t.getUserMedia||(t.webkitGetUserMedia?t.getUserMedia=t.webkitGetUserMedia.bind(t):t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,r,n){t.mediaDevices.getUserMedia(e).then(r,n)}.bind(t)))},shimRTCIceServerUrls:function(e){var t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,r){if(e&&e.iceServers){for(var o=[],a=0;a<e.iceServers.length;a++){var i=e.iceServers[a];!i.hasOwnProperty(\"urls\")&&i.hasOwnProperty(\"url\")?(n.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\"),i=JSON.parse(JSON.stringify(i)),i.urls=i.url,delete i.url,o.push(i)):o.push(e.iceServers[a])}e.iceServers=o}return new t(e,r)},e.RTCPeerConnection.prototype=t.prototype,\"generateCertificate\"in e.RTCPeerConnection&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return t.generateCertificate}})},shimTrackEventTransceiver:function(e){\"object\"==typeof e&&e.RTCPeerConnection&&\"receiver\"in e.RTCTrackEvent.prototype&&!e.RTCTransceiver&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})},shimCreateOfferLegacy:function(e){var t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){var r=this;if(e){void 0!==e.offerToReceiveAudio&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);var n=r.getTransceivers().find(function(e){return e.sender.track&&\"audio\"===e.sender.track.kind});!1===e.offerToReceiveAudio&&n?\"sendrecv\"===n.direction?n.setDirection?n.setDirection(\"sendonly\"):n.direction=\"sendonly\":\"recvonly\"===n.direction&&(n.setDirection?n.setDirection(\"inactive\"):n.direction=\"inactive\"):!0!==e.offerToReceiveAudio||n||r.addTransceiver(\"audio\"),void 0!==e.offerToReceiveVideo&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);var o=r.getTransceivers().find(function(e){return e.sender.track&&\"video\"===e.sender.track.kind});!1===e.offerToReceiveVideo&&o?\"sendrecv\"===o.direction?o.setDirection(\"sendonly\"):\"recvonly\"===o.direction&&o.setDirection(\"inactive\"):!0!==e.offerToReceiveVideo||o||r.addTransceiver(\"video\")}return t.apply(r,arguments)}}}},function(e,t,r){\"use strict\";var n=r(115),o=r(6);e.exports={shimRTCIceCandidate:function(e){if(e.RTCIceCandidate&&!(e.RTCIceCandidate&&\"foundation\"in e.RTCIceCandidate.prototype)){var t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){if(\"object\"==typeof e&&e.candidate&&0===e.candidate.indexOf(\"a=\")&&(e=JSON.parse(JSON.stringify(e)),e.candidate=e.candidate.substr(2)),e.candidate&&e.candidate.length){var r=new t(e),o=n.parseCandidate(e.candidate),a=Object.assign(r,o);return a.toJSON=function(){return{candidate:a.candidate,sdpMid:a.sdpMid,sdpMLineIndex:a.sdpMLineIndex,usernameFragment:a.usernameFragment}},a}return new t(e)},e.RTCIceCandidate.prototype=t.prototype,o.wrapPeerConnectionEvent(e,\"icecandidate\",function(t){return t.candidate&&Object.defineProperty(t,\"candidate\",{value:new e.RTCIceCandidate(t.candidate),writable:\"false\"}),t})}},shimCreateObjectURL:function(e){var t=e&&e.URL;if(\"object\"==typeof e&&e.HTMLMediaElement&&\"srcObject\"in e.HTMLMediaElement.prototype&&t.createObjectURL&&t.revokeObjectURL){var r=t.createObjectURL.bind(t),n=t.revokeObjectURL.bind(t),a=new Map,i=0;t.createObjectURL=function(e){if(\"getTracks\"in e){var t=\"polyblob:\"+ ++i;return a.set(t,e),o.deprecated(\"URL.createObjectURL(stream)\",\"elem.srcObject = stream\"),t}return r(e)},t.revokeObjectURL=function(e){n(e),a.delete(e)};var s=Object.getOwnPropertyDescriptor(e.HTMLMediaElement.prototype,\"src\");Object.defineProperty(e.HTMLMediaElement.prototype,\"src\",{get:function(){return s.get.apply(this)},set:function(e){return this.srcObject=a.get(e)||null,s.set.apply(this,[e])}});var c=e.HTMLMediaElement.prototype.setAttribute;e.HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&\"src\"===(\"\"+arguments[0]).toLowerCase()&&(this.srcObject=a.get(arguments[1])||null),c.apply(this,arguments)}}},shimMaxMessageSize:function(e){if(!e.RTCSctpTransport&&e.RTCPeerConnection){var t=o.detectBrowser(e);\"sctp\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"sctp\",{get:function(){return void 0===this._sctp?null:this._sctp}});var r=function(e){var t=n.splitSections(e.sdp);return t.shift(),t.some(function(e){var t=n.parseMLine(e);return t&&\"application\"===t.kind&&-1!==t.protocol.indexOf(\"SCTP\")})},a=function(e){var t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);if(null===t||t.length<2)return-1;var r=parseInt(t[1],10);return r!==r?-1:r},i=function(e){var r=65536;return\"firefox\"===t.browser&&(r=t.version<57?-1===e?16384:2147483637:t.version<60?57===t.version?65535:65536:2147483637),r},s=function(e,r){var o=65536;\"firefox\"===t.browser&&57===t.version&&(o=65535);var a=n.matchPrefix(e.sdp,\"a=max-message-size:\");return a.length>0?o=parseInt(a[0].substr(19),10):\"firefox\"===t.browser&&-1!==r&&(o=2147483637),o},c=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){var e=this;if(e._sctp=null,r(arguments[0])){var t,n=a(arguments[0]),o=i(n),d=s(arguments[0],n);t=0===o&&0===d?Number.POSITIVE_INFINITY:0===o||0===d?Math.max(o,d):Math.min(o,d);var u={};Object.defineProperty(u,\"maxMessageSize\",{get:function(){return t}}),e._sctp=u}return c.apply(e,arguments)}}},shimSendThrowTypeError:function(e){function t(e,t){var r=e.send;e.send=function(){var n=arguments[0],o=n.length||n.size||n.byteLength;if(\"open\"===e.readyState&&t.sctp&&o>t.sctp.maxMessageSize)throw new TypeError(\"Message too large (can send a maximum of \"+t.sctp.maxMessageSize+\" bytes)\");return r.apply(e,arguments)}}if(e.RTCPeerConnection&&\"createDataChannel\"in e.RTCPeerConnection.prototype){var r=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){var e=this,n=r.apply(e,arguments);return t(n,e),n},o.wrapPeerConnectionEvent(e,\"datachannel\",function(e){return t(e.channel,e.target),e})}}}},function(e,t,r){\"use strict\";var n={};n.generateIdentifier=function(){return Math.random().toString(36).substr(2,10)},n.localCName=n.generateIdentifier(),n.splitLines=function(e){return e.trim().split(\"\\n\").map(function(e){return e.trim()})},n.splitSections=function(e){return e.split(\"\\nm=\").map(function(e,t){return(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"})},n.getDescription=function(e){var t=n.splitSections(e);return t&&t[0]},n.getMediaSections=function(e){var t=n.splitSections(e);return t.shift(),t},n.matchPrefix=function(e,t){return n.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},n.parseCandidate=function(e){var t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");for(var r={foundation:t[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]},n=8;n<t.length;n+=2)switch(t[n]){case\"raddr\":r.relatedAddress=t[n+1];break;case\"rport\":r.relatedPort=parseInt(t[n+1],10);break;case\"tcptype\":r.tcpType=t[n+1];break;case\"ufrag\":r.ufrag=t[n+1],r.usernameFragment=t[n+1];break;default:r[t[n]]=t[n+1]}return r},n.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);var r=e.type;return t.push(\"typ\"),t.push(r),\"host\"!==r&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},n.parseIceOptions=function(e){return e.substr(14).split(\" \")},n.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),r={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),r.name=t[0],r.clockRate=parseInt(t[1],10),r.channels=3===t.length?parseInt(t[2],10):1,r.numChannels=r.channels,r},n.writeRtpMap=function(e){var t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);var r=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==r?\"/\"+r:\"\")+\"\\r\\n\"},n.parseExtmap=function(e){var t=e.substr(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1]}},n.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+\"\\r\\n\"},n.parseFmtp=function(e){for(var t,r={},n=e.substr(e.indexOf(\" \")+1).split(\";\"),o=0;o<n.length;o++)t=n[o].trim().split(\"=\"),r[t[0].trim()]=t[1];return r},n.writeFmtp=function(e){var t=\"\",r=e.payloadType;if(void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var n=[];Object.keys(e.parameters).forEach(function(t){e.parameters[t]?n.push(t+\"=\"+e.parameters[t]):n.push(t)}),t+=\"a=fmtp:\"+r+\" \"+n.join(\";\")+\"\\r\\n\"}return t},n.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},n.writeRtcpFb=function(e){var t=\"\",r=e.payloadType;return void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+=\"a=rtcp-fb:\"+r+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"}),t},n.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),r={ssrc:parseInt(e.substr(7,t-7),10)},n=e.indexOf(\":\",t);return n>-1?(r.attribute=e.substr(t+1,n-t-1),r.value=e.substr(n+1)):r.attribute=e.substr(t+1),r},n.parseSsrcGroup=function(e){var t=e.substr(13).split(\" \");return{semantics:t.shift(),ssrcs:t.map(function(e){return parseInt(e,10)})}},n.getMid=function(e){var t=n.matchPrefix(e,\"a=mid:\")[0];if(t)return t.substr(6)},n.parseFingerprint=function(e){var t=e.substr(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1]}},n.getDtlsParameters=function(e,t){return{role:\"auto\",fingerprints:n.matchPrefix(e+t,\"a=fingerprint:\").map(n.parseFingerprint)}},n.writeDtlsParameters=function(e,t){var r=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach(function(e){r+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"}),r},n.getIceParameters=function(e,t){var r=n.splitLines(e);return r=r.concat(n.splitLines(t)),{usernameFragment:r.filter(function(e){return 0===e.indexOf(\"a=ice-ufrag:\")})[0].substr(12),password:r.filter(function(e){return 0===e.indexOf(\"a=ice-pwd:\")})[0].substr(10)}},n.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},n.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},r=n.splitLines(e),o=r[0].split(\" \"),a=3;a<o.length;a++){var i=o[a],s=n.matchPrefix(e,\"a=rtpmap:\"+i+\" \")[0];if(s){var c=n.parseRtpMap(s),d=n.matchPrefix(e,\"a=fmtp:\"+i+\" \");switch(c.parameters=d.length?n.parseFmtp(d[0]):{},c.rtcpFeedback=n.matchPrefix(e,\"a=rtcp-fb:\"+i+\" \").map(n.parseRtcpFb),t.codecs.push(c),c.name.toUpperCase()){case\"RED\":case\"ULPFEC\":t.fecMechanisms.push(c.name.toUpperCase())}}}return n.matchPrefix(e,\"a=extmap:\").forEach(function(e){t.headerExtensions.push(n.parseExtmap(e))}),t},n.writeRtpDescription=function(e,t){var r=\"\";r+=\"m=\"+e+\" \",r+=t.codecs.length>0?\"9\":\"0\",r+=\" UDP/TLS/RTP/SAVPF \",r+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(\" \")+\"\\r\\n\",r+=\"c=IN IP4 0.0.0.0\\r\\n\",r+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",t.codecs.forEach(function(e){r+=n.writeRtpMap(e),r+=n.writeFmtp(e),r+=n.writeRtcpFb(e)});var o=0;return t.codecs.forEach(function(e){e.maxptime>o&&(o=e.maxptime)}),o>0&&(r+=\"a=maxptime:\"+o+\"\\r\\n\"),r+=\"a=rtcp-mux\\r\\n\",t.headerExtensions&&t.headerExtensions.forEach(function(e){r+=n.writeExtmap(e)}),r},n.parseRtpEncodingParameters=function(e){var t,r=[],o=n.parseRtpParameters(e),a=-1!==o.fecMechanisms.indexOf(\"RED\"),i=-1!==o.fecMechanisms.indexOf(\"ULPFEC\"),s=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute}),c=s.length>0&&s[0].ssrc,d=n.matchPrefix(e,\"a=ssrc-group:FID\").map(function(e){return e.substr(17).split(\" \").map(function(e){return parseInt(e,10)})});d.length>0&&d[0].length>1&&d[0][0]===c&&(t=d[0][1]),o.codecs.forEach(function(e){if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){var n={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&t&&(n.rtx={ssrc:t}),r.push(n),a&&(n=JSON.parse(JSON.stringify(n)),n.fec={ssrc:c,mechanism:i?\"red+ulpfec\":\"red\"},r.push(n))}}),0===r.length&&c&&r.push({ssrc:c});var u=n.matchPrefix(e,\"b=\");return u.length&&(u=0===u[0].indexOf(\"b=TIAS:\")?parseInt(u[0].substr(7),10):0===u[0].indexOf(\"b=AS:\")?1e3*parseInt(u[0].substr(5),10)*.95-16e3:void 0,r.forEach(function(e){e.maxBitrate=u})),r},n.parseRtcpParameters=function(e){var t={},r=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute})[0];r&&(t.cname=r.value,t.ssrc=r.ssrc);var o=n.matchPrefix(e,\"a=rtcp-rsize\");t.reducedSize=o.length>0,t.compound=0===o.length;var a=n.matchPrefix(e,\"a=rtcp-mux\");return t.mux=a.length>0,t},n.parseMsid=function(e){var t,r=n.matchPrefix(e,\"a=msid:\");if(1===r.length)return t=r[0].substr(7).split(\" \"),{stream:t[0],track:t[1]};var o=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"msid\"===e.attribute});return o.length>0?(t=o[0].value.split(\" \"),{stream:t[0],track:t[1]}):void 0},n.generateSessionId=function(){return Math.random().toString().substr(2,21)},n.writeSessionBoilerplate=function(e,t,r){var o,a=void 0!==t?t:2;return o=e||n.generateSessionId(),\"v=0\\r\\no=\"+(r||\"thisisadapterortc\")+\" \"+o+\" \"+a+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},n.writeMediaSection=function(e,t,r,o){var a=n.writeRtpDescription(e.kind,t);if(a+=n.writeIceParameters(e.iceGatherer.getLocalParameters()),a+=n.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===r?\"actpass\":\"active\"),a+=\"a=mid:\"+e.mid+\"\\r\\n\",e.direction?a+=\"a=\"+e.direction+\"\\r\\n\":e.rtpSender&&e.rtpReceiver?a+=\"a=sendrecv\\r\\n\":e.rtpSender?a+=\"a=sendonly\\r\\n\":e.rtpReceiver?a+=\"a=recvonly\\r\\n\":a+=\"a=inactive\\r\\n\",e.rtpSender){var i=\"msid:\"+o.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";a+=\"a=\"+i,a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+i,e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+i,a+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+n.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+n.localCName+\"\\r\\n\"),a},n.getDirection=function(e,t){for(var r=n.splitLines(e),o=0;o<r.length;o++)switch(r[o]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return r[o].substr(2)}return t?n.getDirection(t):\"sendrecv\"},n.getKind=function(e){return n.splitLines(e)[0].split(\" \")[0].substr(2)},n.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},n.parseMLine=function(e){var t=n.splitLines(e),r=t[0].substr(2).split(\" \");return{kind:r[0],port:parseInt(r[1],10),protocol:r[2],fmt:r.slice(3).join(\" \")}},n.parseOLine=function(e){var t=n.matchPrefix(e,\"o=\")[0],r=t.substr(2).split(\" \");return{username:r[0],sessionId:r[1],sessionVersion:parseInt(r[2],10),netType:r[3],addressType:r[4],address:r[5]}},n.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;for(var t=n.splitLines(e),r=0;r<t.length;r++)if(t[r].length<2||\"=\"!==t[r].charAt(1))return!1;return!0},e.exports=n},function(e,t,r){e.exports={default:r(117),__esModule:!0}},function(e,t,r){r(118),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(36),o=r(51);r(119)(\"getPrototypeOf\",function(){return function(e){return o(n(e))}})},function(e,t,r){var n=r(3),o=r(0),a=r(16);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],i={};i[e]=t(r),n(n.S+n.F*a(function(){r(1)}),\"Object\",i)}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=r(64),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==(void 0===t?\"undefined\":(0,o.default)(t))&&\"function\"!=typeof t?e:t}},function(e,t,r){e.exports={default:r(122),__esModule:!0}},function(e,t,r){r(25),r(52),e.exports=r(40).f(\"iterator\")},function(e,t,r){e.exports={default:r(124),__esModule:!0}},function(e,t,r){r(125),r(45),r(130),r(131),e.exports=r(0).Symbol},function(e,t,r){\"use strict\";var n=r(1),o=r(10),a=r(8),i=r(3),s=r(48),c=r(126).KEY,d=r(16),u=r(34),l=r(23),f=r(22),p=r(2),m=r(40),v=r(41),h=r(127),k=r(128),C=r(5),y=r(7),g=r(14),P=r(29),B=r(17),w=r(30),b=r(129),S=r(67),T=r(4),x=r(31),R=S.f,E=T.f,_=b.f,M=n.Symbol,O=n.JSON,L=O&&O.stringify,I=p(\"_hidden\"),D=p(\"toPrimitive\"),j={}.propertyIsEnumerable,N=u(\"symbol-registry\"),A=u(\"symbols\"),F=u(\"op-symbols\"),U=Object.prototype,G=\"function\"==typeof M,z=n.QObject,X=!z||!z.prototype||!z.prototype.findChild,V=a&&d(function(){return 7!=w(E({},\"a\",{get:function(){return E(this,\"a\",{value:7}).a}})).a})?function(e,t,r){var n=R(U,t);n&&delete U[t],E(e,t,r),n&&e!==U&&E(U,t,n)}:E,J=function(e){var t=A[e]=w(M.prototype);return t._k=e,t},W=G&&\"symbol\"==typeof M.iterator?function(e){return\"symbol\"==typeof e}:function(e){return e instanceof M},H=function(e,t,r){return e===U&&H(F,t,r),C(e),t=P(t,!0),C(r),o(A,t)?(r.enumerable?(o(e,I)&&e[I][t]&&(e[I][t]=!1),r=w(r,{enumerable:B(0,!1)})):(o(e,I)||E(e,I,B(1,{})),e[I][t]=!0),V(e,t,r)):E(e,t,r)},q=function(e,t){C(e);for(var r,n=h(t=g(t)),o=0,a=n.length;a>o;)H(e,r=n[o++],t[r]);return e},K=function(e,t){return void 0===t?w(e):q(w(e),t)},$=function(e){var t=j.call(this,e=P(e,!0));return!(this===U&&o(A,e)&&!o(F,e))&&(!(t||!o(this,e)||!o(A,e)||o(this,I)&&this[I][e])||t)},Z=function(e,t){if(e=g(e),t=P(t,!0),e!==U||!o(A,t)||o(F,t)){var r=R(e,t);return!r||!o(A,t)||o(e,I)&&e[I][t]||(r.enumerable=!0),r}},Y=function(e){for(var t,r=_(g(e)),n=[],a=0;r.length>a;)o(A,t=r[a++])||t==I||t==c||n.push(t);return n},Q=function(e){for(var t,r=e===U,n=_(r?F:g(e)),a=[],i=0;n.length>i;)!o(A,t=n[i++])||r&&!o(U,t)||a.push(A[t]);return a};G||(M=function(){if(this instanceof M)throw TypeError(\"Symbol is not a constructor!\");var e=f(arguments.length>0?arguments[0]:void 0),t=function(r){this===U&&t.call(F,r),o(this,I)&&o(this[I],e)&&(this[I][e]=!1),V(this,e,B(1,r))};return a&&X&&V(U,e,{configurable:!0,set:t}),J(e)},s(M.prototype,\"toString\",function(){return this._k}),S.f=Z,T.f=H,r(66).f=b.f=Y,r(42).f=$,r(65).f=Q,a&&!r(15)&&s(U,\"propertyIsEnumerable\",$,!0),m.f=function(e){return J(p(e))}),i(i.G+i.W+i.F*!G,{Symbol:M});for(var ee=\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),te=0;ee.length>te;)p(ee[te++]);for(var re=x(p.store),ne=0;re.length>ne;)v(re[ne++]);i(i.S+i.F*!G,\"Symbol\",{for:function(e){return o(N,e+=\"\")?N[e]:N[e]=M(e)},keyFor:function(e){if(!W(e))throw TypeError(e+\" is not a symbol!\");for(var t in N)if(N[t]===e)return t},useSetter:function(){X=!0},useSimple:function(){X=!1}}),i(i.S+i.F*!G,\"Object\",{create:K,defineProperty:H,defineProperties:q,getOwnPropertyDescriptor:Z,getOwnPropertyNames:Y,getOwnPropertySymbols:Q}),O&&i(i.S+i.F*(!G||d(function(){var e=M();return\"[null]\"!=L([e])||\"{}\"!=L({a:e})||\"{}\"!=L(Object(e))})),\"JSON\",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(y(t)||void 0!==e)&&!W(e))return k(t)||(t=function(e,t){if(\"function\"==typeof r&&(t=r.call(this,e,t)),!W(t))return t}),n[1]=t,L.apply(O,n)}}),M.prototype[D]||r(9)(M.prototype,D,M.prototype.valueOf),l(M,\"Symbol\"),l(Math,\"Math\",!0),l(n.JSON,\"JSON\",!0)},function(e,t,r){var n=r(22)(\"meta\"),o=r(7),a=r(10),i=r(4).f,s=0,c=Object.isExtensible||function(){return!0},d=!r(16)(function(){return c(Object.preventExtensions({}))}),u=function(e){i(e,n,{value:{i:\"O\"+ ++s,w:{}}})},l=function(e,t){if(!o(e))return\"symbol\"==typeof e?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!a(e,n)){if(!c(e))return\"F\";if(!t)return\"E\";u(e)}return e[n].i},f=function(e,t){if(!a(e,n)){if(!c(e))return!0;if(!t)return!1;u(e)}return e[n].w},p=function(e){return d&&m.NEED&&c(e)&&!a(e,n)&&u(e),e},m=e.exports={KEY:n,NEED:!1,fastKey:l,getWeak:f,onFreeze:p}},function(e,t,r){var n=r(31),o=r(65),a=r(42);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var i,s=r(e),c=a.f,d=0;s.length>d;)c.call(e,i=s[d++])&&t.push(i);return t}},function(e,t,r){var n=r(19);e.exports=Array.isArray||function(e){return\"Array\"==n(e)}},function(e,t,r){var n=r(14),o=r(66).f,a={}.toString,i=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(e){try{return o(e)}catch(e){return i.slice()}};e.exports.f=function(e){return i&&\"[object Window]\"==a.call(e)?s(e):o(n(e))}},function(e,t,r){r(41)(\"asyncIterator\")},function(e,t,r){r(41)(\"observable\")},function(e,t,r){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=r(133),a=n(o),i=r(137),s=n(i),c=r(64),d=n(c);t.default=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===t?\"undefined\":(0,d.default)(t)));e.prototype=(0,s.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(a.default?(0,a.default)(e,t):e.__proto__=t)}},function(e,t,r){e.exports={default:r(134),__esModule:!0}},function(e,t,r){r(135),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(3);n(n.S,\"Object\",{setPrototypeOf:r(136).set})},function(e,t,r){var n=r(7),o=r(5),a=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+\": can't set as prototype!\")};e.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(e,t,n){try{n=r(13)(Function.call,r(67).f(Object.prototype,\"__proto__\").set,2),n(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return a(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:a}},function(e,t,r){e.exports={default:r(138),__esModule:!0}},function(e,t,r){r(139);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(3);n(n.S,\"Object\",{create:r(30)})},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(11),o=r.n(n),a=r(12),i=r.n(a);t.default={methods:{onDetect:function(e){var t=this;return i()(o.a.mark(function r(){var n,a;return o.a.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return t.$emit(\"detect\",e),r.prev=1,r.next=4,e;case 4:n=r.sent,a=n.content,null!==a&&t.$emit(\"decode\",a),r.next=11;break;case 9:r.prev=9,r.t0=r.catch(1);case 11:case\"end\":return r.stop()}},r,t,[[1,9]])}))()}}}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,r=e._self._c||t;return r(\"div\",{staticClass:\"wrapper\"},[r(\"div\",{staticClass:\"inside\"},[r(\"video\",{directives:[{name:\"show\",rawName:\"v-show\",value:e.shouldScan,expression:\"shouldScan\"}],ref:\"video\",staticClass:\"camera\",attrs:{autoplay:\"\",muted:\"\",playsinline:\"\"},domProps:{muted:!0}}),e._v(\" \"),r(\"canvas\",{directives:[{name:\"show\",rawName:\"v-show\",value:!e.shouldScan,expression:\"!shouldScan\"}],ref:\"pauseFrame\",staticClass:\"pause-frame\"}),e._v(\" \"),r(\"canvas\",{ref:\"trackingLayer\",staticClass:\"tracking-layer\"}),e._v(\" \"),r(\"div\",{staticClass:\"overlay\"},[e._t(\"default\")],2)])])},staticRenderFns:[]}},function(e,t,r){var n=r(20)(r(143),r(148),null,null);e.exports=n.exports},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(11),o=r.n(n),a=r(12),i=r.n(a),s=r(68),c=r.n(s),d=r(38),u=r(43),l=r(44),f=r.n(l);t.default={name:\"qrcode-capture\",mixins:[f.a],methods:{onChangeInput:function(e){[].concat(c()(e.target.files)).map(this.processFile).forEach(this.onDetect)},processFile:function(e){var t=this;return i()(o.a.mark(function r(){var n,a;return o.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Object(u.a)(e);case 2:return n=t.sent,t.next=5,Object(d.b)(n);case 5:return a=t.sent,t.abrupt(\"return\",a);case 7:case\"end\":return t.stop()}},r,t)}))()}}}},function(e,t,r){e.exports={default:r(145),__esModule:!0}},function(e,t,r){r(25),r(146),e.exports=r(0).Array.from},function(e,t,r){\"use strict\";var n=r(13),o=r(3),a=r(36),i=r(54),s=r(55),c=r(32),d=r(147),u=r(56);o(o.S+o.F*!r(61)(function(e){Array.from(e)}),\"Array\",{from:function(e){var t,r,o,l,f=a(e),p=\"function\"==typeof this?this:Array,m=arguments.length,v=m>1?arguments[1]:void 0,h=void 0!==v,k=0,C=u(f);if(h&&(v=n(v,m>2?arguments[2]:void 0,2)),void 0==C||p==Array&&s(C))for(t=c(f.length),r=new p(t);t>k;k++)d(r,k,h?v(f[k],k):f[k]);else for(l=C.call(f),r=new p;!(o=l.next()).done;k++)d(r,k,h?i(l,v,[o.value,k],!0):o.value);return r.length=k,r}})},function(e,t,r){\"use strict\";var n=r(4),o=r(17);e.exports=function(e,t,r){t in e?n.f(e,t,o(0,r)):e[t]=r}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"input\",{attrs:{type:\"file\",name:\"image\",accept:\"image/*\",capture:\"environment\",multiple:\"\"},on:{change:e.onChangeInput}})},staticRenderFns:[]}},function(e,t,r){var n=r(20)(r(150),r(151),null,null);e.exports=n.exports},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(11),o=r.n(n),a=r(12),i=r.n(a),s=r(68),c=r.n(s),d=r(38),u=r(43),l=r(44),f=r.n(l);t.default={name:\"qrcode-drop-zone\",mixins:[f.a],methods:{onDragOver:function(e){this.$emit(\"dragover\",e)},onDrop:function(e){var t=this,r=e.dataTransfer;this.onDragOver(!1);var n=[].concat(c()(r.files)),o=r.getData(\"text/uri-list\");n.forEach(function(e){t.onDetect(t.processFile(e))}),\"\"!==o&&this.onDetect(this.processUrl(o))},processFile:function(e){var t=this;return i()(o.a.mark(function r(){var n,a;return o.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Object(u.a)(e);case 2:return n=t.sent,t.next=5,Object(d.b)(n);case 5:return a=t.sent,t.abrupt(\"return\",a);case 7:case\"end\":return t.stop()}},r,t)}))()},processUrl:function(e){var t=this;return i()(o.a.mark(function r(){var n,a;return o.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Object(u.b)(e);case 2:return n=t.sent,t.next=5,Object(d.b)(n);case 5:return a=t.sent,t.abrupt(\"return\",a);case 7:case\"end\":return t.stop()}},r,t)}))()}}}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"div\",{on:{drop:function(t){return t.preventDefault(),t.stopPropagation(),e.onDrop(t)},dragenter:function(t){return t.preventDefault(),t.stopPropagation(),e.onDragOver(!0)},dragleave:function(t){return t.preventDefault(),t.stopPropagation(),e.onDragOver(!1)},dragover:function(e){e.preventDefault(),e.stopPropagation()}}},[e._t(\"default\")],2)},staticRenderFns:[]}}]);","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = require(\"core-js/library/fn/promise\");","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","module.exports = function () { /* empty */ };\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","module.exports = require('./_hide');\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export { default } from './dist/vue-qrcode-reader.common'\nexport * from './dist/vue-qrcode-reader.common'\nimport './dist/vue-qrcode-reader.css'\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"min-height\":\"100%\"}},[_c('v-toolbar',{style:(_vm.style),attrs:{\"dark\":\"\",\"fixed\":\"\",\"flat\":\"\",\"tabs\":\"\"}},[_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":_vm.goToHome}},[_c('v-icon',[_vm._v(\"arrow_back\")])],1),_c('v-toolbar-title',[_vm._v(\"扫描二维码\")]),_c('v-spacer'),(_vm.convertCamera)?_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":_vm.switchCamera}},[_c('v-icon',[_vm._v(\"switch_camera\")])],1):_vm._e(),_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":_vm.imgClick}},[_c('v-icon',[_vm._v(\"add_a_photo\")])],1)],1),(!_vm.destroyed)?_c('qrcode-stream',{key:_vm._uid,attrs:{\"track\":_vm.selected.value,\"camera\":_vm.camera},on:{\"decode\":_vm.onDecode,\"init\":_vm.onInit}},[(_vm.loading)?_c('div',{staticClass:\"validation-pending\"},[_vm._v(\"\\n        Loading...\\n      \")]):_vm._e(),(_vm.validationSuccess)?_c('div',{staticClass:\"validation-success\"},[_vm._v(\"\\n        二维码有效，处理中...\\n      \")]):_vm._e(),(_vm.validationFailure)?_c('div',{staticClass:\"validation-failure\"},[_vm._v(\"\\n        \"+_vm._s(_vm.result)+\"，这不是一个合法有效的二维码，请检查!\\n      \")]):_vm._e(),(_vm.validationPending)?_c('div',{staticClass:\"validation-pending\"},[_vm._v(\"\\n        \"+_vm._s(_vm.result)+\"，二维码验证过程中，请稍后...\\n      \")]):_vm._e()]):_vm._e(),_c('qrcode-capture',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.inputView),expression:\"inputView\"}],on:{\"detect\":_vm.onDetect}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","<template>\n  <v-card min-height=\"100%\">\n    <!--顶层菜单-->\n    <v-toolbar\n      :style=\"style\"\n      dark\n      fixed\n      flat\n      tabs\n    >\n      <v-btn icon @click=\"goToHome\">\n        <v-icon>arrow_back</v-icon>\n      </v-btn>\n      <v-toolbar-title>扫描二维码</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn icon v-if=\"convertCamera\" @click=\"switchCamera\">\n        <v-icon>switch_camera</v-icon>\n      </v-btn>\n      <v-btn icon @click=\"imgClick\">\n        <v-icon>add_a_photo</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <qrcode-stream :key=\"_uid\" :track=\"selected.value\" :camera=\"camera\" @decode=\"onDecode\" @init=\"onInit\" v-if=\"!destroyed\">\n      <div v-if=\"loading\" class=\"validation-pending\" >\n        Loading...\n      </div>\n\n      <div v-if=\"validationSuccess\" class=\"validation-success\">\n        二维码有效，处理中...\n      </div>\n\n      <div v-if=\"validationFailure\" class=\"validation-failure\">\n        {{ result }}，这不是一个合法有效的二维码，请检查!\n      </div>\n\n      <div v-if=\"validationPending\" class=\"validation-pending\">\n        {{ result }}，二维码验证过程中，请稍后...\n      </div>\n    </qrcode-stream>\n    <qrcode-capture v-show=\"inputView\" @detect=\"onDetect\" />\n\n<!--    <div class=\"app__overlay\">-->\n<!--      <div class=\"app__overlay-frame\"></div>-->\n<!--      &lt;!&ndash; Scanner animation &ndash;&gt;-->\n<!--      <div class=\"custom-scanner\"></div>-->\n<!--      <div class=\"app__help-text\"></div>-->\n<!--    </div>-->\n\n  </v-card>\n</template>\n\n<script>\nimport { QrcodeStream, QrcodeCapture } from 'vue-qrcode-reader'\nconst axios = require('axios')\n\nexport default {\n  name: 'QrcodeScan',\n  components: { QrcodeStream, QrcodeCapture },\n\n  data () {\n    const options = [\n      { text: 'None', value: false },\n      { text: 'Red square (default)', value: true },\n      { text: 'Green text', value: this.paintGreenText },\n      { text: 'Blue dots', value: this.paintBlueDots }\n    ]\n\n    const selected = options[2]\n\n    return {\n      style: { background: 'rgba(0,0,0, 0.6)' },\n      bottomNav: 'scan',\n      error: '',\n      camera: 'rear',\n      isValid: undefined,\n      noRearCamera: false,\n      noFrontCamera: false,\n      convertCamera: false,\n      noStreamApiSupport: false,\n      selected,\n      options,\n      result: null,\n      inputView: false,\n      loading: false,\n      destroyed: false\n    }\n  },\n\n  mounted () {\n    // TODO:需要修改input属性，在移动终端设备上点击时打开图片文件夹而非拍照功能\n    let domInput = document.getElementsByName('image').item(0)\n    domInput.removeAttribute('capture')\n  },\n\n  computed: {\n    // eslint-disable-next-line vue/return-in-computed-property\n    paintBlueDots (location, ctx) {\n      const {\n        topLeftFinderPattern,\n        topRightFinderPattern,\n        bottomLeftFinderPattern\n      } = location\n\n      const pointArray = [\n        topLeftFinderPattern,\n        topRightFinderPattern,\n        bottomLeftFinderPattern\n      ]\n\n      ctx.fillStyle = '#007bff'\n\n      pointArray.forEach(({ x, y }) => {\n        ctx.fillRect(x - 5, y - 5, 10, 10)\n      })\n    },\n\n    // eslint-disable-next-line vue/return-in-computed-property\n    paintGreenText (location, ctx) {\n      const {\n        topLeftCorner,\n        topRightCorner,\n        bottomLeftCorner,\n        bottomRightCorner\n      } = location\n\n      const pointArray = [\n        topLeftCorner,\n        topRightCorner,\n        bottomLeftCorner,\n        bottomRightCorner\n      ]\n\n      const centerX = pointArray.reduce((sum, { x }) => x + sum, 0) / 4\n      const centerY = pointArray.reduce((sum, { y }) => y + sum, 0) / 4\n\n      ctx.font = 'bold 24px sans-serif'\n      ctx.textAlign = 'center'\n\n      ctx.lineWidth = 3\n      ctx.strokeStyle = '#35495e'\n      ctx.strokeText(this.result, centerX, centerY)\n\n      ctx.fillStyle = '#5cb984'\n      ctx.fillText(this.result, centerX, centerY)\n    },\n\n    validationPending () {\n      return this.isValid === undefined &&\n        this.camera === 'off'\n    },\n\n    validationSuccess () {\n      return this.isValid === true\n    },\n\n    validationFailure () {\n      return this.isValid === false\n    }\n  },\n\n  methods: {\n    // onDecode (result) {\n    //   this.result = result\n    // },\n\n    switchCamera () {\n      switch (this.camera) {\n        case 'front':\n          this.camera = 'rear'\n          break\n        case 'rear':\n          this.camera = 'front'\n          break\n      }\n    },\n\n    logErrors (promise) {\n      promise.catch(console.error)\n    },\n\n    async onInit (promise) {\n      this.loading = true\n      try {\n        await promise\n      } catch (error) {\n        if (error.name === 'StreamApiNotSupportedError') {\n          this.noStreamApiSupport = true\n        }\n\n        const triedFrontCamera = this.camera === 'front'\n        const triedRearCamera = this.camera === 'rear'\n        const cameraMissingError = error.name === 'OverconstrainedError'\n\n        if (triedRearCamera && cameraMissingError) {\n          this.noRearCamera = true\n        }\n\n        if (triedFrontCamera && cameraMissingError) {\n          this.noFrontCamera = true\n        }\n\n        // 只有前置、后置摄像头都有时才在顶部菜单区显示转换摄像头按钮\n        if (this.noRearCamera || this.noFrontCamera) {\n          this.convertCamera = false\n        } else {\n          this.convertCamera = true\n        }\n        console.error(error)\n      } finally {\n        this.loading = false\n      }\n    },\n\n    repaint (location, ctx) {\n      const {\n        topLeftCorner,\n        topRightCorner,\n        bottomLeftCorner,\n        bottomRightCorner\n        // topLeftFinderPattern,\n        // topRightFinderPattern,\n        // bottomLeftFinderPattern\n      } = location\n\n      ctx.strokeStyle = 'blue' // instead of red\n\n      ctx.beginPath()\n      ctx.moveTo(topLeftCorner.x, topLeftCorner.y)\n      ctx.lineTo(bottomLeftCorner.x, bottomLeftCorner.y)\n      ctx.lineTo(bottomRightCorner.x, bottomRightCorner.y)\n      ctx.lineTo(topRightCorner.x, topRightCorner.y)\n      ctx.lineTo(topLeftCorner.x, topLeftCorner.y)\n      ctx.closePath()\n\n      ctx.stroke()\n    },\n\n    // 检测选择的图片文件\n    async onDetect (promise) {\n      try {\n        const {\n          imageData, // raw image data of image/frame\n          content, // decoded String or null\n          location // QR code coordinates or null\n        } = await promise\n\n        if (content === null) {\n          // decoded nothing\n          console.log('decoded nothing')\n        } else {\n          // 一次解析成功后，应该关闭摄像头\n          this.turnCameraOff()\n\n          // 简单验证是否为URL连接\n          this.isValid = content.startsWith('http')\n          //\n          // // some more delay, so users have time to read the message\n          // await this.timeout(2000)\n\n          if (this.isValid) {\n            console.log('Scan url is:' + content)\n            this.goToLink(content)\n          }\n\n          // console.log('decoded image! content:' + content)\n        }\n      } catch (error) {\n        // ...\n      }\n    },\n\n    async onDecode (content) {\n      this.result = content\n      this.turnCameraOff()\n\n      // pretend it's taking really long\n      await this.timeout(2000)\n\n      // 简单验证是否为URL连接\n      this.isValid = content.startsWith('http')\n\n      // some more delay, so users have time to read the message\n      await this.timeout(2000)\n\n      if (this.isValid) {\n        console.log('Scan url is:' + content)\n        this.goToLink(content)\n      }\n\n      // 一次解析成功后，应该关闭摄像头\n      // this.turnCameraOn()\n    },\n\n    turnCameraOn () {\n      this.camera = 'auto'\n    },\n\n    turnCameraOff () {\n      this.camera = 'off'\n    },\n\n    timeout (ms) {\n      return new Promise(resolve => {\n        window.setTimeout(resolve, ms)\n      })\n    },\n\n    // async onInit (promise) {\n    //   try {\n    //     await promise\n    //   } catch (error) {\n    //     if (error.name === 'NotAllowedError') {\n    //       this.error = 'ERROR: you need to grant camera access permisson'\n    //     } else if (error.name === 'NotFoundError') {\n    //       this.error = 'ERROR: no camera on this device'\n    //     } else if (error.name === 'NotSupportedError') {\n    //       this.error = 'ERROR: secure context required (HTTPS, localhost)'\n    //     } else if (error.name === 'NotReadableError') {\n    //       this.error = 'ERROR: is the camera already in use?'\n    //     } else if (error.name === 'OverconstrainedError') {\n    //       this.error = 'ERROR: installed cameras are not suitable'\n    //     } else if (error.name === 'StreamApiNotSupportedError') {\n    //       this.error = 'ERROR: Stream API is not supported in this browser'\n    //     }\n    //   }\n    // },\n\n    // 图片click\n    imgClick () {\n      // console.log(document.getElementsByName('image'))\n      document.getElementsByName('image').item(0).click()\n    },\n\n    goToLink (url) {\n      axios.get(url).then((response) => {\n        if (response.data === 0) {\n          console.log('goToLink failure, no data return!')\n        } else {\n          console.log('goToLink eturn:' + response)\n        }\n      }).catch(error => {\n        console.log('goToLink error:' + error)\n      })\n    },\n\n    goToHome () {\n      this.$router.push('/')\n    }\n  }\n}\n</script>\n\n<style scoped>\n  /*.error {*/\n  /*  font-weight: bold;*/\n  /*  color: red;*/\n  /*}*/\n  .validation-success,\n  .validation-failure,\n  .validation-pending {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n\n    background-color: rgba(255, 255, 255, .8);\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.4rem;\n    padding: 10px;\n\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n  }\n  .validation-success {\n    color: green;\n  }\n  .validation-failure {\n    color: red;\n  }\n  /*.custom-scanner {*/\n  /*  width: 100%;*/\n  /*  height: 2px;*/\n  /*  background: #4CAF50;*/\n  /*  position: absolute;*/\n  /*  -webkit-transition: all 200ms linear;*/\n  /*  -moz-transition: all 200ms linear;*/\n  /*  transition: all 200ms linear;*/\n  /*  -webkit-animation: scanner 3s infinite linear;*/\n  /*  -moz-animation: scanner 3s infinite linear;*/\n  /*  -o-animation: scanner 3s infinite linear;*/\n  /*  animation: scanner 3s infinite linear;*/\n  /*  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.4);*/\n  /*  !*display: none;*!*/\n  /*}*/\n  /*.app__overlay {*/\n  /*  position: fixed;*/\n  /*  top: 0;*/\n  /*  bottom: 0;*/\n  /*  right: 0;*/\n  /*  left: 0;*/\n  /*  transition: all 200ms ease-in;*/\n  /*  width: 320px;*/\n  /*  height: 320px;*/\n  /*  margin: auto;*/\n  /*}*/\n  /*.app__overlay-left,*/\n  /*.app__overlay-right {*/\n  /*  width: 52px;*/\n  /*  height: 340px;*/\n  /*  background: #7f7f7f;*/\n  /*}*/\n\n  /*.app__overlay-left {*/\n  /*  margin-left: -57px;*/\n  /*  margin-top: -10px;*/\n  /*}*/\n\n  /*.app__overlay-right {*/\n  /*  margin-right: -57px;*/\n  /*  margin-top: -340px;*/\n  /*  float: right;*/\n  /*}*/\n\n  /*.app__overlay {*/\n  /*  border: 0;*/\n  /*}*/\n  /*.app__help-text,*/\n  /*.app__select-photos {*/\n  /*  color: #fff;*/\n  /*  position: absolute;*/\n  /*  bottom: -70px;*/\n  /*  font-size: 18px;*/\n  /*  right: 0;*/\n  /*  text-align: center;*/\n  /*  user-select: none;*/\n  /*}*/\n\n  /*.app__help-text {*/\n  /*  display: none;*/\n  /*  left: 0;*/\n  /*}*/\n</style>\n\n<!--<style>-->\n<!--  .wrapper {-->\n<!--    /*display: block!important;*/-->\n<!--    /*min-height: 100%;*/-->\n<!--    poisition: absolute;-->\n<!--    left: 200px;-->\n<!--    top: 40px;-->\n<!--    height: 600px;-->\n<!--  }-->\n<!--</style>-->\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QrcodeScan.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QrcodeScan.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QrcodeScan.vue?vue&type=template&id=40bef51c&scoped=true&\"\nimport script from \"./QrcodeScan.vue?vue&type=script&lang=js&\"\nexport * from \"./QrcodeScan.vue?vue&type=script&lang=js&\"\nimport style0 from \"./QrcodeScan.vue?vue&type=style&index=0&id=40bef51c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"40bef51c\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/usr/local/gopath/src/ljb/Vue-spa-history/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VCard } from 'vuetify/lib'\nimport { VIcon } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VToolbar } from 'vuetify/lib'\nimport { VToolbarTitle } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VCard,VIcon,VSpacer,VToolbar,VToolbarTitle})\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","module.exports = true;\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QrcodeScan.vue?vue&type=style&index=0&id=40bef51c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QrcodeScan.vue?vue&type=style&index=0&id=40bef51c&scoped=true&lang=css&\"","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n"],"sourceRoot":""}